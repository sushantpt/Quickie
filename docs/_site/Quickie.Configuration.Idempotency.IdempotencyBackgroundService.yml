### YamlMime:ManagedReference
items:
- uid: Quickie.Configuration.Idempotency.IdempotencyBackgroundService
  commentId: T:Quickie.Configuration.Idempotency.IdempotencyBackgroundService
  id: IdempotencyBackgroundService
  parent: Quickie.Configuration.Idempotency
  children:
  - Quickie.Configuration.Idempotency.IdempotencyBackgroundService.#ctor(Quickie.Configuration.Idempotency.IIdempotencyProvider)
  - Quickie.Configuration.Idempotency.IdempotencyBackgroundService.ExecuteAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IdempotencyBackgroundService
  nameWithType: IdempotencyBackgroundService
  fullName: Quickie.Configuration.Idempotency.IdempotencyBackgroundService
  type: Class
  source:
    remote:
      path: src/Quickie/Configuration/Idempotency/IdempotencyBackgroundService.cs
      branch: gh-pages
      repo: https://github.com/sushantpt/Quickie.git
    id: IdempotencyBackgroundService
    path: ../src/Quickie/Configuration/Idempotency/IdempotencyBackgroundService.cs
    startLine: 8
  assemblies:
  - Quickie
  namespace: Quickie.Configuration.Idempotency
  summary: Background service to remove expired idempotency key.
  example: []
  syntax:
    content: 'public class IdempotencyBackgroundService : BackgroundService, IHostedService, IDisposable'
    content.vb: Public Class IdempotencyBackgroundService Inherits BackgroundService Implements IHostedService, IDisposable
  inheritance:
  - System.Object
  - Microsoft.Extensions.Hosting.BackgroundService
  implements:
  - Microsoft.Extensions.Hosting.IHostedService
  - System.IDisposable
  inheritedMembers:
  - Microsoft.Extensions.Hosting.BackgroundService.Dispose
  - Microsoft.Extensions.Hosting.BackgroundService.StartAsync(System.Threading.CancellationToken)
  - Microsoft.Extensions.Hosting.BackgroundService.StopAsync(System.Threading.CancellationToken)
  - Microsoft.Extensions.Hosting.BackgroundService.ExecuteTask
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Quickie.Configuration.Idempotency.IdempotencyBackgroundService.#ctor(Quickie.Configuration.Idempotency.IIdempotencyProvider)
  commentId: M:Quickie.Configuration.Idempotency.IdempotencyBackgroundService.#ctor(Quickie.Configuration.Idempotency.IIdempotencyProvider)
  id: '#ctor(Quickie.Configuration.Idempotency.IIdempotencyProvider)'
  parent: Quickie.Configuration.Idempotency.IdempotencyBackgroundService
  langs:
  - csharp
  - vb
  name: IdempotencyBackgroundService(IIdempotencyProvider)
  nameWithType: IdempotencyBackgroundService.IdempotencyBackgroundService(IIdempotencyProvider)
  fullName: Quickie.Configuration.Idempotency.IdempotencyBackgroundService.IdempotencyBackgroundService(Quickie.Configuration.Idempotency.IIdempotencyProvider)
  type: Constructor
  source:
    remote:
      path: src/Quickie/Configuration/Idempotency/IdempotencyBackgroundService.cs
      branch: gh-pages
      repo: https://github.com/sushantpt/Quickie.git
    id: .ctor
    path: ../src/Quickie/Configuration/Idempotency/IdempotencyBackgroundService.cs
    startLine: 8
  assemblies:
  - Quickie
  namespace: Quickie.Configuration.Idempotency
  summary: Background service to remove expired idempotency key.
  example: []
  syntax:
    content: public IdempotencyBackgroundService(IIdempotencyProvider idempotencyProvider)
    parameters:
    - id: idempotencyProvider
      type: Quickie.Configuration.Idempotency.IIdempotencyProvider
      description: ''
    content.vb: Public Sub New(idempotencyProvider As IIdempotencyProvider)
  overload: Quickie.Configuration.Idempotency.IdempotencyBackgroundService.#ctor*
  nameWithType.vb: IdempotencyBackgroundService.New(IIdempotencyProvider)
  fullName.vb: Quickie.Configuration.Idempotency.IdempotencyBackgroundService.New(Quickie.Configuration.Idempotency.IIdempotencyProvider)
  name.vb: New(IIdempotencyProvider)
- uid: Quickie.Configuration.Idempotency.IdempotencyBackgroundService.ExecuteAsync(System.Threading.CancellationToken)
  commentId: M:Quickie.Configuration.Idempotency.IdempotencyBackgroundService.ExecuteAsync(System.Threading.CancellationToken)
  id: ExecuteAsync(System.Threading.CancellationToken)
  parent: Quickie.Configuration.Idempotency.IdempotencyBackgroundService
  langs:
  - csharp
  - vb
  name: ExecuteAsync(CancellationToken)
  nameWithType: IdempotencyBackgroundService.ExecuteAsync(CancellationToken)
  fullName: Quickie.Configuration.Idempotency.IdempotencyBackgroundService.ExecuteAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Quickie/Configuration/Idempotency/IdempotencyBackgroundService.cs
      branch: gh-pages
      repo: https://github.com/sushantpt/Quickie.git
    id: ExecuteAsync
    path: ../src/Quickie/Configuration/Idempotency/IdempotencyBackgroundService.cs
    startLine: 12
  assemblies:
  - Quickie
  namespace: Quickie.Configuration.Idempotency
  summary: >-
    This method is called when the <xref href="Microsoft.Extensions.Hosting.IHostedService" data-throw-if-not-resolved="false"></xref> starts. The implementation should return a task that represents

    the lifetime of the long running operation(s) being performed.
  remarks: See <a href="https://learn.microsoft.com/dotnet/core/extensions/workers">Worker Services in .NET</a> for implementation guidelines.
  example: []
  syntax:
    content: protected override Task ExecuteAsync(CancellationToken stoppingToken)
    parameters:
    - id: stoppingToken
      type: System.Threading.CancellationToken
      description: Triggered when <xref href="Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref> is called.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the long running operations.
    content.vb: Protected Overrides Function ExecuteAsync(stoppingToken As CancellationToken) As Task
  overridden: Microsoft.Extensions.Hosting.BackgroundService.ExecuteAsync(System.Threading.CancellationToken)
  overload: Quickie.Configuration.Idempotency.IdempotencyBackgroundService.ExecuteAsync*
references:
- uid: Quickie.Configuration.Idempotency
  commentId: N:Quickie.Configuration.Idempotency
  href: Quickie.html
  name: Quickie.Configuration.Idempotency
  nameWithType: Quickie.Configuration.Idempotency
  fullName: Quickie.Configuration.Idempotency
  spec.csharp:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.Configuration
    name: Configuration
    href: Quickie.Configuration.html
  - name: .
  - uid: Quickie.Configuration.Idempotency
    name: Idempotency
    href: Quickie.Configuration.Idempotency.html
  spec.vb:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.Configuration
    name: Configuration
    href: Quickie.Configuration.html
  - name: .
  - uid: Quickie.Configuration.Idempotency
    name: Idempotency
    href: Quickie.Configuration.Idempotency.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Microsoft.Extensions.Hosting.BackgroundService
  commentId: T:Microsoft.Extensions.Hosting.BackgroundService
  parent: Microsoft.Extensions.Hosting
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice
  name: BackgroundService
  nameWithType: BackgroundService
  fullName: Microsoft.Extensions.Hosting.BackgroundService
- uid: Microsoft.Extensions.Hosting.IHostedService
  commentId: T:Microsoft.Extensions.Hosting.IHostedService
  parent: Microsoft.Extensions.Hosting
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.ihostedservice
  name: IHostedService
  nameWithType: IHostedService
  fullName: Microsoft.Extensions.Hosting.IHostedService
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.Extensions.Hosting.BackgroundService.Dispose
  commentId: M:Microsoft.Extensions.Hosting.BackgroundService.Dispose
  parent: Microsoft.Extensions.Hosting.BackgroundService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.dispose
  name: Dispose()
  nameWithType: BackgroundService.Dispose()
  fullName: Microsoft.Extensions.Hosting.BackgroundService.Dispose()
  spec.csharp:
  - uid: Microsoft.Extensions.Hosting.BackgroundService.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.Extensions.Hosting.BackgroundService.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.dispose
  - name: (
  - name: )
- uid: Microsoft.Extensions.Hosting.BackgroundService.StartAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Extensions.Hosting.BackgroundService.StartAsync(System.Threading.CancellationToken)
  parent: Microsoft.Extensions.Hosting.BackgroundService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.startasync
  name: StartAsync(CancellationToken)
  nameWithType: BackgroundService.StartAsync(CancellationToken)
  fullName: Microsoft.Extensions.Hosting.BackgroundService.StartAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Extensions.Hosting.BackgroundService.StartAsync(System.Threading.CancellationToken)
    name: StartAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.startasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.Extensions.Hosting.BackgroundService.StartAsync(System.Threading.CancellationToken)
    name: StartAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.startasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Microsoft.Extensions.Hosting.BackgroundService.StopAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Extensions.Hosting.BackgroundService.StopAsync(System.Threading.CancellationToken)
  parent: Microsoft.Extensions.Hosting.BackgroundService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.stopasync
  name: StopAsync(CancellationToken)
  nameWithType: BackgroundService.StopAsync(CancellationToken)
  fullName: Microsoft.Extensions.Hosting.BackgroundService.StopAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Extensions.Hosting.BackgroundService.StopAsync(System.Threading.CancellationToken)
    name: StopAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.stopasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.Extensions.Hosting.BackgroundService.StopAsync(System.Threading.CancellationToken)
    name: StopAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.stopasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Microsoft.Extensions.Hosting.BackgroundService.ExecuteTask
  commentId: P:Microsoft.Extensions.Hosting.BackgroundService.ExecuteTask
  parent: Microsoft.Extensions.Hosting.BackgroundService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.executetask
  name: ExecuteTask
  nameWithType: BackgroundService.ExecuteTask
  fullName: Microsoft.Extensions.Hosting.BackgroundService.ExecuteTask
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Hosting
  commentId: N:Microsoft.Extensions.Hosting
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Hosting
  nameWithType: Microsoft.Extensions.Hosting
  fullName: Microsoft.Extensions.Hosting
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Hosting
    name: Hosting
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Hosting
    name: Hosting
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting
- uid: Quickie.Configuration.Idempotency.IdempotencyBackgroundService.#ctor*
  commentId: Overload:Quickie.Configuration.Idempotency.IdempotencyBackgroundService.#ctor
  href: Quickie.Configuration.Idempotency.IdempotencyBackgroundService.html#Quickie_Configuration_Idempotency_IdempotencyBackgroundService__ctor_Quickie_Configuration_Idempotency_IIdempotencyProvider_
  name: IdempotencyBackgroundService
  nameWithType: IdempotencyBackgroundService.IdempotencyBackgroundService
  fullName: Quickie.Configuration.Idempotency.IdempotencyBackgroundService.IdempotencyBackgroundService
  nameWithType.vb: IdempotencyBackgroundService.New
  fullName.vb: Quickie.Configuration.Idempotency.IdempotencyBackgroundService.New
  name.vb: New
- uid: Quickie.Configuration.Idempotency.IIdempotencyProvider
  commentId: T:Quickie.Configuration.Idempotency.IIdempotencyProvider
  parent: Quickie.Configuration.Idempotency
  href: Quickie.Configuration.Idempotency.IIdempotencyProvider.html
  name: IIdempotencyProvider
  nameWithType: IIdempotencyProvider
  fullName: Quickie.Configuration.Idempotency.IIdempotencyProvider
- uid: Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.ihostedservice.stopasync
  name: StopAsync(CancellationToken)
  nameWithType: IHostedService.StopAsync(CancellationToken)
  fullName: Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
    name: StopAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.ihostedservice.stopasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
    name: StopAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.ihostedservice.stopasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Extensions.Hosting.BackgroundService.ExecuteAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Extensions.Hosting.BackgroundService.ExecuteAsync(System.Threading.CancellationToken)
  parent: Microsoft.Extensions.Hosting.BackgroundService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.executeasync
  name: ExecuteAsync(CancellationToken)
  nameWithType: BackgroundService.ExecuteAsync(CancellationToken)
  fullName: Microsoft.Extensions.Hosting.BackgroundService.ExecuteAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Extensions.Hosting.BackgroundService.ExecuteAsync(System.Threading.CancellationToken)
    name: ExecuteAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.executeasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.Extensions.Hosting.BackgroundService.ExecuteAsync(System.Threading.CancellationToken)
    name: ExecuteAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.executeasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Quickie.Configuration.Idempotency.IdempotencyBackgroundService.ExecuteAsync*
  commentId: Overload:Quickie.Configuration.Idempotency.IdempotencyBackgroundService.ExecuteAsync
  href: Quickie.Configuration.Idempotency.IdempotencyBackgroundService.html#Quickie_Configuration_Idempotency_IdempotencyBackgroundService_ExecuteAsync_System_Threading_CancellationToken_
  name: ExecuteAsync
  nameWithType: IdempotencyBackgroundService.ExecuteAsync
  fullName: Quickie.Configuration.Idempotency.IdempotencyBackgroundService.ExecuteAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
