### YamlMime:ManagedReference
items:
- uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4
  commentId: T:Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4
  id: EditOnlyRequestHandler`4
  parent: Quickie.Handlers.Editonly.Implementation
  children:
  - Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.#ctor(Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{`1,`3})
  - Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.EditAsync(`3,`0,System.Nullable{System.Threading.CancellationToken})
  - Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.EditCollectionAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  - Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToCollectionOfDto(System.Collections.Generic.ICollection{`1})
  - Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToCollectionOfEntity(System.Collections.Generic.ICollection{`0})
  - Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToDto(`1)
  - Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToEntity(`0)
  langs:
  - csharp
  - vb
  name: EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>
  nameWithType: EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>
  fullName: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>
  type: Class
  source:
    remote:
      path: src/Quickie/Handlers/Editonly/Implementation/EditOnlyRequestHandler.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: EditOnlyRequestHandler
    path: ../src/Quickie/Handlers/Editonly/Implementation/EditOnlyRequestHandler.cs
    startLine: 10
  assemblies:
  - Quickie
  namespace: Quickie.Handlers.Editonly.Implementation
  summary: Abstract class serving as edit only request handler.
  example: []
  syntax:
    content: 'public abstract class EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType> : IEditOnlyRequestHandler<TViewModel, TIdType> where TViewModel : EditOnlyDto where TEntity : EditOnlyEntity where TDataHandler : IEditOnlyDataHandler<TEntity, TIdType> where TIdType : IComparable'
    typeParameters:
    - id: TViewModel
      description: View model or dto
    - id: TEntity
      description: Entity
    - id: TDataHandler
      description: Data handler (Repository layer)
    - id: TIdType
      description: 'Type of identifier. eg: int, string, ...'
    content.vb: Public MustInherit Class EditOnlyRequestHandler(Of TViewModel As EditOnlyDto, TEntity As EditOnlyEntity, TDataHandler As IEditOnlyDataHandler(Of TEntity, TIdType), TIdType As IComparable) Implements IEditOnlyRequestHandler(Of TViewModel, TIdType)
  inheritance:
  - System.Object
  implements:
  - Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler{{TViewModel},{TIdType}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType)
  fullName.vb: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType)
  name.vb: EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType)
- uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.#ctor(Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{`1,`3})
  commentId: M:Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.#ctor(Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{`1,`3})
  id: '#ctor(Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{`1,`3})'
  parent: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4
  langs:
  - csharp
  - vb
  name: EditOnlyRequestHandler(IEditOnlyDataHandler<TEntity, TIdType>)
  nameWithType: EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.EditOnlyRequestHandler(IEditOnlyDataHandler<TEntity, TIdType>)
  fullName: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.EditOnlyRequestHandler(Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler<TEntity, TIdType>)
  type: Constructor
  source:
    remote:
      path: src/Quickie/Handlers/Editonly/Implementation/EditOnlyRequestHandler.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: .ctor
    path: ../src/Quickie/Handlers/Editonly/Implementation/EditOnlyRequestHandler.cs
    startLine: 10
  assemblies:
  - Quickie
  namespace: Quickie.Handlers.Editonly.Implementation
  summary: Abstract class serving as edit only request handler.
  example: []
  syntax:
    content: protected EditOnlyRequestHandler(IEditOnlyDataHandler<TEntity, TIdType> dataHandler)
    parameters:
    - id: dataHandler
      type: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{{TEntity},{TIdType}}
      description: Data handler (Repository layer)
    content.vb: Protected Sub New(dataHandler As IEditOnlyDataHandler(Of TEntity, TIdType))
  overload: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.#ctor*
  nameWithType.vb: EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).New(IEditOnlyDataHandler(Of TEntity, TIdType))
  fullName.vb: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).New(Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler(Of TEntity, TIdType))
  name.vb: New(IEditOnlyDataHandler(Of TEntity, TIdType))
- uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.EditAsync(`3,`0,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.EditAsync(`3,`0,System.Nullable{System.Threading.CancellationToken})
  id: EditAsync(`3,`0,System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4
  langs:
  - csharp
  - vb
  name: EditAsync(TIdType, TViewModel, CancellationToken?)
  nameWithType: EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.EditAsync(TIdType, TViewModel, CancellationToken?)
  fullName: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.EditAsync(TIdType, TViewModel, System.Threading.CancellationToken?)
  type: Method
  source:
    remote:
      path: src/Quickie/Handlers/Editonly/Implementation/EditOnlyRequestHandler.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: EditAsync
    path: ../src/Quickie/Handlers/Editonly/Implementation/EditOnlyRequestHandler.cs
    startLine: 19
  assemblies:
  - Quickie
  namespace: Quickie.Handlers.Editonly.Implementation
  summary: Update request.
  example: []
  syntax:
    content: public Task<ResponseObj<TViewModel>> EditAsync(TIdType id, TViewModel requestModel, CancellationToken? cancellationToken = null)
    parameters:
    - id: id
      type: '{TIdType}'
      description: Identifier of the entity.
    - id: requestModel
      type: '{TViewModel}'
      description: Requested data to update
    - id: cancellationToken
      type: System.Nullable{System.Threading.CancellationToken}
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj{{TViewModel}}}
      description: ''
    content.vb: Public Function EditAsync(id As TIdType, requestModel As TViewModel, cancellationToken As CancellationToken? = Nothing) As Task(Of ResponseObj(Of TViewModel))
  overload: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.EditAsync*
  implements:
  - Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler{{TViewModel},{TIdType}}.EditAsync({TIdType},{TViewModel},System.Nullable{System.Threading.CancellationToken})
  nameWithType.vb: EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).EditAsync(TIdType, TViewModel, CancellationToken?)
  fullName.vb: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).EditAsync(TIdType, TViewModel, System.Threading.CancellationToken?)
- uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.EditCollectionAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.EditCollectionAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  id: EditCollectionAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4
  langs:
  - csharp
  - vb
  name: EditCollectionAsync(ICollection<TViewModel>, CancellationToken?)
  nameWithType: EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.EditCollectionAsync(ICollection<TViewModel>, CancellationToken?)
  fullName: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.EditCollectionAsync(System.Collections.Generic.ICollection<TViewModel>, System.Threading.CancellationToken?)
  type: Method
  source:
    remote:
      path: src/Quickie/Handlers/Editonly/Implementation/EditOnlyRequestHandler.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: EditCollectionAsync
    path: ../src/Quickie/Handlers/Editonly/Implementation/EditOnlyRequestHandler.cs
    startLine: 52
  assemblies:
  - Quickie
  namespace: Quickie.Handlers.Editonly.Implementation
  summary: Update collection of data.
  example: []
  syntax:
    content: public Task<ResponseObj<ICollection<TViewModel>>> EditCollectionAsync(ICollection<TViewModel> requestModels, CancellationToken? cancellationToken = null)
    parameters:
    - id: requestModels
      type: System.Collections.Generic.ICollection{{TViewModel}}
      description: Collection of requested data to update
    - id: cancellationToken
      type: System.Nullable{System.Threading.CancellationToken}
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj{System.Collections.Generic.ICollection{{TViewModel}}}}
      description: ''
    content.vb: Public Function EditCollectionAsync(requestModels As ICollection(Of TViewModel), cancellationToken As CancellationToken? = Nothing) As Task(Of ResponseObj(Of ICollection(Of TViewModel)))
  overload: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.EditCollectionAsync*
  implements:
  - Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler{{TViewModel},{TIdType}}.EditCollectionAsync(System.Collections.Generic.ICollection{{TViewModel}},System.Nullable{System.Threading.CancellationToken})
  nameWithType.vb: EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).EditCollectionAsync(ICollection(Of TViewModel), CancellationToken?)
  fullName.vb: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).EditCollectionAsync(System.Collections.Generic.ICollection(Of TViewModel), System.Threading.CancellationToken?)
  name.vb: EditCollectionAsync(ICollection(Of TViewModel), CancellationToken?)
- uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToEntity(`0)
  commentId: M:Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToEntity(`0)
  id: MapToEntity(`0)
  parent: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4
  langs:
  - csharp
  - vb
  name: MapToEntity(TViewModel)
  nameWithType: EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToEntity(TViewModel)
  fullName: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToEntity(TViewModel)
  type: Method
  source:
    remote:
      path: src/Quickie/Handlers/Editonly/Implementation/EditOnlyRequestHandler.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: MapToEntity
    path: ../src/Quickie/Handlers/Editonly/Implementation/EditOnlyRequestHandler.cs
    startLine: 79
  assemblies:
  - Quickie
  namespace: Quickie.Handlers.Editonly.Implementation
  summary: Maps a <code class="typeparamref">TViewModel</code> to a <code class="typeparamref">TEntity</code> entity.
  example: []
  syntax:
    content: protected abstract TEntity MapToEntity(TViewModel requestModel)
    parameters:
    - id: requestModel
      type: '{TViewModel}'
      description: The view model/dto to map to an entity
    return:
      type: '{TEntity}'
      description: Entity.
    content.vb: Protected MustOverride Function MapToEntity(requestModel As TViewModel) As TEntity
  overload: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToEntity*
  nameWithType.vb: EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToEntity(TViewModel)
  fullName.vb: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToEntity(TViewModel)
- uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToDto(`1)
  commentId: M:Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToDto(`1)
  id: MapToDto(`1)
  parent: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4
  langs:
  - csharp
  - vb
  name: MapToDto(TEntity)
  nameWithType: EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToDto(TEntity)
  fullName: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToDto(TEntity)
  type: Method
  source:
    remote:
      path: src/Quickie/Handlers/Editonly/Implementation/EditOnlyRequestHandler.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: MapToDto
    path: ../src/Quickie/Handlers/Editonly/Implementation/EditOnlyRequestHandler.cs
    startLine: 86
  assemblies:
  - Quickie
  namespace: Quickie.Handlers.Editonly.Implementation
  summary: Maps a <code class="typeparamref">TEntity</code> entity to a <code class="typeparamref">TViewModel</code> view model/dto.
  example: []
  syntax:
    content: protected abstract TViewModel MapToDto(TEntity entity)
    parameters:
    - id: entity
      type: '{TEntity}'
      description: Entity.
    return:
      type: '{TViewModel}'
      description: View model/dto.
    content.vb: Protected MustOverride Function MapToDto(entity As TEntity) As TViewModel
  overload: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToDto*
  nameWithType.vb: EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToDto(TEntity)
  fullName.vb: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToDto(TEntity)
- uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToCollectionOfEntity(System.Collections.Generic.ICollection{`0})
  commentId: M:Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToCollectionOfEntity(System.Collections.Generic.ICollection{`0})
  id: MapToCollectionOfEntity(System.Collections.Generic.ICollection{`0})
  parent: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4
  langs:
  - csharp
  - vb
  name: MapToCollectionOfEntity(ICollection<TViewModel>)
  nameWithType: EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToCollectionOfEntity(ICollection<TViewModel>)
  fullName: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToCollectionOfEntity(System.Collections.Generic.ICollection<TViewModel>)
  type: Method
  source:
    remote:
      path: src/Quickie/Handlers/Editonly/Implementation/EditOnlyRequestHandler.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: MapToCollectionOfEntity
    path: ../src/Quickie/Handlers/Editonly/Implementation/EditOnlyRequestHandler.cs
    startLine: 93
  assemblies:
  - Quickie
  namespace: Quickie.Handlers.Editonly.Implementation
  summary: Maps a collection of <code class="typeparamref">TViewModel</code> to a collection of <code class="typeparamref">TEntity</code> entities.
  example: []
  syntax:
    content: protected abstract ICollection<TEntity> MapToCollectionOfEntity(ICollection<TViewModel> requestModels)
    parameters:
    - id: requestModels
      type: System.Collections.Generic.ICollection{{TViewModel}}
      description: Collection of view model/dto
    return:
      type: System.Collections.Generic.ICollection{{TEntity}}
      description: Collection of entity.
    content.vb: Protected MustOverride Function MapToCollectionOfEntity(requestModels As ICollection(Of TViewModel)) As ICollection(Of TEntity)
  overload: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToCollectionOfEntity*
  nameWithType.vb: EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToCollectionOfEntity(ICollection(Of TViewModel))
  fullName.vb: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToCollectionOfEntity(System.Collections.Generic.ICollection(Of TViewModel))
  name.vb: MapToCollectionOfEntity(ICollection(Of TViewModel))
- uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToCollectionOfDto(System.Collections.Generic.ICollection{`1})
  commentId: M:Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToCollectionOfDto(System.Collections.Generic.ICollection{`1})
  id: MapToCollectionOfDto(System.Collections.Generic.ICollection{`1})
  parent: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4
  langs:
  - csharp
  - vb
  name: MapToCollectionOfDto(ICollection<TEntity>)
  nameWithType: EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToCollectionOfDto(ICollection<TEntity>)
  fullName: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToCollectionOfDto(System.Collections.Generic.ICollection<TEntity>)
  type: Method
  source:
    remote:
      path: src/Quickie/Handlers/Editonly/Implementation/EditOnlyRequestHandler.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: MapToCollectionOfDto
    path: ../src/Quickie/Handlers/Editonly/Implementation/EditOnlyRequestHandler.cs
    startLine: 100
  assemblies:
  - Quickie
  namespace: Quickie.Handlers.Editonly.Implementation
  summary: Maps a collection of <code class="typeparamref">TEntity</code> entities to a collection of <code class="typeparamref">TViewModel</code> view models.
  example: []
  syntax:
    content: protected abstract ICollection<TViewModel> MapToCollectionOfDto(ICollection<TEntity> entities)
    parameters:
    - id: entities
      type: System.Collections.Generic.ICollection{{TEntity}}
      description: Collection of entity.
    return:
      type: System.Collections.Generic.ICollection{{TViewModel}}
      description: Collection of view model/dto.
    content.vb: Protected MustOverride Function MapToCollectionOfDto(entities As ICollection(Of TEntity)) As ICollection(Of TViewModel)
  overload: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToCollectionOfDto*
  nameWithType.vb: EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToCollectionOfDto(ICollection(Of TEntity))
  fullName.vb: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToCollectionOfDto(System.Collections.Generic.ICollection(Of TEntity))
  name.vb: MapToCollectionOfDto(ICollection(Of TEntity))
references:
- uid: Quickie.Handlers.Editonly.Implementation
  commentId: N:Quickie.Handlers.Editonly.Implementation
  href: Quickie.html
  name: Quickie.Handlers.Editonly.Implementation
  nameWithType: Quickie.Handlers.Editonly.Implementation
  fullName: Quickie.Handlers.Editonly.Implementation
  spec.csharp:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.Handlers
    name: Handlers
    href: Quickie.Handlers.html
  - name: .
  - uid: Quickie.Handlers.Editonly
    name: Editonly
    href: Quickie.Handlers.Editonly.html
  - name: .
  - uid: Quickie.Handlers.Editonly.Implementation
    name: Implementation
    href: Quickie.Handlers.Editonly.Implementation.html
  spec.vb:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.Handlers
    name: Handlers
    href: Quickie.Handlers.html
  - name: .
  - uid: Quickie.Handlers.Editonly
    name: Editonly
    href: Quickie.Handlers.Editonly.html
  - name: .
  - uid: Quickie.Handlers.Editonly.Implementation
    name: Implementation
    href: Quickie.Handlers.Editonly.Implementation.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler{{TViewModel},{TIdType}}
  commentId: T:Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler{`0,`2}
  parent: Quickie.Handlers.Editonly.Definition
  definition: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler`2
  href: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler-2.html
  name: IEditOnlyRequestHandler<TViewModel, TIdType>
  nameWithType: IEditOnlyRequestHandler<TViewModel, TIdType>
  fullName: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler<TViewModel, TIdType>
  nameWithType.vb: IEditOnlyRequestHandler(Of TViewModel, TIdType)
  fullName.vb: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler(Of TViewModel, TIdType)
  name.vb: IEditOnlyRequestHandler(Of TViewModel, TIdType)
  spec.csharp:
  - uid: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler`2
    name: IEditOnlyRequestHandler
    href: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler-2.html
  - name: <
  - name: TViewModel
  - name: ','
  - name: " "
  - name: TIdType
  - name: '>'
  spec.vb:
  - uid: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler`2
    name: IEditOnlyRequestHandler
    href: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TViewModel
  - name: ','
  - name: " "
  - name: TIdType
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler`2
  commentId: T:Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler`2
  href: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler-2.html
  name: IEditOnlyRequestHandler<TViewModel, TIdType>
  nameWithType: IEditOnlyRequestHandler<TViewModel, TIdType>
  fullName: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler<TViewModel, TIdType>
  nameWithType.vb: IEditOnlyRequestHandler(Of TViewModel, TIdType)
  fullName.vb: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler(Of TViewModel, TIdType)
  name.vb: IEditOnlyRequestHandler(Of TViewModel, TIdType)
  spec.csharp:
  - uid: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler`2
    name: IEditOnlyRequestHandler
    href: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler-2.html
  - name: <
  - name: TViewModel
  - name: ','
  - name: " "
  - name: TIdType
  - name: '>'
  spec.vb:
  - uid: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler`2
    name: IEditOnlyRequestHandler
    href: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TViewModel
  - name: ','
  - name: " "
  - name: TIdType
  - name: )
- uid: Quickie.Handlers.Editonly.Definition
  commentId: N:Quickie.Handlers.Editonly.Definition
  href: Quickie.html
  name: Quickie.Handlers.Editonly.Definition
  nameWithType: Quickie.Handlers.Editonly.Definition
  fullName: Quickie.Handlers.Editonly.Definition
  spec.csharp:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.Handlers
    name: Handlers
    href: Quickie.Handlers.html
  - name: .
  - uid: Quickie.Handlers.Editonly
    name: Editonly
    href: Quickie.Handlers.Editonly.html
  - name: .
  - uid: Quickie.Handlers.Editonly.Definition
    name: Definition
    href: Quickie.Handlers.Editonly.Definition.html
  spec.vb:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.Handlers
    name: Handlers
    href: Quickie.Handlers.html
  - name: .
  - uid: Quickie.Handlers.Editonly
    name: Editonly
    href: Quickie.Handlers.Editonly.html
  - name: .
  - uid: Quickie.Handlers.Editonly.Definition
    name: Definition
    href: Quickie.Handlers.Editonly.Definition.html
- uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.#ctor*
  commentId: Overload:Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.#ctor
  href: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler-4.html#Quickie_Handlers_Editonly_Implementation_EditOnlyRequestHandler_4__ctor_Quickie_DataHandlers_Editonly_Definition_IEditOnlyDataHandler__1__3__
  name: EditOnlyRequestHandler
  nameWithType: EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.EditOnlyRequestHandler
  fullName: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.EditOnlyRequestHandler
  nameWithType.vb: EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).New
  fullName.vb: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).New
  name.vb: New
- uid: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{{TEntity},{TIdType}}
  commentId: T:Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{`0,`1}
  parent: Quickie.DataHandlers.Editonly.Definition
  definition: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler`2
  href: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler-2.html
  name: IEditOnlyDataHandler<TEntity, TIdType>
  nameWithType: IEditOnlyDataHandler<TEntity, TIdType>
  fullName: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler<TEntity, TIdType>
  nameWithType.vb: IEditOnlyDataHandler(Of TEntity, TIdType)
  fullName.vb: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler(Of TEntity, TIdType)
  name.vb: IEditOnlyDataHandler(Of TEntity, TIdType)
  spec.csharp:
  - uid: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler`2
    name: IEditOnlyDataHandler
    href: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler-2.html
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TIdType
  - name: '>'
  spec.vb:
  - uid: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler`2
    name: IEditOnlyDataHandler
    href: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TIdType
  - name: )
- uid: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler`2
  commentId: T:Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler`2
  href: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler-2.html
  name: IEditOnlyDataHandler<TEntity, TIdType>
  nameWithType: IEditOnlyDataHandler<TEntity, TIdType>
  fullName: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler<TEntity, TIdType>
  nameWithType.vb: IEditOnlyDataHandler(Of TEntity, TIdType)
  fullName.vb: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler(Of TEntity, TIdType)
  name.vb: IEditOnlyDataHandler(Of TEntity, TIdType)
  spec.csharp:
  - uid: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler`2
    name: IEditOnlyDataHandler
    href: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler-2.html
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TIdType
  - name: '>'
  spec.vb:
  - uid: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler`2
    name: IEditOnlyDataHandler
    href: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TIdType
  - name: )
- uid: Quickie.DataHandlers.Editonly.Definition
  commentId: N:Quickie.DataHandlers.Editonly.Definition
  href: Quickie.html
  name: Quickie.DataHandlers.Editonly.Definition
  nameWithType: Quickie.DataHandlers.Editonly.Definition
  fullName: Quickie.DataHandlers.Editonly.Definition
  spec.csharp:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.DataHandlers
    name: DataHandlers
    href: Quickie.DataHandlers.html
  - name: .
  - uid: Quickie.DataHandlers.Editonly
    name: Editonly
    href: Quickie.DataHandlers.Editonly.html
  - name: .
  - uid: Quickie.DataHandlers.Editonly.Definition
    name: Definition
    href: Quickie.DataHandlers.Editonly.Definition.html
  spec.vb:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.DataHandlers
    name: DataHandlers
    href: Quickie.DataHandlers.html
  - name: .
  - uid: Quickie.DataHandlers.Editonly
    name: Editonly
    href: Quickie.DataHandlers.Editonly.html
  - name: .
  - uid: Quickie.DataHandlers.Editonly.Definition
    name: Definition
    href: Quickie.DataHandlers.Editonly.Definition.html
- uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.EditAsync*
  commentId: Overload:Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.EditAsync
  href: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler-4.html#Quickie_Handlers_Editonly_Implementation_EditOnlyRequestHandler_4_EditAsync__3__0_System_Nullable_System_Threading_CancellationToken__
  name: EditAsync
  nameWithType: EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.EditAsync
  fullName: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.EditAsync
  nameWithType.vb: EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).EditAsync
  fullName.vb: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).EditAsync
- uid: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler{{TViewModel},{TIdType}}.EditAsync({TIdType},{TViewModel},System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler{`0,`3}.EditAsync(`3,`0,System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler{{TViewModel},{TIdType}}
  definition: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler`2.EditAsync(`1,`0,System.Nullable{System.Threading.CancellationToken})
  href: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler-2.html#Quickie_Handlers_Editonly_Definition_IEditOnlyRequestHandler_2_EditAsync__1__0_System_Nullable_System_Threading_CancellationToken__
  name: EditAsync(TIdType, TViewModel, CancellationToken?)
  nameWithType: IEditOnlyRequestHandler<TViewModel, TIdType>.EditAsync(TIdType, TViewModel, CancellationToken?)
  fullName: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler<TViewModel, TIdType>.EditAsync(TIdType, TViewModel, System.Threading.CancellationToken?)
  nameWithType.vb: IEditOnlyRequestHandler(Of TViewModel, TIdType).EditAsync(TIdType, TViewModel, CancellationToken?)
  fullName.vb: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler(Of TViewModel, TIdType).EditAsync(TIdType, TViewModel, System.Threading.CancellationToken?)
  spec.csharp:
  - uid: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler{`0,`3}.EditAsync(`3,`0,System.Nullable{System.Threading.CancellationToken})
    name: EditAsync
    href: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler-2.html#Quickie_Handlers_Editonly_Definition_IEditOnlyRequestHandler_2_EditAsync__1__0_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TIdType
  - name: ','
  - name: " "
  - name: TViewModel
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler{`0,`3}.EditAsync(`3,`0,System.Nullable{System.Threading.CancellationToken})
    name: EditAsync
    href: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler-2.html#Quickie_Handlers_Editonly_Definition_IEditOnlyRequestHandler_2_EditAsync__1__0_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TIdType
  - name: ','
  - name: " "
  - name: TViewModel
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: '{TIdType}'
  commentId: '!:TIdType'
  definition: TIdType
  name: TIdType
  nameWithType: TIdType
  fullName: TIdType
- uid: '{TViewModel}'
  commentId: '!:TViewModel'
  definition: TViewModel
  name: TViewModel
  nameWithType: TViewModel
  fullName: TViewModel
- uid: System.Nullable{System.Threading.CancellationToken}
  commentId: T:System.Nullable{System.Threading.CancellationToken}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken?
  nameWithType: CancellationToken?
  fullName: System.Threading.CancellationToken?
  spec.csharp:
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  spec.vb:
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
- uid: System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj{{TViewModel}}}
  commentId: T:System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj{`0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ResponseObj<TViewModel>>
  nameWithType: Task<ResponseObj<TViewModel>>
  fullName: System.Threading.Tasks.Task<Quickie.DataObj.ResponseObj<TViewModel>>
  nameWithType.vb: Task(Of ResponseObj(Of TViewModel))
  fullName.vb: System.Threading.Tasks.Task(Of Quickie.DataObj.ResponseObj(Of TViewModel))
  name.vb: Task(Of ResponseObj(Of TViewModel))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Quickie.DataObj.ResponseObj`1
    name: ResponseObj
    href: Quickie.DataObj.ResponseObj-1.html
  - name: <
  - name: TViewModel
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Quickie.DataObj.ResponseObj`1
    name: ResponseObj
    href: Quickie.DataObj.ResponseObj-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TViewModel
  - name: )
  - name: )
- uid: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler`2.EditAsync(`1,`0,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler`2.EditAsync(`1,`0,System.Nullable{System.Threading.CancellationToken})
  isExternal: true
  href: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler-2.html#Quickie_Handlers_Editonly_Definition_IEditOnlyRequestHandler_2_EditAsync__1__0_System_Nullable_System_Threading_CancellationToken__
  name: EditAsync(TIdType, TViewModel, CancellationToken?)
  nameWithType: IEditOnlyRequestHandler<TViewModel, TIdType>.EditAsync(TIdType, TViewModel, CancellationToken?)
  fullName: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler<TViewModel, TIdType>.EditAsync(TIdType, TViewModel, System.Threading.CancellationToken?)
  nameWithType.vb: IEditOnlyRequestHandler(Of TViewModel, TIdType).EditAsync(TIdType, TViewModel, CancellationToken?)
  fullName.vb: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler(Of TViewModel, TIdType).EditAsync(TIdType, TViewModel, System.Threading.CancellationToken?)
  spec.csharp:
  - uid: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler`2.EditAsync(`1,`0,System.Nullable{System.Threading.CancellationToken})
    name: EditAsync
    href: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler-2.html#Quickie_Handlers_Editonly_Definition_IEditOnlyRequestHandler_2_EditAsync__1__0_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TIdType
  - name: ','
  - name: " "
  - name: TViewModel
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler`2.EditAsync(`1,`0,System.Nullable{System.Threading.CancellationToken})
    name: EditAsync
    href: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler-2.html#Quickie_Handlers_Editonly_Definition_IEditOnlyRequestHandler_2_EditAsync__1__0_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TIdType
  - name: ','
  - name: " "
  - name: TViewModel
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: TIdType
  name: TIdType
  nameWithType: TIdType
  fullName: TIdType
- uid: TViewModel
  name: TViewModel
  nameWithType: TViewModel
  fullName: TViewModel
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.EditCollectionAsync*
  commentId: Overload:Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.EditCollectionAsync
  href: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler-4.html#Quickie_Handlers_Editonly_Implementation_EditOnlyRequestHandler_4_EditCollectionAsync_System_Collections_Generic_ICollection__0__System_Nullable_System_Threading_CancellationToken__
  name: EditCollectionAsync
  nameWithType: EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.EditCollectionAsync
  fullName: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.EditCollectionAsync
  nameWithType.vb: EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).EditCollectionAsync
  fullName.vb: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).EditCollectionAsync
- uid: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler{{TViewModel},{TIdType}}.EditCollectionAsync(System.Collections.Generic.ICollection{{TViewModel}},System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler{`0,`3}.EditCollectionAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler{{TViewModel},{TIdType}}
  definition: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler`2.EditCollectionAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  href: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler-2.html#Quickie_Handlers_Editonly_Definition_IEditOnlyRequestHandler_2_EditCollectionAsync_System_Collections_Generic_ICollection__0__System_Nullable_System_Threading_CancellationToken__
  name: EditCollectionAsync(ICollection<TViewModel>, CancellationToken?)
  nameWithType: IEditOnlyRequestHandler<TViewModel, TIdType>.EditCollectionAsync(ICollection<TViewModel>, CancellationToken?)
  fullName: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler<TViewModel, TIdType>.EditCollectionAsync(System.Collections.Generic.ICollection<TViewModel>, System.Threading.CancellationToken?)
  nameWithType.vb: IEditOnlyRequestHandler(Of TViewModel, TIdType).EditCollectionAsync(ICollection(Of TViewModel), CancellationToken?)
  fullName.vb: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler(Of TViewModel, TIdType).EditCollectionAsync(System.Collections.Generic.ICollection(Of TViewModel), System.Threading.CancellationToken?)
  name.vb: EditCollectionAsync(ICollection(Of TViewModel), CancellationToken?)
  spec.csharp:
  - uid: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler{`0,`3}.EditCollectionAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
    name: EditCollectionAsync
    href: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler-2.html#Quickie_Handlers_Editonly_Definition_IEditOnlyRequestHandler_2_EditCollectionAsync_System_Collections_Generic_ICollection__0__System_Nullable_System_Threading_CancellationToken__
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TViewModel
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler{`0,`3}.EditCollectionAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
    name: EditCollectionAsync
    href: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler-2.html#Quickie_Handlers_Editonly_Definition_IEditOnlyRequestHandler_2_EditCollectionAsync_System_Collections_Generic_ICollection__0__System_Nullable_System_Threading_CancellationToken__
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TViewModel
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: System.Collections.Generic.ICollection{{TViewModel}}
  commentId: T:System.Collections.Generic.ICollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<TViewModel>
  nameWithType: ICollection<TViewModel>
  fullName: System.Collections.Generic.ICollection<TViewModel>
  nameWithType.vb: ICollection(Of TViewModel)
  fullName.vb: System.Collections.Generic.ICollection(Of TViewModel)
  name.vb: ICollection(Of TViewModel)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TViewModel
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TViewModel
  - name: )
- uid: System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj{System.Collections.Generic.ICollection{{TViewModel}}}}
  commentId: T:System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj{System.Collections.Generic.ICollection{`0}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ResponseObj<ICollection<TViewModel>>>
  nameWithType: Task<ResponseObj<ICollection<TViewModel>>>
  fullName: System.Threading.Tasks.Task<Quickie.DataObj.ResponseObj<System.Collections.Generic.ICollection<TViewModel>>>
  nameWithType.vb: Task(Of ResponseObj(Of ICollection(Of TViewModel)))
  fullName.vb: System.Threading.Tasks.Task(Of Quickie.DataObj.ResponseObj(Of System.Collections.Generic.ICollection(Of TViewModel)))
  name.vb: Task(Of ResponseObj(Of ICollection(Of TViewModel)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Quickie.DataObj.ResponseObj`1
    name: ResponseObj
    href: Quickie.DataObj.ResponseObj-1.html
  - name: <
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TViewModel
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Quickie.DataObj.ResponseObj`1
    name: ResponseObj
    href: Quickie.DataObj.ResponseObj-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TViewModel
  - name: )
  - name: )
  - name: )
- uid: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler`2.EditCollectionAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler`2.EditCollectionAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  isExternal: true
  href: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler-2.html#Quickie_Handlers_Editonly_Definition_IEditOnlyRequestHandler_2_EditCollectionAsync_System_Collections_Generic_ICollection__0__System_Nullable_System_Threading_CancellationToken__
  name: EditCollectionAsync(ICollection<TViewModel>, CancellationToken?)
  nameWithType: IEditOnlyRequestHandler<TViewModel, TIdType>.EditCollectionAsync(ICollection<TViewModel>, CancellationToken?)
  fullName: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler<TViewModel, TIdType>.EditCollectionAsync(System.Collections.Generic.ICollection<TViewModel>, System.Threading.CancellationToken?)
  nameWithType.vb: IEditOnlyRequestHandler(Of TViewModel, TIdType).EditCollectionAsync(ICollection(Of TViewModel), CancellationToken?)
  fullName.vb: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler(Of TViewModel, TIdType).EditCollectionAsync(System.Collections.Generic.ICollection(Of TViewModel), System.Threading.CancellationToken?)
  name.vb: EditCollectionAsync(ICollection(Of TViewModel), CancellationToken?)
  spec.csharp:
  - uid: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler`2.EditCollectionAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
    name: EditCollectionAsync
    href: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler-2.html#Quickie_Handlers_Editonly_Definition_IEditOnlyRequestHandler_2_EditCollectionAsync_System_Collections_Generic_ICollection__0__System_Nullable_System_Threading_CancellationToken__
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TViewModel
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler`2.EditCollectionAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
    name: EditCollectionAsync
    href: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler-2.html#Quickie_Handlers_Editonly_Definition_IEditOnlyRequestHandler_2_EditCollectionAsync_System_Collections_Generic_ICollection__0__System_Nullable_System_Threading_CancellationToken__
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TViewModel
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToEntity*
  commentId: Overload:Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToEntity
  href: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler-4.html#Quickie_Handlers_Editonly_Implementation_EditOnlyRequestHandler_4_MapToEntity__0_
  name: MapToEntity
  nameWithType: EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToEntity
  fullName: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToEntity
  nameWithType.vb: EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToEntity
  fullName.vb: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToEntity
- uid: '{TEntity}'
  commentId: '!:TEntity'
  definition: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToDto*
  commentId: Overload:Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToDto
  href: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler-4.html#Quickie_Handlers_Editonly_Implementation_EditOnlyRequestHandler_4_MapToDto__1_
  name: MapToDto
  nameWithType: EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToDto
  fullName: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToDto
  nameWithType.vb: EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToDto
  fullName.vb: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToDto
- uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToCollectionOfEntity*
  commentId: Overload:Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToCollectionOfEntity
  href: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler-4.html#Quickie_Handlers_Editonly_Implementation_EditOnlyRequestHandler_4_MapToCollectionOfEntity_System_Collections_Generic_ICollection__0__
  name: MapToCollectionOfEntity
  nameWithType: EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToCollectionOfEntity
  fullName: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToCollectionOfEntity
  nameWithType.vb: EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToCollectionOfEntity
  fullName.vb: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToCollectionOfEntity
- uid: System.Collections.Generic.ICollection{{TEntity}}
  commentId: T:System.Collections.Generic.ICollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<TEntity>
  nameWithType: ICollection<TEntity>
  fullName: System.Collections.Generic.ICollection<TEntity>
  nameWithType.vb: ICollection(Of TEntity)
  fullName.vb: System.Collections.Generic.ICollection(Of TEntity)
  name.vb: ICollection(Of TEntity)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToCollectionOfDto*
  commentId: Overload:Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToCollectionOfDto
  href: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler-4.html#Quickie_Handlers_Editonly_Implementation_EditOnlyRequestHandler_4_MapToCollectionOfDto_System_Collections_Generic_ICollection__1__
  name: MapToCollectionOfDto
  nameWithType: EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToCollectionOfDto
  fullName: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToCollectionOfDto
  nameWithType.vb: EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToCollectionOfDto
  fullName.vb: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToCollectionOfDto
