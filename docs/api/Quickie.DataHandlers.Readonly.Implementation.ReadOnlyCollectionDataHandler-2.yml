### YamlMime:ManagedReference
items:
- uid: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`2
  commentId: T:Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`2
  id: ReadOnlyCollectionDataHandler`2
  parent: Quickie.DataHandlers.Readonly.Implementation
  children:
  - Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`2.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  - Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`2.GetByFilterAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},``0,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`2.GetCollectionByIdAsync``1(System.Int64,``0,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ReadOnlyCollectionDataHandler<TEntity, TDbContext>
  nameWithType: ReadOnlyCollectionDataHandler<TEntity, TDbContext>
  fullName: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler<TEntity, TDbContext>
  type: Class
  source:
    id: ReadOnlyCollectionDataHandler
    path: C:\Users\stpt4\OneDrive\Desktop\libs\Quickie\src\Quickie\DataHandlers\Readonly\Implementation\ReadOnlyCollectionDataHandler.cs
    startLine: 7
  assemblies:
  - Quickie
  namespace: Quickie.DataHandlers.Readonly.Implementation
  syntax:
    content: 'public abstract class ReadOnlyCollectionDataHandler<TEntity, TDbContext> : IReadOnlyCollectionDataHandler<TEntity> where TEntity : ReadOnlyEntity where TDbContext : DbContext'
    typeParameters:
    - id: TEntity
    - id: TDbContext
    content.vb: Public MustInherit Class ReadOnlyCollectionDataHandler(Of TEntity As ReadOnlyEntity, TDbContext As DbContext) Implements IReadOnlyCollectionDataHandler(Of TEntity)
  inheritance:
  - System.Object
  implements:
  - Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler{{TEntity}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ReadOnlyCollectionDataHandler(Of TEntity, TDbContext)
  fullName.vb: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler(Of TEntity, TDbContext)
  name.vb: ReadOnlyCollectionDataHandler(Of TEntity, TDbContext)
- uid: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`2.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  commentId: M:Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`2.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  id: '#ctor(Microsoft.EntityFrameworkCore.DbContext)'
  parent: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`2
  langs:
  - csharp
  - vb
  name: ReadOnlyCollectionDataHandler(DbContext)
  nameWithType: ReadOnlyCollectionDataHandler<TEntity, TDbContext>.ReadOnlyCollectionDataHandler(DbContext)
  fullName: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler<TEntity, TDbContext>.ReadOnlyCollectionDataHandler(Microsoft.EntityFrameworkCore.DbContext)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\stpt4\OneDrive\Desktop\libs\Quickie\src\Quickie\DataHandlers\Readonly\Implementation\ReadOnlyCollectionDataHandler.cs
    startLine: 7
  assemblies:
  - Quickie
  namespace: Quickie.DataHandlers.Readonly.Implementation
  syntax:
    content: protected ReadOnlyCollectionDataHandler(DbContext context)
    parameters:
    - id: context
      type: Microsoft.EntityFrameworkCore.DbContext
    content.vb: Protected Sub New(context As DbContext)
  overload: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`2.#ctor*
  nameWithType.vb: ReadOnlyCollectionDataHandler(Of TEntity, TDbContext).New(DbContext)
  fullName.vb: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler(Of TEntity, TDbContext).New(Microsoft.EntityFrameworkCore.DbContext)
  name.vb: New(DbContext)
- uid: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`2.GetByFilterAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},``0,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`2.GetByFilterAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},``0,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: GetByFilterAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},``0,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`2
  langs:
  - csharp
  - vb
  name: GetByFilterAsync<TRequestModel>(Expression<Func<TEntity, bool>>, TRequestModel?, bool?, CancellationToken)
  nameWithType: ReadOnlyCollectionDataHandler<TEntity, TDbContext>.GetByFilterAsync<TRequestModel>(Expression<Func<TEntity, bool>>, TRequestModel?, bool?, CancellationToken)
  fullName: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler<TEntity, TDbContext>.GetByFilterAsync<TRequestModel>(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, TRequestModel?, bool?, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetByFilterAsync
    path: C:\Users\stpt4\OneDrive\Desktop\libs\Quickie\src\Quickie\DataHandlers\Readonly\Implementation\ReadOnlyCollectionDataHandler.cs
    startLine: 11
  assemblies:
  - Quickie
  namespace: Quickie.DataHandlers.Readonly.Implementation
  summary: Get a paginated collection of entities that match the specified filter.
  example: []
  syntax:
    content: 'public Task<PaginatedDataObj<TEntity>> GetByFilterAsync<TRequestModel>(Expression<Func<TEntity, bool>> filter, TRequestModel? request, bool? track = false, CancellationToken cancellationToken = default) where TRequestModel : RequestForDataObj'
    parameters:
    - id: filter
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}
      description: A predicate function to define your condition.
    - id: request
      type: '{TRequestModel}'
      description: The pagination request object.
    - id: track
      type: System.Nullable{System.Boolean}
      description: A flag indicating whether to track changes for the retrieved entities. Set to <code>false</code> to disable change tracking for read-only queries. Default is <code>false</code>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token.
    typeParameters:
    - id: TRequestModel
    return:
      type: System.Threading.Tasks.Task{Quickie.DataObj.PaginatedDataObj{{TEntity}}}
      description: Paginated data.
    content.vb: Public Function GetByFilterAsync(Of TRequestModel As RequestForDataObj)(filter As Expression(Of Func(Of TEntity, Boolean)), request As TRequestModel, track As Boolean? = False, cancellationToken As CancellationToken = Nothing) As Task(Of PaginatedDataObj(Of TEntity))
  overload: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`2.GetByFilterAsync*
  implements:
  - Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler{{TEntity}}.GetByFilterAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},{TRequestModel},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  nameWithType.vb: ReadOnlyCollectionDataHandler(Of TEntity, TDbContext).GetByFilterAsync(Of TRequestModel)(Expression(Of Func(Of TEntity, Boolean)), TRequestModel, Boolean?, CancellationToken)
  fullName.vb: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler(Of TEntity, TDbContext).GetByFilterAsync(Of TRequestModel)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), TRequestModel, Boolean?, System.Threading.CancellationToken)
  name.vb: GetByFilterAsync(Of TRequestModel)(Expression(Of Func(Of TEntity, Boolean)), TRequestModel, Boolean?, CancellationToken)
- uid: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`2.GetCollectionByIdAsync``1(System.Int64,``0,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`2.GetCollectionByIdAsync``1(System.Int64,``0,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: GetCollectionByIdAsync``1(System.Int64,``0,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`2
  langs:
  - csharp
  - vb
  name: GetCollectionByIdAsync<TRequestModel>(long, TRequestModel?, bool?, CancellationToken)
  nameWithType: ReadOnlyCollectionDataHandler<TEntity, TDbContext>.GetCollectionByIdAsync<TRequestModel>(long, TRequestModel?, bool?, CancellationToken)
  fullName: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler<TEntity, TDbContext>.GetCollectionByIdAsync<TRequestModel>(long, TRequestModel?, bool?, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetCollectionByIdAsync
    path: C:\Users\stpt4\OneDrive\Desktop\libs\Quickie\src\Quickie\DataHandlers\Readonly\Implementation\ReadOnlyCollectionDataHandler.cs
    startLine: 25
  assemblies:
  - Quickie
  namespace: Quickie.DataHandlers.Readonly.Implementation
  summary: Get a paginated collection of entities by a specific ID with optional pagination.
  example: []
  syntax:
    content: 'public Task<PaginatedDataObj<TEntity>> GetCollectionByIdAsync<TRequestModel>(long id, TRequestModel? request, bool? track = false, CancellationToken cancellationToken = default) where TRequestModel : RequestForDataObj'
    parameters:
    - id: id
      type: System.Int64
      description: Identifier (primary key).
    - id: request
      type: '{TRequestModel}'
      description: The pagination request object.
    - id: track
      type: System.Nullable{System.Boolean}
      description: A flag indicating whether to track changes for the retrieved entities. Set to <code>false</code> to disable change tracking for read-only queries. Default is <code>false</code>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token.
    typeParameters:
    - id: TRequestModel
    return:
      type: System.Threading.Tasks.Task{Quickie.DataObj.PaginatedDataObj{{TEntity}}}
      description: ''
    content.vb: Public Function GetCollectionByIdAsync(Of TRequestModel As RequestForDataObj)(id As Long, request As TRequestModel, track As Boolean? = False, cancellationToken As CancellationToken = Nothing) As Task(Of PaginatedDataObj(Of TEntity))
  overload: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`2.GetCollectionByIdAsync*
  implements:
  - Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler{{TEntity}}.GetCollectionByIdAsync``1(System.Int64,{TRequestModel},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  nameWithType.vb: ReadOnlyCollectionDataHandler(Of TEntity, TDbContext).GetCollectionByIdAsync(Of TRequestModel)(Long, TRequestModel, Boolean?, CancellationToken)
  fullName.vb: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler(Of TEntity, TDbContext).GetCollectionByIdAsync(Of TRequestModel)(Long, TRequestModel, Boolean?, System.Threading.CancellationToken)
  name.vb: GetCollectionByIdAsync(Of TRequestModel)(Long, TRequestModel, Boolean?, CancellationToken)
references:
- uid: Quickie.DataHandlers.Readonly.Implementation
  commentId: N:Quickie.DataHandlers.Readonly.Implementation
  href: Quickie.html
  name: Quickie.DataHandlers.Readonly.Implementation
  nameWithType: Quickie.DataHandlers.Readonly.Implementation
  fullName: Quickie.DataHandlers.Readonly.Implementation
  spec.csharp:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.DataHandlers
    name: DataHandlers
    href: Quickie.DataHandlers.html
  - name: .
  - uid: Quickie.DataHandlers.Readonly
    name: Readonly
    href: Quickie.DataHandlers.Readonly.html
  - name: .
  - uid: Quickie.DataHandlers.Readonly.Implementation
    name: Implementation
    href: Quickie.DataHandlers.Readonly.Implementation.html
  spec.vb:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.DataHandlers
    name: DataHandlers
    href: Quickie.DataHandlers.html
  - name: .
  - uid: Quickie.DataHandlers.Readonly
    name: Readonly
    href: Quickie.DataHandlers.Readonly.html
  - name: .
  - uid: Quickie.DataHandlers.Readonly.Implementation
    name: Implementation
    href: Quickie.DataHandlers.Readonly.Implementation.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler{{TEntity}}
  commentId: T:Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler{`0}
  parent: Quickie.DataHandlers.Readonly.Definition
  definition: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler`1
  href: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler-1.html
  name: IReadOnlyCollectionDataHandler<TEntity>
  nameWithType: IReadOnlyCollectionDataHandler<TEntity>
  fullName: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler<TEntity>
  nameWithType.vb: IReadOnlyCollectionDataHandler(Of TEntity)
  fullName.vb: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler(Of TEntity)
  name.vb: IReadOnlyCollectionDataHandler(Of TEntity)
  spec.csharp:
  - uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler`1
    name: IReadOnlyCollectionDataHandler
    href: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler-1.html
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler`1
    name: IReadOnlyCollectionDataHandler
    href: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler`1
  commentId: T:Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler`1
  href: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler-1.html
  name: IReadOnlyCollectionDataHandler<TEntity>
  nameWithType: IReadOnlyCollectionDataHandler<TEntity>
  fullName: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler<TEntity>
  nameWithType.vb: IReadOnlyCollectionDataHandler(Of TEntity)
  fullName.vb: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler(Of TEntity)
  name.vb: IReadOnlyCollectionDataHandler(Of TEntity)
  spec.csharp:
  - uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler`1
    name: IReadOnlyCollectionDataHandler
    href: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler-1.html
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler`1
    name: IReadOnlyCollectionDataHandler
    href: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: Quickie.DataHandlers.Readonly.Definition
  commentId: N:Quickie.DataHandlers.Readonly.Definition
  href: Quickie.html
  name: Quickie.DataHandlers.Readonly.Definition
  nameWithType: Quickie.DataHandlers.Readonly.Definition
  fullName: Quickie.DataHandlers.Readonly.Definition
  spec.csharp:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.DataHandlers
    name: DataHandlers
    href: Quickie.DataHandlers.html
  - name: .
  - uid: Quickie.DataHandlers.Readonly
    name: Readonly
    href: Quickie.DataHandlers.Readonly.html
  - name: .
  - uid: Quickie.DataHandlers.Readonly.Definition
    name: Definition
    href: Quickie.DataHandlers.Readonly.Definition.html
  spec.vb:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.DataHandlers
    name: DataHandlers
    href: Quickie.DataHandlers.html
  - name: .
  - uid: Quickie.DataHandlers.Readonly
    name: Readonly
    href: Quickie.DataHandlers.Readonly.html
  - name: .
  - uid: Quickie.DataHandlers.Readonly.Definition
    name: Definition
    href: Quickie.DataHandlers.Readonly.Definition.html
- uid: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`2.#ctor*
  commentId: Overload:Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`2.#ctor
  href: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler-2.html#Quickie_DataHandlers_Readonly_Implementation_ReadOnlyCollectionDataHandler_2__ctor_Microsoft_EntityFrameworkCore_DbContext_
  name: ReadOnlyCollectionDataHandler
  nameWithType: ReadOnlyCollectionDataHandler<TEntity, TDbContext>.ReadOnlyCollectionDataHandler
  fullName: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler<TEntity, TDbContext>.ReadOnlyCollectionDataHandler
  nameWithType.vb: ReadOnlyCollectionDataHandler(Of TEntity, TDbContext).New
  fullName.vb: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler(Of TEntity, TDbContext).New
  name.vb: New
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
- uid: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`2.GetByFilterAsync*
  commentId: Overload:Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`2.GetByFilterAsync
  href: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler-2.html#Quickie_DataHandlers_Readonly_Implementation_ReadOnlyCollectionDataHandler_2_GetByFilterAsync__1_System_Linq_Expressions_Expression_System_Func__0_System_Boolean_____0_System_Nullable_System_Boolean__System_Threading_CancellationToken_
  name: GetByFilterAsync
  nameWithType: ReadOnlyCollectionDataHandler<TEntity, TDbContext>.GetByFilterAsync
  fullName: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler<TEntity, TDbContext>.GetByFilterAsync
  nameWithType.vb: ReadOnlyCollectionDataHandler(Of TEntity, TDbContext).GetByFilterAsync
  fullName.vb: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler(Of TEntity, TDbContext).GetByFilterAsync
- uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler{{TEntity}}.GetByFilterAsync``1(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},{TRequestModel},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler{`0}.GetByFilterAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},``0,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler{{TEntity}}
  definition: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler`1.GetByFilterAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},``0,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  href: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler-1.html#Quickie_DataHandlers_Readonly_Definition_IReadOnlyCollectionDataHandler_1_GetByFilterAsync__1_System_Linq_Expressions_Expression_System_Func__0_System_Boolean_____0_System_Nullable_System_Boolean__System_Threading_CancellationToken_
  name: GetByFilterAsync<TRequestModel>(Expression<Func<TEntity, bool>>, TRequestModel, bool?, CancellationToken)
  nameWithType: IReadOnlyCollectionDataHandler<TEntity>.GetByFilterAsync<TRequestModel>(Expression<Func<TEntity, bool>>, TRequestModel, bool?, CancellationToken)
  fullName: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler<TEntity>.GetByFilterAsync<TRequestModel>(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, TRequestModel, bool?, System.Threading.CancellationToken)
  nameWithType.vb: IReadOnlyCollectionDataHandler(Of TEntity).GetByFilterAsync(Of TRequestModel)(Expression(Of Func(Of TEntity, Boolean)), TRequestModel, Boolean?, CancellationToken)
  fullName.vb: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler(Of TEntity).GetByFilterAsync(Of TRequestModel)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), TRequestModel, Boolean?, System.Threading.CancellationToken)
  name.vb: GetByFilterAsync(Of TRequestModel)(Expression(Of Func(Of TEntity, Boolean)), TRequestModel, Boolean?, CancellationToken)
  spec.csharp:
  - uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler{`0}.GetByFilterAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},``0,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: GetByFilterAsync
    href: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler-1.html#Quickie_DataHandlers_Readonly_Definition_IReadOnlyCollectionDataHandler_1_GetByFilterAsync__1_System_Linq_Expressions_Expression_System_Func__0_System_Boolean_____0_System_Nullable_System_Boolean__System_Threading_CancellationToken_
  - name: <
  - name: TRequestModel
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - name: TRequestModel
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler{`0}.GetByFilterAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},``0,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: GetByFilterAsync
    href: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler-1.html#Quickie_DataHandlers_Readonly_Definition_IReadOnlyCollectionDataHandler_1_GetByFilterAsync__1_System_Linq_Expressions_Expression_System_Func__0_System_Boolean_____0_System_Nullable_System_Boolean__System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: TRequestModel
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - name: TRequestModel
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TEntity, bool>>
  nameWithType: Expression<Func<TEntity, bool>>
  fullName: System.Linq.Expressions.Expression<System.Func<TEntity, bool>>
  nameWithType.vb: Expression(Of Func(Of TEntity, Boolean))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean))
  name.vb: Expression(Of Func(Of TEntity, Boolean))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: '{TRequestModel}'
  commentId: '!:TRequestModel'
  definition: TRequestModel
  name: TRequestModel
  nameWithType: TRequestModel
  fullName: TRequestModel
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool?
  nameWithType: bool?
  fullName: bool?
  nameWithType.vb: Boolean?
  fullName.vb: Boolean?
  name.vb: Boolean?
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Quickie.DataObj.PaginatedDataObj{{TEntity}}}
  commentId: T:System.Threading.Tasks.Task{Quickie.DataObj.PaginatedDataObj{`0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<PaginatedDataObj<TEntity>>
  nameWithType: Task<PaginatedDataObj<TEntity>>
  fullName: System.Threading.Tasks.Task<Quickie.DataObj.PaginatedDataObj<TEntity>>
  nameWithType.vb: Task(Of PaginatedDataObj(Of TEntity))
  fullName.vb: System.Threading.Tasks.Task(Of Quickie.DataObj.PaginatedDataObj(Of TEntity))
  name.vb: Task(Of PaginatedDataObj(Of TEntity))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Quickie.DataObj.PaginatedDataObj`1
    name: PaginatedDataObj
    href: Quickie.DataObj.PaginatedDataObj-1.html
  - name: <
  - name: TEntity
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Quickie.DataObj.PaginatedDataObj`1
    name: PaginatedDataObj
    href: Quickie.DataObj.PaginatedDataObj-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: )
- uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler`1.GetByFilterAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},``0,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler`1.GetByFilterAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},``0,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  isExternal: true
  href: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler-1.html#Quickie_DataHandlers_Readonly_Definition_IReadOnlyCollectionDataHandler_1_GetByFilterAsync__1_System_Linq_Expressions_Expression_System_Func__0_System_Boolean_____0_System_Nullable_System_Boolean__System_Threading_CancellationToken_
  name: GetByFilterAsync<TRequestModel>(Expression<Func<TEntity, bool>>, TRequestModel, bool?, CancellationToken)
  nameWithType: IReadOnlyCollectionDataHandler<TEntity>.GetByFilterAsync<TRequestModel>(Expression<Func<TEntity, bool>>, TRequestModel, bool?, CancellationToken)
  fullName: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler<TEntity>.GetByFilterAsync<TRequestModel>(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, TRequestModel, bool?, System.Threading.CancellationToken)
  nameWithType.vb: IReadOnlyCollectionDataHandler(Of TEntity).GetByFilterAsync(Of TRequestModel)(Expression(Of Func(Of TEntity, Boolean)), TRequestModel, Boolean?, CancellationToken)
  fullName.vb: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler(Of TEntity).GetByFilterAsync(Of TRequestModel)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), TRequestModel, Boolean?, System.Threading.CancellationToken)
  name.vb: GetByFilterAsync(Of TRequestModel)(Expression(Of Func(Of TEntity, Boolean)), TRequestModel, Boolean?, CancellationToken)
  spec.csharp:
  - uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler`1.GetByFilterAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},``0,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: GetByFilterAsync
    href: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler-1.html#Quickie_DataHandlers_Readonly_Definition_IReadOnlyCollectionDataHandler_1_GetByFilterAsync__1_System_Linq_Expressions_Expression_System_Func__0_System_Boolean_____0_System_Nullable_System_Boolean__System_Threading_CancellationToken_
  - name: <
  - name: TRequestModel
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - name: TRequestModel
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler`1.GetByFilterAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},``0,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: GetByFilterAsync
    href: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler-1.html#Quickie_DataHandlers_Readonly_Definition_IReadOnlyCollectionDataHandler_1_GetByFilterAsync__1_System_Linq_Expressions_Expression_System_Func__0_System_Boolean_____0_System_Nullable_System_Boolean__System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: TRequestModel
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - name: TRequestModel
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - name: TDelegate
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - name: TDelegate
  - name: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
- uid: TRequestModel
  name: TRequestModel
  nameWithType: TRequestModel
  fullName: TRequestModel
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`2.GetCollectionByIdAsync*
  commentId: Overload:Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`2.GetCollectionByIdAsync
  href: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler-2.html#Quickie_DataHandlers_Readonly_Implementation_ReadOnlyCollectionDataHandler_2_GetCollectionByIdAsync__1_System_Int64___0_System_Nullable_System_Boolean__System_Threading_CancellationToken_
  name: GetCollectionByIdAsync
  nameWithType: ReadOnlyCollectionDataHandler<TEntity, TDbContext>.GetCollectionByIdAsync
  fullName: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler<TEntity, TDbContext>.GetCollectionByIdAsync
  nameWithType.vb: ReadOnlyCollectionDataHandler(Of TEntity, TDbContext).GetCollectionByIdAsync
  fullName.vb: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler(Of TEntity, TDbContext).GetCollectionByIdAsync
- uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler{{TEntity}}.GetCollectionByIdAsync``1(System.Int64,{TRequestModel},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler{`0}.GetCollectionByIdAsync``1(System.Int64,``0,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler{{TEntity}}
  definition: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler`1.GetCollectionByIdAsync``1(System.Int64,``0,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  href: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler-1.html#Quickie_DataHandlers_Readonly_Definition_IReadOnlyCollectionDataHandler_1_GetCollectionByIdAsync__1_System_Int64___0_System_Nullable_System_Boolean__System_Threading_CancellationToken_
  name: GetCollectionByIdAsync<TRequestModel>(long, TRequestModel, bool?, CancellationToken)
  nameWithType: IReadOnlyCollectionDataHandler<TEntity>.GetCollectionByIdAsync<TRequestModel>(long, TRequestModel, bool?, CancellationToken)
  fullName: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler<TEntity>.GetCollectionByIdAsync<TRequestModel>(long, TRequestModel, bool?, System.Threading.CancellationToken)
  nameWithType.vb: IReadOnlyCollectionDataHandler(Of TEntity).GetCollectionByIdAsync(Of TRequestModel)(Long, TRequestModel, Boolean?, CancellationToken)
  fullName.vb: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler(Of TEntity).GetCollectionByIdAsync(Of TRequestModel)(Long, TRequestModel, Boolean?, System.Threading.CancellationToken)
  name.vb: GetCollectionByIdAsync(Of TRequestModel)(Long, TRequestModel, Boolean?, CancellationToken)
  spec.csharp:
  - uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler{`0}.GetCollectionByIdAsync``1(System.Int64,``0,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: GetCollectionByIdAsync
    href: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler-1.html#Quickie_DataHandlers_Readonly_Definition_IReadOnlyCollectionDataHandler_1_GetCollectionByIdAsync__1_System_Int64___0_System_Nullable_System_Boolean__System_Threading_CancellationToken_
  - name: <
  - name: TRequestModel
  - name: '>'
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - name: TRequestModel
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler{`0}.GetCollectionByIdAsync``1(System.Int64,``0,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: GetCollectionByIdAsync
    href: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler-1.html#Quickie_DataHandlers_Readonly_Definition_IReadOnlyCollectionDataHandler_1_GetCollectionByIdAsync__1_System_Int64___0_System_Nullable_System_Boolean__System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: TRequestModel
  - name: )
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - name: TRequestModel
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler`1.GetCollectionByIdAsync``1(System.Int64,``0,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler`1.GetCollectionByIdAsync``1(System.Int64,``0,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  isExternal: true
  href: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler-1.html#Quickie_DataHandlers_Readonly_Definition_IReadOnlyCollectionDataHandler_1_GetCollectionByIdAsync__1_System_Int64___0_System_Nullable_System_Boolean__System_Threading_CancellationToken_
  name: GetCollectionByIdAsync<TRequestModel>(long, TRequestModel, bool?, CancellationToken)
  nameWithType: IReadOnlyCollectionDataHandler<TEntity>.GetCollectionByIdAsync<TRequestModel>(long, TRequestModel, bool?, CancellationToken)
  fullName: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler<TEntity>.GetCollectionByIdAsync<TRequestModel>(long, TRequestModel, bool?, System.Threading.CancellationToken)
  nameWithType.vb: IReadOnlyCollectionDataHandler(Of TEntity).GetCollectionByIdAsync(Of TRequestModel)(Long, TRequestModel, Boolean?, CancellationToken)
  fullName.vb: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler(Of TEntity).GetCollectionByIdAsync(Of TRequestModel)(Long, TRequestModel, Boolean?, System.Threading.CancellationToken)
  name.vb: GetCollectionByIdAsync(Of TRequestModel)(Long, TRequestModel, Boolean?, CancellationToken)
  spec.csharp:
  - uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler`1.GetCollectionByIdAsync``1(System.Int64,``0,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: GetCollectionByIdAsync
    href: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler-1.html#Quickie_DataHandlers_Readonly_Definition_IReadOnlyCollectionDataHandler_1_GetCollectionByIdAsync__1_System_Int64___0_System_Nullable_System_Boolean__System_Threading_CancellationToken_
  - name: <
  - name: TRequestModel
  - name: '>'
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - name: TRequestModel
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler`1.GetCollectionByIdAsync``1(System.Int64,``0,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: GetCollectionByIdAsync
    href: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler-1.html#Quickie_DataHandlers_Readonly_Definition_IReadOnlyCollectionDataHandler_1_GetCollectionByIdAsync__1_System_Int64___0_System_Nullable_System_Boolean__System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: TRequestModel
  - name: )
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - name: TRequestModel
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
