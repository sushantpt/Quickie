### YamlMime:ManagedReference
items:
- uid: Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler`4
  commentId: T:Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler`4
  id: ReadOnlyCollectionRequestHandler`4
  parent: Quickie.Handlers.Readonly.Implementation
  children:
  - Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler`4.#ctor(Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler{`1,`3})
  - Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler`4.GetAsync``1(``0,System.Nullable{System.Threading.CancellationToken})
  - Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler`4.MapToDto(System.Collections.Generic.ICollection{`1})
  langs:
  - csharp
  - vb
  name: ReadOnlyCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>
  nameWithType: ReadOnlyCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>
  fullName: Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>
  type: Class
  source:
    remote:
      path: src/Quickie/Handlers/Readonly/Implementation/ReadOnlyCollectionRequestHandler.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: ReadOnlyCollectionRequestHandler
    path: ../src/Quickie/Handlers/Readonly/Implementation/ReadOnlyCollectionRequestHandler.cs
    startLine: 10
  assemblies:
  - Quickie
  namespace: Quickie.Handlers.Readonly.Implementation
  summary: Abstract class serving as read only (collection) request handler.
  example: []
  syntax:
    content: 'public abstract class ReadOnlyCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType> : IReadOnlyCollectionRequestHandler<TViewModel, TIdType> where TViewModel : ReadOnlyDto where TEntity : ReadOnlyEntity where TDataHandler : IReadOnlyCollectionDataHandler<TEntity, TIdType> where TIdType : IComparable'
    typeParameters:
    - id: TViewModel
      description: View model or dto
    - id: TEntity
      description: Entity
    - id: TDataHandler
      description: Data handler (Repository layer)
    - id: TIdType
      description: 'Type of identifier. eg: int, string, ...'
    content.vb: Public MustInherit Class ReadOnlyCollectionRequestHandler(Of TViewModel As ReadOnlyDto, TEntity As ReadOnlyEntity, TDataHandler As IReadOnlyCollectionDataHandler(Of TEntity, TIdType), TIdType As IComparable) Implements IReadOnlyCollectionRequestHandler(Of TViewModel, TIdType)
  inheritance:
  - System.Object
  derivedClasses:
  - specification.Helpers.RequestHandlers.ReadOnlyCollectionRequestHandlerConcrete
  implements:
  - Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler{{TViewModel},{TIdType}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ReadOnlyCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType)
  fullName.vb: Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType)
  name.vb: ReadOnlyCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType)
- uid: Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler`4.#ctor(Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler{`1,`3})
  commentId: M:Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler`4.#ctor(Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler{`1,`3})
  id: '#ctor(Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler{`1,`3})'
  parent: Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler`4
  langs:
  - csharp
  - vb
  name: ReadOnlyCollectionRequestHandler(IReadOnlyCollectionDataHandler<TEntity, TIdType>)
  nameWithType: ReadOnlyCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.ReadOnlyCollectionRequestHandler(IReadOnlyCollectionDataHandler<TEntity, TIdType>)
  fullName: Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.ReadOnlyCollectionRequestHandler(Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler<TEntity, TIdType>)
  type: Constructor
  source:
    remote:
      path: src/Quickie/Handlers/Readonly/Implementation/ReadOnlyCollectionRequestHandler.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: .ctor
    path: ../src/Quickie/Handlers/Readonly/Implementation/ReadOnlyCollectionRequestHandler.cs
    startLine: 10
  assemblies:
  - Quickie
  namespace: Quickie.Handlers.Readonly.Implementation
  summary: Abstract class serving as read only (collection) request handler.
  example: []
  syntax:
    content: protected ReadOnlyCollectionRequestHandler(IReadOnlyCollectionDataHandler<TEntity, TIdType> readOnlyCollectionDataHandler)
    parameters:
    - id: readOnlyCollectionDataHandler
      type: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler{{TEntity},{TIdType}}
      description: Data handler (Repository layer)
    content.vb: Protected Sub New(readOnlyCollectionDataHandler As IReadOnlyCollectionDataHandler(Of TEntity, TIdType))
  overload: Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler`4.#ctor*
  nameWithType.vb: ReadOnlyCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).New(IReadOnlyCollectionDataHandler(Of TEntity, TIdType))
  fullName.vb: Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).New(Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler(Of TEntity, TIdType))
  name.vb: New(IReadOnlyCollectionDataHandler(Of TEntity, TIdType))
- uid: Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler`4.GetAsync``1(``0,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler`4.GetAsync``1(``0,System.Nullable{System.Threading.CancellationToken})
  id: GetAsync``1(``0,System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler`4
  langs:
  - csharp
  - vb
  name: GetAsync<TRequestModel>(TRequestModel?, CancellationToken?)
  nameWithType: ReadOnlyCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.GetAsync<TRequestModel>(TRequestModel?, CancellationToken?)
  fullName: Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.GetAsync<TRequestModel>(TRequestModel?, System.Threading.CancellationToken?)
  type: Method
  source:
    remote:
      path: src/Quickie/Handlers/Readonly/Implementation/ReadOnlyCollectionRequestHandler.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: GetAsync
    path: ../src/Quickie/Handlers/Readonly/Implementation/ReadOnlyCollectionRequestHandler.cs
    startLine: 20
  assemblies:
  - Quickie
  namespace: Quickie.Handlers.Readonly.Implementation
  summary: Get data.
  example: []
  syntax:
    content: 'public Task<PaginatedDataObj<TViewModel>> GetAsync<TRequestModel>(TRequestModel? request, CancellationToken? cancellationToken = null) where TRequestModel : RequestForDataObj'
    parameters:
    - id: request
      type: '{TRequestModel}'
      description: Data request filter
    - id: cancellationToken
      type: System.Nullable{System.Threading.CancellationToken}
      description: Cancellation token
    typeParameters:
    - id: TRequestModel
      description: Type of data request filter
    return:
      type: System.Threading.Tasks.Task{Quickie.DataObj.PaginatedDataObj{{TViewModel}}}
      description: ''
    content.vb: Public Function GetAsync(Of TRequestModel As RequestForDataObj)(request As TRequestModel, cancellationToken As CancellationToken? = Nothing) As Task(Of PaginatedDataObj(Of TViewModel))
  overload: Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler`4.GetAsync*
  implements:
  - Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler{{TViewModel},{TIdType}}.GetAsync``1({TRequestModel},System.Nullable{System.Threading.CancellationToken})
  nameWithType.vb: ReadOnlyCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).GetAsync(Of TRequestModel)(TRequestModel, CancellationToken?)
  fullName.vb: Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).GetAsync(Of TRequestModel)(TRequestModel, System.Threading.CancellationToken?)
  name.vb: GetAsync(Of TRequestModel)(TRequestModel, CancellationToken?)
- uid: Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler`4.MapToDto(System.Collections.Generic.ICollection{`1})
  commentId: M:Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler`4.MapToDto(System.Collections.Generic.ICollection{`1})
  id: MapToDto(System.Collections.Generic.ICollection{`1})
  parent: Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler`4
  langs:
  - csharp
  - vb
  name: MapToDto(ICollection<TEntity>)
  nameWithType: ReadOnlyCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToDto(ICollection<TEntity>)
  fullName: Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToDto(System.Collections.Generic.ICollection<TEntity>)
  type: Method
  source:
    remote:
      path: src/Quickie/Handlers/Readonly/Implementation/ReadOnlyCollectionRequestHandler.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: MapToDto
    path: ../src/Quickie/Handlers/Readonly/Implementation/ReadOnlyCollectionRequestHandler.cs
    startLine: 38
  assemblies:
  - Quickie
  namespace: Quickie.Handlers.Readonly.Implementation
  summary: Mapping profile. Map from collection of Entity type to your collection of data transfer object.
  example: []
  syntax:
    content: protected abstract ICollection<TViewModel> MapToDto(ICollection<TEntity> entity)
    parameters:
    - id: entity
      type: System.Collections.Generic.ICollection{{TEntity}}
      description: Collection of entity object.
    return:
      type: System.Collections.Generic.ICollection{{TViewModel}}
      description: Mapped from collection of Entity, a collection data transfer object.
    content.vb: Protected MustOverride Function MapToDto(entity As ICollection(Of TEntity)) As ICollection(Of TViewModel)
  overload: Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler`4.MapToDto*
  nameWithType.vb: ReadOnlyCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToDto(ICollection(Of TEntity))
  fullName.vb: Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToDto(System.Collections.Generic.ICollection(Of TEntity))
  name.vb: MapToDto(ICollection(Of TEntity))
references:
- uid: Quickie.Handlers.Readonly.Implementation
  commentId: N:Quickie.Handlers.Readonly.Implementation
  href: Quickie.html
  name: Quickie.Handlers.Readonly.Implementation
  nameWithType: Quickie.Handlers.Readonly.Implementation
  fullName: Quickie.Handlers.Readonly.Implementation
  spec.csharp:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.Handlers
    name: Handlers
    href: Quickie.Handlers.html
  - name: .
  - uid: Quickie.Handlers.Readonly
    name: Readonly
    href: Quickie.Handlers.Readonly.html
  - name: .
  - uid: Quickie.Handlers.Readonly.Implementation
    name: Implementation
    href: Quickie.Handlers.Readonly.Implementation.html
  spec.vb:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.Handlers
    name: Handlers
    href: Quickie.Handlers.html
  - name: .
  - uid: Quickie.Handlers.Readonly
    name: Readonly
    href: Quickie.Handlers.Readonly.html
  - name: .
  - uid: Quickie.Handlers.Readonly.Implementation
    name: Implementation
    href: Quickie.Handlers.Readonly.Implementation.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler{{TViewModel},{TIdType}}
  commentId: T:Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler{`0,`3}
  parent: Quickie.Handlers.Readonly.Definition
  definition: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler`2
  href: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler-2.html
  name: IReadOnlyCollectionRequestHandler<TViewModel, TIdType>
  nameWithType: IReadOnlyCollectionRequestHandler<TViewModel, TIdType>
  fullName: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler<TViewModel, TIdType>
  nameWithType.vb: IReadOnlyCollectionRequestHandler(Of TViewModel, TIdType)
  fullName.vb: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler(Of TViewModel, TIdType)
  name.vb: IReadOnlyCollectionRequestHandler(Of TViewModel, TIdType)
  spec.csharp:
  - uid: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler`2
    name: IReadOnlyCollectionRequestHandler
    href: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler-2.html
  - name: <
  - name: TViewModel
  - name: ','
  - name: " "
  - name: TIdType
  - name: '>'
  spec.vb:
  - uid: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler`2
    name: IReadOnlyCollectionRequestHandler
    href: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TViewModel
  - name: ','
  - name: " "
  - name: TIdType
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler`2
  commentId: T:Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler`2
  href: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler-2.html
  name: IReadOnlyCollectionRequestHandler<TViewModel, TIdType>
  nameWithType: IReadOnlyCollectionRequestHandler<TViewModel, TIdType>
  fullName: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler<TViewModel, TIdType>
  nameWithType.vb: IReadOnlyCollectionRequestHandler(Of TViewModel, TIdType)
  fullName.vb: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler(Of TViewModel, TIdType)
  name.vb: IReadOnlyCollectionRequestHandler(Of TViewModel, TIdType)
  spec.csharp:
  - uid: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler`2
    name: IReadOnlyCollectionRequestHandler
    href: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler-2.html
  - name: <
  - name: TViewModel
  - name: ','
  - name: " "
  - name: TIdType
  - name: '>'
  spec.vb:
  - uid: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler`2
    name: IReadOnlyCollectionRequestHandler
    href: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TViewModel
  - name: ','
  - name: " "
  - name: TIdType
  - name: )
- uid: Quickie.Handlers.Readonly.Definition
  commentId: N:Quickie.Handlers.Readonly.Definition
  href: Quickie.html
  name: Quickie.Handlers.Readonly.Definition
  nameWithType: Quickie.Handlers.Readonly.Definition
  fullName: Quickie.Handlers.Readonly.Definition
  spec.csharp:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.Handlers
    name: Handlers
    href: Quickie.Handlers.html
  - name: .
  - uid: Quickie.Handlers.Readonly
    name: Readonly
    href: Quickie.Handlers.Readonly.html
  - name: .
  - uid: Quickie.Handlers.Readonly.Definition
    name: Definition
    href: Quickie.Handlers.Readonly.Definition.html
  spec.vb:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.Handlers
    name: Handlers
    href: Quickie.Handlers.html
  - name: .
  - uid: Quickie.Handlers.Readonly
    name: Readonly
    href: Quickie.Handlers.Readonly.html
  - name: .
  - uid: Quickie.Handlers.Readonly.Definition
    name: Definition
    href: Quickie.Handlers.Readonly.Definition.html
- uid: Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler`4.#ctor*
  commentId: Overload:Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler`4.#ctor
  href: Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler-4.html#Quickie_Handlers_Readonly_Implementation_ReadOnlyCollectionRequestHandler_4__ctor_Quickie_DataHandlers_Readonly_Definition_IReadOnlyCollectionDataHandler__1__3__
  name: ReadOnlyCollectionRequestHandler
  nameWithType: ReadOnlyCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.ReadOnlyCollectionRequestHandler
  fullName: Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.ReadOnlyCollectionRequestHandler
  nameWithType.vb: ReadOnlyCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).New
  fullName.vb: Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).New
  name.vb: New
- uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler{{TEntity},{TIdType}}
  commentId: T:Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler{`0,`2}
  parent: Quickie.DataHandlers.Readonly.Definition
  definition: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler`2
  href: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler-2.html
  name: IReadOnlyCollectionDataHandler<TEntity, TIdType>
  nameWithType: IReadOnlyCollectionDataHandler<TEntity, TIdType>
  fullName: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler<TEntity, TIdType>
  nameWithType.vb: IReadOnlyCollectionDataHandler(Of TEntity, TIdType)
  fullName.vb: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler(Of TEntity, TIdType)
  name.vb: IReadOnlyCollectionDataHandler(Of TEntity, TIdType)
  spec.csharp:
  - uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler`2
    name: IReadOnlyCollectionDataHandler
    href: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler-2.html
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TIdType
  - name: '>'
  spec.vb:
  - uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler`2
    name: IReadOnlyCollectionDataHandler
    href: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TIdType
  - name: )
- uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler`2
  commentId: T:Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler`2
  href: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler-2.html
  name: IReadOnlyCollectionDataHandler<TEntity, TIdType>
  nameWithType: IReadOnlyCollectionDataHandler<TEntity, TIdType>
  fullName: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler<TEntity, TIdType>
  nameWithType.vb: IReadOnlyCollectionDataHandler(Of TEntity, TIdType)
  fullName.vb: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler(Of TEntity, TIdType)
  name.vb: IReadOnlyCollectionDataHandler(Of TEntity, TIdType)
  spec.csharp:
  - uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler`2
    name: IReadOnlyCollectionDataHandler
    href: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler-2.html
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TIdType
  - name: '>'
  spec.vb:
  - uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler`2
    name: IReadOnlyCollectionDataHandler
    href: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TIdType
  - name: )
- uid: Quickie.DataHandlers.Readonly.Definition
  commentId: N:Quickie.DataHandlers.Readonly.Definition
  href: Quickie.html
  name: Quickie.DataHandlers.Readonly.Definition
  nameWithType: Quickie.DataHandlers.Readonly.Definition
  fullName: Quickie.DataHandlers.Readonly.Definition
  spec.csharp:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.DataHandlers
    name: DataHandlers
    href: Quickie.DataHandlers.html
  - name: .
  - uid: Quickie.DataHandlers.Readonly
    name: Readonly
    href: Quickie.DataHandlers.Readonly.html
  - name: .
  - uid: Quickie.DataHandlers.Readonly.Definition
    name: Definition
    href: Quickie.DataHandlers.Readonly.Definition.html
  spec.vb:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.DataHandlers
    name: DataHandlers
    href: Quickie.DataHandlers.html
  - name: .
  - uid: Quickie.DataHandlers.Readonly
    name: Readonly
    href: Quickie.DataHandlers.Readonly.html
  - name: .
  - uid: Quickie.DataHandlers.Readonly.Definition
    name: Definition
    href: Quickie.DataHandlers.Readonly.Definition.html
- uid: Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler`4.GetAsync*
  commentId: Overload:Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler`4.GetAsync
  href: Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler-4.html#Quickie_Handlers_Readonly_Implementation_ReadOnlyCollectionRequestHandler_4_GetAsync__1___0_System_Nullable_System_Threading_CancellationToken__
  name: GetAsync
  nameWithType: ReadOnlyCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.GetAsync
  fullName: Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.GetAsync
  nameWithType.vb: ReadOnlyCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).GetAsync
  fullName.vb: Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).GetAsync
- uid: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler{{TViewModel},{TIdType}}.GetAsync``1({TRequestModel},System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler{`0,`3}.GetAsync``1(``0,System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler{{TViewModel},{TIdType}}
  definition: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler`2.GetAsync``1(``0,System.Nullable{System.Threading.CancellationToken})
  href: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler-2.html#Quickie_Handlers_Readonly_Definition_IReadOnlyCollectionRequestHandler_2_GetAsync__1___0_System_Nullable_System_Threading_CancellationToken__
  name: GetAsync<TRequestModel>(TRequestModel, CancellationToken?)
  nameWithType: IReadOnlyCollectionRequestHandler<TViewModel, TIdType>.GetAsync<TRequestModel>(TRequestModel, CancellationToken?)
  fullName: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler<TViewModel, TIdType>.GetAsync<TRequestModel>(TRequestModel, System.Threading.CancellationToken?)
  nameWithType.vb: IReadOnlyCollectionRequestHandler(Of TViewModel, TIdType).GetAsync(Of TRequestModel)(TRequestModel, CancellationToken?)
  fullName.vb: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler(Of TViewModel, TIdType).GetAsync(Of TRequestModel)(TRequestModel, System.Threading.CancellationToken?)
  name.vb: GetAsync(Of TRequestModel)(TRequestModel, CancellationToken?)
  spec.csharp:
  - uid: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler{`0,`3}.GetAsync``1(``0,System.Nullable{System.Threading.CancellationToken})
    name: GetAsync
    href: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler-2.html#Quickie_Handlers_Readonly_Definition_IReadOnlyCollectionRequestHandler_2_GetAsync__1___0_System_Nullable_System_Threading_CancellationToken__
  - name: <
  - name: TRequestModel
  - name: '>'
  - name: (
  - name: TRequestModel
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler{`0,`3}.GetAsync``1(``0,System.Nullable{System.Threading.CancellationToken})
    name: GetAsync
    href: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler-2.html#Quickie_Handlers_Readonly_Definition_IReadOnlyCollectionRequestHandler_2_GetAsync__1___0_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: Of
  - name: " "
  - name: TRequestModel
  - name: )
  - name: (
  - name: TRequestModel
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: '{TRequestModel}'
  commentId: '!:TRequestModel'
  definition: TRequestModel
  name: TRequestModel
  nameWithType: TRequestModel
  fullName: TRequestModel
- uid: System.Nullable{System.Threading.CancellationToken}
  commentId: T:System.Nullable{System.Threading.CancellationToken}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken?
  nameWithType: CancellationToken?
  fullName: System.Threading.CancellationToken?
  spec.csharp:
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  spec.vb:
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
- uid: System.Threading.Tasks.Task{Quickie.DataObj.PaginatedDataObj{{TViewModel}}}
  commentId: T:System.Threading.Tasks.Task{Quickie.DataObj.PaginatedDataObj{`0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<PaginatedDataObj<TViewModel>>
  nameWithType: Task<PaginatedDataObj<TViewModel>>
  fullName: System.Threading.Tasks.Task<Quickie.DataObj.PaginatedDataObj<TViewModel>>
  nameWithType.vb: Task(Of PaginatedDataObj(Of TViewModel))
  fullName.vb: System.Threading.Tasks.Task(Of Quickie.DataObj.PaginatedDataObj(Of TViewModel))
  name.vb: Task(Of PaginatedDataObj(Of TViewModel))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Quickie.DataObj.PaginatedDataObj`1
    name: PaginatedDataObj
    href: Quickie.DataObj.PaginatedDataObj-1.html
  - name: <
  - name: TViewModel
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Quickie.DataObj.PaginatedDataObj`1
    name: PaginatedDataObj
    href: Quickie.DataObj.PaginatedDataObj-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TViewModel
  - name: )
  - name: )
- uid: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler`2.GetAsync``1(``0,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler`2.GetAsync``1(``0,System.Nullable{System.Threading.CancellationToken})
  isExternal: true
  href: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler-2.html#Quickie_Handlers_Readonly_Definition_IReadOnlyCollectionRequestHandler_2_GetAsync__1___0_System_Nullable_System_Threading_CancellationToken__
  name: GetAsync<TRequestModel>(TRequestModel, CancellationToken?)
  nameWithType: IReadOnlyCollectionRequestHandler<TViewModel, TIdType>.GetAsync<TRequestModel>(TRequestModel, CancellationToken?)
  fullName: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler<TViewModel, TIdType>.GetAsync<TRequestModel>(TRequestModel, System.Threading.CancellationToken?)
  nameWithType.vb: IReadOnlyCollectionRequestHandler(Of TViewModel, TIdType).GetAsync(Of TRequestModel)(TRequestModel, CancellationToken?)
  fullName.vb: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler(Of TViewModel, TIdType).GetAsync(Of TRequestModel)(TRequestModel, System.Threading.CancellationToken?)
  name.vb: GetAsync(Of TRequestModel)(TRequestModel, CancellationToken?)
  spec.csharp:
  - uid: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler`2.GetAsync``1(``0,System.Nullable{System.Threading.CancellationToken})
    name: GetAsync
    href: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler-2.html#Quickie_Handlers_Readonly_Definition_IReadOnlyCollectionRequestHandler_2_GetAsync__1___0_System_Nullable_System_Threading_CancellationToken__
  - name: <
  - name: TRequestModel
  - name: '>'
  - name: (
  - name: TRequestModel
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler`2.GetAsync``1(``0,System.Nullable{System.Threading.CancellationToken})
    name: GetAsync
    href: Quickie.Handlers.Readonly.Definition.IReadOnlyCollectionRequestHandler-2.html#Quickie_Handlers_Readonly_Definition_IReadOnlyCollectionRequestHandler_2_GetAsync__1___0_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: Of
  - name: " "
  - name: TRequestModel
  - name: )
  - name: (
  - name: TRequestModel
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: TRequestModel
  name: TRequestModel
  nameWithType: TRequestModel
  fullName: TRequestModel
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler`4.MapToDto*
  commentId: Overload:Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler`4.MapToDto
  href: Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler-4.html#Quickie_Handlers_Readonly_Implementation_ReadOnlyCollectionRequestHandler_4_MapToDto_System_Collections_Generic_ICollection__1__
  name: MapToDto
  nameWithType: ReadOnlyCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToDto
  fullName: Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToDto
  nameWithType.vb: ReadOnlyCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToDto
  fullName.vb: Quickie.Handlers.Readonly.Implementation.ReadOnlyCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToDto
- uid: System.Collections.Generic.ICollection{{TEntity}}
  commentId: T:System.Collections.Generic.ICollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<TEntity>
  nameWithType: ICollection<TEntity>
  fullName: System.Collections.Generic.ICollection<TEntity>
  nameWithType.vb: ICollection(Of TEntity)
  fullName.vb: System.Collections.Generic.ICollection(Of TEntity)
  name.vb: ICollection(Of TEntity)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: System.Collections.Generic.ICollection{{TViewModel}}
  commentId: T:System.Collections.Generic.ICollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<TViewModel>
  nameWithType: ICollection<TViewModel>
  fullName: System.Collections.Generic.ICollection<TViewModel>
  nameWithType.vb: ICollection(Of TViewModel)
  fullName.vb: System.Collections.Generic.ICollection(Of TViewModel)
  name.vb: ICollection(Of TViewModel)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TViewModel
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TViewModel
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
