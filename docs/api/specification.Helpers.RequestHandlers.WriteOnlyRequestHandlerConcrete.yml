### YamlMime:ManagedReference
items:
- uid: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete
  commentId: T:specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete
  id: WriteOnlyRequestHandlerConcrete
  parent: specification.Helpers.RequestHandlers
  children:
  - specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.#ctor(Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete})
  - specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToCollectionOfDto(System.Collections.Generic.ICollection{specification.Helpers.Entities.WriteOnlyEntityConcrete})
  - specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToCollectionOfEntity(System.Collections.Generic.ICollection{specification.Helpers.Dtos.WriteOnlyDtoConcrete})
  - specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToDto(specification.Helpers.Entities.WriteOnlyEntityConcrete)
  - specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToEntity(specification.Helpers.Dtos.WriteOnlyDtoConcrete)
  langs:
  - csharp
  - vb
  name: WriteOnlyRequestHandlerConcrete
  nameWithType: WriteOnlyRequestHandlerConcrete
  fullName: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete
  type: Class
  source:
    remote:
      path: tests/specification/Helpers/RequestHandlers/WriteOnlyRequestHandlerConcrete.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: WriteOnlyRequestHandlerConcrete
    path: ../tests/specification/Helpers/RequestHandlers/WriteOnlyRequestHandlerConcrete.cs
    startLine: 7
  assemblies:
  - specification
  namespace: specification.Helpers.RequestHandlers
  syntax:
    content: 'public class WriteOnlyRequestHandlerConcrete : WriteOnlyRequestHandler<WriteOnlyDtoConcrete, WriteOnlyEntityConcrete, IWriteOnlyDataHandler<WriteOnlyEntityConcrete>>, IWriteOnlyRequestHandler<WriteOnlyDtoConcrete>'
    content.vb: Public Class WriteOnlyRequestHandlerConcrete Inherits WriteOnlyRequestHandler(Of WriteOnlyDtoConcrete, WriteOnlyEntityConcrete, IWriteOnlyDataHandler(Of WriteOnlyEntityConcrete)) Implements IWriteOnlyRequestHandler(Of WriteOnlyDtoConcrete)
  inheritance:
  - System.Object
  - Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}
  implements:
  - Quickie.Handlers.Writeonly.Definition.IWriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete}
  inheritedMembers:
  - Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.CreateItemAsync(specification.Helpers.Dtos.WriteOnlyDtoConcrete,System.Nullable{System.Threading.CancellationToken})
  - Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.CreateItemsAsync(System.Collections.Generic.ICollection{specification.Helpers.Dtos.WriteOnlyDtoConcrete},System.Nullable{System.Threading.CancellationToken})
  - Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.MapToEntity(specification.Helpers.Dtos.WriteOnlyDtoConcrete)
  - Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.MapToDto(specification.Helpers.Entities.WriteOnlyEntityConcrete)
  - Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.MapToCollectionOfEntity(System.Collections.Generic.ICollection{specification.Helpers.Dtos.WriteOnlyDtoConcrete})
  - Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.MapToCollectionOfDto(System.Collections.Generic.ICollection{specification.Helpers.Entities.WriteOnlyEntityConcrete})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.#ctor(Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete})
  commentId: M:specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.#ctor(Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete})
  id: '#ctor(Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete})'
  parent: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete
  langs:
  - csharp
  - vb
  name: WriteOnlyRequestHandlerConcrete(IWriteOnlyDataHandler<WriteOnlyEntityConcrete>)
  nameWithType: WriteOnlyRequestHandlerConcrete.WriteOnlyRequestHandlerConcrete(IWriteOnlyDataHandler<WriteOnlyEntityConcrete>)
  fullName: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.WriteOnlyRequestHandlerConcrete(Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler<specification.Helpers.Entities.WriteOnlyEntityConcrete>)
  type: Constructor
  source:
    remote:
      path: tests/specification/Helpers/RequestHandlers/WriteOnlyRequestHandlerConcrete.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: .ctor
    path: ../tests/specification/Helpers/RequestHandlers/WriteOnlyRequestHandlerConcrete.cs
    startLine: 7
  assemblies:
  - specification
  namespace: specification.Helpers.RequestHandlers
  syntax:
    content: public WriteOnlyRequestHandlerConcrete(IWriteOnlyDataHandler<WriteOnlyEntityConcrete> dataHandler)
    parameters:
    - id: dataHandler
      type: Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}
    content.vb: Public Sub New(dataHandler As IWriteOnlyDataHandler(Of WriteOnlyEntityConcrete))
  overload: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.#ctor*
  nameWithType.vb: WriteOnlyRequestHandlerConcrete.New(IWriteOnlyDataHandler(Of WriteOnlyEntityConcrete))
  fullName.vb: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.New(Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler(Of specification.Helpers.Entities.WriteOnlyEntityConcrete))
  name.vb: New(IWriteOnlyDataHandler(Of WriteOnlyEntityConcrete))
- uid: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToEntity(specification.Helpers.Dtos.WriteOnlyDtoConcrete)
  commentId: M:specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToEntity(specification.Helpers.Dtos.WriteOnlyDtoConcrete)
  id: MapToEntity(specification.Helpers.Dtos.WriteOnlyDtoConcrete)
  parent: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete
  langs:
  - csharp
  - vb
  name: MapToEntity(WriteOnlyDtoConcrete)
  nameWithType: WriteOnlyRequestHandlerConcrete.MapToEntity(WriteOnlyDtoConcrete)
  fullName: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToEntity(specification.Helpers.Dtos.WriteOnlyDtoConcrete)
  type: Method
  source:
    remote:
      path: tests/specification/Helpers/RequestHandlers/WriteOnlyRequestHandlerConcrete.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: MapToEntity
    path: ../tests/specification/Helpers/RequestHandlers/WriteOnlyRequestHandlerConcrete.cs
    startLine: 9
  assemblies:
  - specification
  namespace: specification.Helpers.RequestHandlers
  summary: Maps a <xref href="specification.Helpers.Dtos.WriteOnlyDtoConcrete" data-throw-if-not-resolved="false"></xref> to a <xref href="specification.Helpers.Entities.WriteOnlyEntityConcrete" data-throw-if-not-resolved="false"></xref> entity.
  example: []
  syntax:
    content: protected override WriteOnlyEntityConcrete MapToEntity(WriteOnlyDtoConcrete requestModel)
    parameters:
    - id: requestModel
      type: specification.Helpers.Dtos.WriteOnlyDtoConcrete
      description: The view model/dto to map to an entity
    return:
      type: specification.Helpers.Entities.WriteOnlyEntityConcrete
      description: Entity.
    content.vb: Protected Overrides Function MapToEntity(requestModel As WriteOnlyDtoConcrete) As WriteOnlyEntityConcrete
  overridden: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.MapToEntity(specification.Helpers.Dtos.WriteOnlyDtoConcrete)
  overload: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToEntity*
- uid: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToDto(specification.Helpers.Entities.WriteOnlyEntityConcrete)
  commentId: M:specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToDto(specification.Helpers.Entities.WriteOnlyEntityConcrete)
  id: MapToDto(specification.Helpers.Entities.WriteOnlyEntityConcrete)
  parent: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete
  langs:
  - csharp
  - vb
  name: MapToDto(WriteOnlyEntityConcrete)
  nameWithType: WriteOnlyRequestHandlerConcrete.MapToDto(WriteOnlyEntityConcrete)
  fullName: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToDto(specification.Helpers.Entities.WriteOnlyEntityConcrete)
  type: Method
  source:
    remote:
      path: tests/specification/Helpers/RequestHandlers/WriteOnlyRequestHandlerConcrete.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: MapToDto
    path: ../tests/specification/Helpers/RequestHandlers/WriteOnlyRequestHandlerConcrete.cs
    startLine: 14
  assemblies:
  - specification
  namespace: specification.Helpers.RequestHandlers
  summary: Maps a <xref href="specification.Helpers.Entities.WriteOnlyEntityConcrete" data-throw-if-not-resolved="false"></xref> entity to a <xref href="specification.Helpers.Dtos.WriteOnlyDtoConcrete" data-throw-if-not-resolved="false"></xref> view model/dto.
  example: []
  syntax:
    content: protected override WriteOnlyDtoConcrete MapToDto(WriteOnlyEntityConcrete entity)
    parameters:
    - id: entity
      type: specification.Helpers.Entities.WriteOnlyEntityConcrete
      description: Entity.
    return:
      type: specification.Helpers.Dtos.WriteOnlyDtoConcrete
      description: View model/dto.
    content.vb: Protected Overrides Function MapToDto(entity As WriteOnlyEntityConcrete) As WriteOnlyDtoConcrete
  overridden: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.MapToDto(specification.Helpers.Entities.WriteOnlyEntityConcrete)
  overload: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToDto*
- uid: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToCollectionOfEntity(System.Collections.Generic.ICollection{specification.Helpers.Dtos.WriteOnlyDtoConcrete})
  commentId: M:specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToCollectionOfEntity(System.Collections.Generic.ICollection{specification.Helpers.Dtos.WriteOnlyDtoConcrete})
  id: MapToCollectionOfEntity(System.Collections.Generic.ICollection{specification.Helpers.Dtos.WriteOnlyDtoConcrete})
  parent: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete
  langs:
  - csharp
  - vb
  name: MapToCollectionOfEntity(ICollection<WriteOnlyDtoConcrete>)
  nameWithType: WriteOnlyRequestHandlerConcrete.MapToCollectionOfEntity(ICollection<WriteOnlyDtoConcrete>)
  fullName: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToCollectionOfEntity(System.Collections.Generic.ICollection<specification.Helpers.Dtos.WriteOnlyDtoConcrete>)
  type: Method
  source:
    remote:
      path: tests/specification/Helpers/RequestHandlers/WriteOnlyRequestHandlerConcrete.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: MapToCollectionOfEntity
    path: ../tests/specification/Helpers/RequestHandlers/WriteOnlyRequestHandlerConcrete.cs
    startLine: 19
  assemblies:
  - specification
  namespace: specification.Helpers.RequestHandlers
  summary: Maps a collection of <xref href="specification.Helpers.Dtos.WriteOnlyDtoConcrete" data-throw-if-not-resolved="false"></xref> to a collection of <xref href="specification.Helpers.Entities.WriteOnlyEntityConcrete" data-throw-if-not-resolved="false"></xref> entities.
  example: []
  syntax:
    content: protected override ICollection<WriteOnlyEntityConcrete> MapToCollectionOfEntity(ICollection<WriteOnlyDtoConcrete> requestModels)
    parameters:
    - id: requestModels
      type: System.Collections.Generic.ICollection{specification.Helpers.Dtos.WriteOnlyDtoConcrete}
      description: Collection of view model/dto
    return:
      type: System.Collections.Generic.ICollection{specification.Helpers.Entities.WriteOnlyEntityConcrete}
      description: Collection of entity.
    content.vb: Protected Overrides Function MapToCollectionOfEntity(requestModels As ICollection(Of WriteOnlyDtoConcrete)) As ICollection(Of WriteOnlyEntityConcrete)
  overridden: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.MapToCollectionOfEntity(System.Collections.Generic.ICollection{specification.Helpers.Dtos.WriteOnlyDtoConcrete})
  overload: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToCollectionOfEntity*
  nameWithType.vb: WriteOnlyRequestHandlerConcrete.MapToCollectionOfEntity(ICollection(Of WriteOnlyDtoConcrete))
  fullName.vb: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToCollectionOfEntity(System.Collections.Generic.ICollection(Of specification.Helpers.Dtos.WriteOnlyDtoConcrete))
  name.vb: MapToCollectionOfEntity(ICollection(Of WriteOnlyDtoConcrete))
- uid: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToCollectionOfDto(System.Collections.Generic.ICollection{specification.Helpers.Entities.WriteOnlyEntityConcrete})
  commentId: M:specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToCollectionOfDto(System.Collections.Generic.ICollection{specification.Helpers.Entities.WriteOnlyEntityConcrete})
  id: MapToCollectionOfDto(System.Collections.Generic.ICollection{specification.Helpers.Entities.WriteOnlyEntityConcrete})
  parent: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete
  langs:
  - csharp
  - vb
  name: MapToCollectionOfDto(ICollection<WriteOnlyEntityConcrete>)
  nameWithType: WriteOnlyRequestHandlerConcrete.MapToCollectionOfDto(ICollection<WriteOnlyEntityConcrete>)
  fullName: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToCollectionOfDto(System.Collections.Generic.ICollection<specification.Helpers.Entities.WriteOnlyEntityConcrete>)
  type: Method
  source:
    remote:
      path: tests/specification/Helpers/RequestHandlers/WriteOnlyRequestHandlerConcrete.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: MapToCollectionOfDto
    path: ../tests/specification/Helpers/RequestHandlers/WriteOnlyRequestHandlerConcrete.cs
    startLine: 24
  assemblies:
  - specification
  namespace: specification.Helpers.RequestHandlers
  summary: Maps a collection of <xref href="specification.Helpers.Entities.WriteOnlyEntityConcrete" data-throw-if-not-resolved="false"></xref> entities to a collection of <xref href="specification.Helpers.Dtos.WriteOnlyDtoConcrete" data-throw-if-not-resolved="false"></xref> view models.
  example: []
  syntax:
    content: protected override ICollection<WriteOnlyDtoConcrete> MapToCollectionOfDto(ICollection<WriteOnlyEntityConcrete> entities)
    parameters:
    - id: entities
      type: System.Collections.Generic.ICollection{specification.Helpers.Entities.WriteOnlyEntityConcrete}
      description: Collection of entity.
    return:
      type: System.Collections.Generic.ICollection{specification.Helpers.Dtos.WriteOnlyDtoConcrete}
      description: Collection of view model/dto.
    content.vb: Protected Overrides Function MapToCollectionOfDto(entities As ICollection(Of WriteOnlyEntityConcrete)) As ICollection(Of WriteOnlyDtoConcrete)
  overridden: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.MapToCollectionOfDto(System.Collections.Generic.ICollection{specification.Helpers.Entities.WriteOnlyEntityConcrete})
  overload: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToCollectionOfDto*
  nameWithType.vb: WriteOnlyRequestHandlerConcrete.MapToCollectionOfDto(ICollection(Of WriteOnlyEntityConcrete))
  fullName.vb: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToCollectionOfDto(System.Collections.Generic.ICollection(Of specification.Helpers.Entities.WriteOnlyEntityConcrete))
  name.vb: MapToCollectionOfDto(ICollection(Of WriteOnlyEntityConcrete))
references:
- uid: specification.Helpers.RequestHandlers
  commentId: N:specification.Helpers.RequestHandlers
  href: specification.html
  name: specification.Helpers.RequestHandlers
  nameWithType: specification.Helpers.RequestHandlers
  fullName: specification.Helpers.RequestHandlers
  spec.csharp:
  - uid: specification
    name: specification
    href: specification.html
  - name: .
  - uid: specification.Helpers
    name: Helpers
    href: specification.Helpers.html
  - name: .
  - uid: specification.Helpers.RequestHandlers
    name: RequestHandlers
    href: specification.Helpers.RequestHandlers.html
  spec.vb:
  - uid: specification
    name: specification
    href: specification.html
  - name: .
  - uid: specification.Helpers
    name: Helpers
    href: specification.Helpers.html
  - name: .
  - uid: specification.Helpers.RequestHandlers
    name: RequestHandlers
    href: specification.Helpers.RequestHandlers.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}
  commentId: T:Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}
  parent: Quickie.Handlers.Writeonly.Implementation
  definition: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3
  href: specification.Helpers.Dtos.WriteOnlyDtoConcrete.html
  name: WriteOnlyRequestHandler<WriteOnlyDtoConcrete, WriteOnlyEntityConcrete, IWriteOnlyDataHandler<WriteOnlyEntityConcrete>>
  nameWithType: WriteOnlyRequestHandler<WriteOnlyDtoConcrete, WriteOnlyEntityConcrete, IWriteOnlyDataHandler<WriteOnlyEntityConcrete>>
  fullName: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler<specification.Helpers.Dtos.WriteOnlyDtoConcrete, specification.Helpers.Entities.WriteOnlyEntityConcrete, Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler<specification.Helpers.Entities.WriteOnlyEntityConcrete>>
  nameWithType.vb: WriteOnlyRequestHandler(Of WriteOnlyDtoConcrete, WriteOnlyEntityConcrete, IWriteOnlyDataHandler(Of WriteOnlyEntityConcrete))
  fullName.vb: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler(Of specification.Helpers.Dtos.WriteOnlyDtoConcrete, specification.Helpers.Entities.WriteOnlyEntityConcrete, Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler(Of specification.Helpers.Entities.WriteOnlyEntityConcrete))
  name.vb: WriteOnlyRequestHandler(Of WriteOnlyDtoConcrete, WriteOnlyEntityConcrete, IWriteOnlyDataHandler(Of WriteOnlyEntityConcrete))
  spec.csharp:
  - uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3
    name: WriteOnlyRequestHandler
  - name: <
  - uid: specification.Helpers.Dtos.WriteOnlyDtoConcrete
    name: WriteOnlyDtoConcrete
    href: specification.Helpers.Dtos.WriteOnlyDtoConcrete.html
  - name: ','
  - name: " "
  - uid: specification.Helpers.Entities.WriteOnlyEntityConcrete
    name: WriteOnlyEntityConcrete
    href: specification.Helpers.Entities.WriteOnlyEntityConcrete.html
  - name: ','
  - name: " "
  - uid: Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler`1
    name: IWriteOnlyDataHandler
  - name: <
  - uid: specification.Helpers.Entities.WriteOnlyEntityConcrete
    name: WriteOnlyEntityConcrete
    href: specification.Helpers.Entities.WriteOnlyEntityConcrete.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3
    name: WriteOnlyRequestHandler
  - name: (
  - name: Of
  - name: " "
  - uid: specification.Helpers.Dtos.WriteOnlyDtoConcrete
    name: WriteOnlyDtoConcrete
    href: specification.Helpers.Dtos.WriteOnlyDtoConcrete.html
  - name: ','
  - name: " "
  - uid: specification.Helpers.Entities.WriteOnlyEntityConcrete
    name: WriteOnlyEntityConcrete
    href: specification.Helpers.Entities.WriteOnlyEntityConcrete.html
  - name: ','
  - name: " "
  - uid: Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler`1
    name: IWriteOnlyDataHandler
  - name: (
  - name: Of
  - name: " "
  - uid: specification.Helpers.Entities.WriteOnlyEntityConcrete
    name: WriteOnlyEntityConcrete
    href: specification.Helpers.Entities.WriteOnlyEntityConcrete.html
  - name: )
  - name: )
- uid: Quickie.Handlers.Writeonly.Definition.IWriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete}
  commentId: T:Quickie.Handlers.Writeonly.Definition.IWriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete}
  parent: Quickie.Handlers.Writeonly.Definition
  definition: Quickie.Handlers.Writeonly.Definition.IWriteOnlyRequestHandler`1
  href: specification.Helpers.Dtos.WriteOnlyDtoConcrete.html
  name: IWriteOnlyRequestHandler<WriteOnlyDtoConcrete>
  nameWithType: IWriteOnlyRequestHandler<WriteOnlyDtoConcrete>
  fullName: Quickie.Handlers.Writeonly.Definition.IWriteOnlyRequestHandler<specification.Helpers.Dtos.WriteOnlyDtoConcrete>
  nameWithType.vb: IWriteOnlyRequestHandler(Of WriteOnlyDtoConcrete)
  fullName.vb: Quickie.Handlers.Writeonly.Definition.IWriteOnlyRequestHandler(Of specification.Helpers.Dtos.WriteOnlyDtoConcrete)
  name.vb: IWriteOnlyRequestHandler(Of WriteOnlyDtoConcrete)
  spec.csharp:
  - uid: Quickie.Handlers.Writeonly.Definition.IWriteOnlyRequestHandler`1
    name: IWriteOnlyRequestHandler
  - name: <
  - uid: specification.Helpers.Dtos.WriteOnlyDtoConcrete
    name: WriteOnlyDtoConcrete
    href: specification.Helpers.Dtos.WriteOnlyDtoConcrete.html
  - name: '>'
  spec.vb:
  - uid: Quickie.Handlers.Writeonly.Definition.IWriteOnlyRequestHandler`1
    name: IWriteOnlyRequestHandler
  - name: (
  - name: Of
  - name: " "
  - uid: specification.Helpers.Dtos.WriteOnlyDtoConcrete
    name: WriteOnlyDtoConcrete
    href: specification.Helpers.Dtos.WriteOnlyDtoConcrete.html
  - name: )
- uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.CreateItemAsync(specification.Helpers.Dtos.WriteOnlyDtoConcrete,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.CreateItemAsync(specification.Helpers.Dtos.WriteOnlyDtoConcrete,System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}
  definition: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3.CreateItemAsync(`0,System.Nullable{System.Threading.CancellationToken})
  href: specification.Helpers.Dtos.WriteOnlyDtoConcrete.html
  name: CreateItemAsync(WriteOnlyDtoConcrete, CancellationToken?)
  nameWithType: WriteOnlyRequestHandler<WriteOnlyDtoConcrete, WriteOnlyEntityConcrete, IWriteOnlyDataHandler<WriteOnlyEntityConcrete>>.CreateItemAsync(WriteOnlyDtoConcrete, CancellationToken?)
  fullName: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler<specification.Helpers.Dtos.WriteOnlyDtoConcrete, specification.Helpers.Entities.WriteOnlyEntityConcrete, Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler<specification.Helpers.Entities.WriteOnlyEntityConcrete>>.CreateItemAsync(specification.Helpers.Dtos.WriteOnlyDtoConcrete, System.Threading.CancellationToken?)
  nameWithType.vb: WriteOnlyRequestHandler(Of WriteOnlyDtoConcrete, WriteOnlyEntityConcrete, IWriteOnlyDataHandler(Of WriteOnlyEntityConcrete)).CreateItemAsync(WriteOnlyDtoConcrete, CancellationToken?)
  fullName.vb: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler(Of specification.Helpers.Dtos.WriteOnlyDtoConcrete, specification.Helpers.Entities.WriteOnlyEntityConcrete, Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler(Of specification.Helpers.Entities.WriteOnlyEntityConcrete)).CreateItemAsync(specification.Helpers.Dtos.WriteOnlyDtoConcrete, System.Threading.CancellationToken?)
  spec.csharp:
  - uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.CreateItemAsync(specification.Helpers.Dtos.WriteOnlyDtoConcrete,System.Nullable{System.Threading.CancellationToken})
    name: CreateItemAsync
  - name: (
  - uid: specification.Helpers.Dtos.WriteOnlyDtoConcrete
    name: WriteOnlyDtoConcrete
    href: specification.Helpers.Dtos.WriteOnlyDtoConcrete.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.CreateItemAsync(specification.Helpers.Dtos.WriteOnlyDtoConcrete,System.Nullable{System.Threading.CancellationToken})
    name: CreateItemAsync
  - name: (
  - uid: specification.Helpers.Dtos.WriteOnlyDtoConcrete
    name: WriteOnlyDtoConcrete
    href: specification.Helpers.Dtos.WriteOnlyDtoConcrete.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.CreateItemsAsync(System.Collections.Generic.ICollection{specification.Helpers.Dtos.WriteOnlyDtoConcrete},System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.CreateItemsAsync(System.Collections.Generic.ICollection{specification.Helpers.Dtos.WriteOnlyDtoConcrete},System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}
  definition: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3.CreateItemsAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: CreateItemsAsync(ICollection<WriteOnlyDtoConcrete>, CancellationToken?)
  nameWithType: WriteOnlyRequestHandler<WriteOnlyDtoConcrete, WriteOnlyEntityConcrete, IWriteOnlyDataHandler<WriteOnlyEntityConcrete>>.CreateItemsAsync(ICollection<WriteOnlyDtoConcrete>, CancellationToken?)
  fullName: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler<specification.Helpers.Dtos.WriteOnlyDtoConcrete, specification.Helpers.Entities.WriteOnlyEntityConcrete, Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler<specification.Helpers.Entities.WriteOnlyEntityConcrete>>.CreateItemsAsync(System.Collections.Generic.ICollection<specification.Helpers.Dtos.WriteOnlyDtoConcrete>, System.Threading.CancellationToken?)
  nameWithType.vb: WriteOnlyRequestHandler(Of WriteOnlyDtoConcrete, WriteOnlyEntityConcrete, IWriteOnlyDataHandler(Of WriteOnlyEntityConcrete)).CreateItemsAsync(ICollection(Of WriteOnlyDtoConcrete), CancellationToken?)
  fullName.vb: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler(Of specification.Helpers.Dtos.WriteOnlyDtoConcrete, specification.Helpers.Entities.WriteOnlyEntityConcrete, Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler(Of specification.Helpers.Entities.WriteOnlyEntityConcrete)).CreateItemsAsync(System.Collections.Generic.ICollection(Of specification.Helpers.Dtos.WriteOnlyDtoConcrete), System.Threading.CancellationToken?)
  name.vb: CreateItemsAsync(ICollection(Of WriteOnlyDtoConcrete), CancellationToken?)
  spec.csharp:
  - uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.CreateItemsAsync(System.Collections.Generic.ICollection{specification.Helpers.Dtos.WriteOnlyDtoConcrete},System.Nullable{System.Threading.CancellationToken})
    name: CreateItemsAsync
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: specification.Helpers.Dtos.WriteOnlyDtoConcrete
    name: WriteOnlyDtoConcrete
    href: specification.Helpers.Dtos.WriteOnlyDtoConcrete.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.CreateItemsAsync(System.Collections.Generic.ICollection{specification.Helpers.Dtos.WriteOnlyDtoConcrete},System.Nullable{System.Threading.CancellationToken})
    name: CreateItemsAsync
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: specification.Helpers.Dtos.WriteOnlyDtoConcrete
    name: WriteOnlyDtoConcrete
    href: specification.Helpers.Dtos.WriteOnlyDtoConcrete.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.MapToEntity(specification.Helpers.Dtos.WriteOnlyDtoConcrete)
  commentId: M:Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.MapToEntity(specification.Helpers.Dtos.WriteOnlyDtoConcrete)
  parent: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}
  definition: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3.MapToEntity(`0)
  href: specification.Helpers.Dtos.WriteOnlyDtoConcrete.html
  name: MapToEntity(WriteOnlyDtoConcrete)
  nameWithType: WriteOnlyRequestHandler<WriteOnlyDtoConcrete, WriteOnlyEntityConcrete, IWriteOnlyDataHandler<WriteOnlyEntityConcrete>>.MapToEntity(WriteOnlyDtoConcrete)
  fullName: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler<specification.Helpers.Dtos.WriteOnlyDtoConcrete, specification.Helpers.Entities.WriteOnlyEntityConcrete, Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler<specification.Helpers.Entities.WriteOnlyEntityConcrete>>.MapToEntity(specification.Helpers.Dtos.WriteOnlyDtoConcrete)
  nameWithType.vb: WriteOnlyRequestHandler(Of WriteOnlyDtoConcrete, WriteOnlyEntityConcrete, IWriteOnlyDataHandler(Of WriteOnlyEntityConcrete)).MapToEntity(WriteOnlyDtoConcrete)
  fullName.vb: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler(Of specification.Helpers.Dtos.WriteOnlyDtoConcrete, specification.Helpers.Entities.WriteOnlyEntityConcrete, Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler(Of specification.Helpers.Entities.WriteOnlyEntityConcrete)).MapToEntity(specification.Helpers.Dtos.WriteOnlyDtoConcrete)
  spec.csharp:
  - uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.MapToEntity(specification.Helpers.Dtos.WriteOnlyDtoConcrete)
    name: MapToEntity
  - name: (
  - uid: specification.Helpers.Dtos.WriteOnlyDtoConcrete
    name: WriteOnlyDtoConcrete
    href: specification.Helpers.Dtos.WriteOnlyDtoConcrete.html
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.MapToEntity(specification.Helpers.Dtos.WriteOnlyDtoConcrete)
    name: MapToEntity
  - name: (
  - uid: specification.Helpers.Dtos.WriteOnlyDtoConcrete
    name: WriteOnlyDtoConcrete
    href: specification.Helpers.Dtos.WriteOnlyDtoConcrete.html
  - name: )
- uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.MapToDto(specification.Helpers.Entities.WriteOnlyEntityConcrete)
  commentId: M:Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.MapToDto(specification.Helpers.Entities.WriteOnlyEntityConcrete)
  parent: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}
  definition: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3.MapToDto(`1)
  href: specification.Helpers.Entities.WriteOnlyEntityConcrete.html
  name: MapToDto(WriteOnlyEntityConcrete)
  nameWithType: WriteOnlyRequestHandler<WriteOnlyDtoConcrete, WriteOnlyEntityConcrete, IWriteOnlyDataHandler<WriteOnlyEntityConcrete>>.MapToDto(WriteOnlyEntityConcrete)
  fullName: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler<specification.Helpers.Dtos.WriteOnlyDtoConcrete, specification.Helpers.Entities.WriteOnlyEntityConcrete, Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler<specification.Helpers.Entities.WriteOnlyEntityConcrete>>.MapToDto(specification.Helpers.Entities.WriteOnlyEntityConcrete)
  nameWithType.vb: WriteOnlyRequestHandler(Of WriteOnlyDtoConcrete, WriteOnlyEntityConcrete, IWriteOnlyDataHandler(Of WriteOnlyEntityConcrete)).MapToDto(WriteOnlyEntityConcrete)
  fullName.vb: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler(Of specification.Helpers.Dtos.WriteOnlyDtoConcrete, specification.Helpers.Entities.WriteOnlyEntityConcrete, Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler(Of specification.Helpers.Entities.WriteOnlyEntityConcrete)).MapToDto(specification.Helpers.Entities.WriteOnlyEntityConcrete)
  spec.csharp:
  - uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.MapToDto(specification.Helpers.Entities.WriteOnlyEntityConcrete)
    name: MapToDto
  - name: (
  - uid: specification.Helpers.Entities.WriteOnlyEntityConcrete
    name: WriteOnlyEntityConcrete
    href: specification.Helpers.Entities.WriteOnlyEntityConcrete.html
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.MapToDto(specification.Helpers.Entities.WriteOnlyEntityConcrete)
    name: MapToDto
  - name: (
  - uid: specification.Helpers.Entities.WriteOnlyEntityConcrete
    name: WriteOnlyEntityConcrete
    href: specification.Helpers.Entities.WriteOnlyEntityConcrete.html
  - name: )
- uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.MapToCollectionOfEntity(System.Collections.Generic.ICollection{specification.Helpers.Dtos.WriteOnlyDtoConcrete})
  commentId: M:Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.MapToCollectionOfEntity(System.Collections.Generic.ICollection{specification.Helpers.Dtos.WriteOnlyDtoConcrete})
  parent: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}
  definition: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3.MapToCollectionOfEntity(System.Collections.Generic.ICollection{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: MapToCollectionOfEntity(ICollection<WriteOnlyDtoConcrete>)
  nameWithType: WriteOnlyRequestHandler<WriteOnlyDtoConcrete, WriteOnlyEntityConcrete, IWriteOnlyDataHandler<WriteOnlyEntityConcrete>>.MapToCollectionOfEntity(ICollection<WriteOnlyDtoConcrete>)
  fullName: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler<specification.Helpers.Dtos.WriteOnlyDtoConcrete, specification.Helpers.Entities.WriteOnlyEntityConcrete, Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler<specification.Helpers.Entities.WriteOnlyEntityConcrete>>.MapToCollectionOfEntity(System.Collections.Generic.ICollection<specification.Helpers.Dtos.WriteOnlyDtoConcrete>)
  nameWithType.vb: WriteOnlyRequestHandler(Of WriteOnlyDtoConcrete, WriteOnlyEntityConcrete, IWriteOnlyDataHandler(Of WriteOnlyEntityConcrete)).MapToCollectionOfEntity(ICollection(Of WriteOnlyDtoConcrete))
  fullName.vb: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler(Of specification.Helpers.Dtos.WriteOnlyDtoConcrete, specification.Helpers.Entities.WriteOnlyEntityConcrete, Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler(Of specification.Helpers.Entities.WriteOnlyEntityConcrete)).MapToCollectionOfEntity(System.Collections.Generic.ICollection(Of specification.Helpers.Dtos.WriteOnlyDtoConcrete))
  name.vb: MapToCollectionOfEntity(ICollection(Of WriteOnlyDtoConcrete))
  spec.csharp:
  - uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.MapToCollectionOfEntity(System.Collections.Generic.ICollection{specification.Helpers.Dtos.WriteOnlyDtoConcrete})
    name: MapToCollectionOfEntity
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: specification.Helpers.Dtos.WriteOnlyDtoConcrete
    name: WriteOnlyDtoConcrete
    href: specification.Helpers.Dtos.WriteOnlyDtoConcrete.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.MapToCollectionOfEntity(System.Collections.Generic.ICollection{specification.Helpers.Dtos.WriteOnlyDtoConcrete})
    name: MapToCollectionOfEntity
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: specification.Helpers.Dtos.WriteOnlyDtoConcrete
    name: WriteOnlyDtoConcrete
    href: specification.Helpers.Dtos.WriteOnlyDtoConcrete.html
  - name: )
  - name: )
- uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.MapToCollectionOfDto(System.Collections.Generic.ICollection{specification.Helpers.Entities.WriteOnlyEntityConcrete})
  commentId: M:Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.MapToCollectionOfDto(System.Collections.Generic.ICollection{specification.Helpers.Entities.WriteOnlyEntityConcrete})
  parent: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}
  definition: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3.MapToCollectionOfDto(System.Collections.Generic.ICollection{`1})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: MapToCollectionOfDto(ICollection<WriteOnlyEntityConcrete>)
  nameWithType: WriteOnlyRequestHandler<WriteOnlyDtoConcrete, WriteOnlyEntityConcrete, IWriteOnlyDataHandler<WriteOnlyEntityConcrete>>.MapToCollectionOfDto(ICollection<WriteOnlyEntityConcrete>)
  fullName: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler<specification.Helpers.Dtos.WriteOnlyDtoConcrete, specification.Helpers.Entities.WriteOnlyEntityConcrete, Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler<specification.Helpers.Entities.WriteOnlyEntityConcrete>>.MapToCollectionOfDto(System.Collections.Generic.ICollection<specification.Helpers.Entities.WriteOnlyEntityConcrete>)
  nameWithType.vb: WriteOnlyRequestHandler(Of WriteOnlyDtoConcrete, WriteOnlyEntityConcrete, IWriteOnlyDataHandler(Of WriteOnlyEntityConcrete)).MapToCollectionOfDto(ICollection(Of WriteOnlyEntityConcrete))
  fullName.vb: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler(Of specification.Helpers.Dtos.WriteOnlyDtoConcrete, specification.Helpers.Entities.WriteOnlyEntityConcrete, Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler(Of specification.Helpers.Entities.WriteOnlyEntityConcrete)).MapToCollectionOfDto(System.Collections.Generic.ICollection(Of specification.Helpers.Entities.WriteOnlyEntityConcrete))
  name.vb: MapToCollectionOfDto(ICollection(Of WriteOnlyEntityConcrete))
  spec.csharp:
  - uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.MapToCollectionOfDto(System.Collections.Generic.ICollection{specification.Helpers.Entities.WriteOnlyEntityConcrete})
    name: MapToCollectionOfDto
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: specification.Helpers.Entities.WriteOnlyEntityConcrete
    name: WriteOnlyEntityConcrete
    href: specification.Helpers.Entities.WriteOnlyEntityConcrete.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler{specification.Helpers.Dtos.WriteOnlyDtoConcrete,specification.Helpers.Entities.WriteOnlyEntityConcrete,Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}}.MapToCollectionOfDto(System.Collections.Generic.ICollection{specification.Helpers.Entities.WriteOnlyEntityConcrete})
    name: MapToCollectionOfDto
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: specification.Helpers.Entities.WriteOnlyEntityConcrete
    name: WriteOnlyEntityConcrete
    href: specification.Helpers.Entities.WriteOnlyEntityConcrete.html
  - name: )
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3
  commentId: T:Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3
  href: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler-3.html
  name: WriteOnlyRequestHandler<TViewModel, TEntity, TDataHandler>
  nameWithType: WriteOnlyRequestHandler<TViewModel, TEntity, TDataHandler>
  fullName: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler<TViewModel, TEntity, TDataHandler>
  nameWithType.vb: WriteOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler)
  fullName.vb: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler)
  name.vb: WriteOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler)
  spec.csharp:
  - uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3
    name: WriteOnlyRequestHandler
    href: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler-3.html
  - name: <
  - name: TViewModel
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TDataHandler
  - name: '>'
  spec.vb:
  - uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3
    name: WriteOnlyRequestHandler
    href: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler-3.html
  - name: (
  - name: Of
  - name: " "
  - name: TViewModel
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TDataHandler
  - name: )
- uid: Quickie.Handlers.Writeonly.Implementation
  commentId: N:Quickie.Handlers.Writeonly.Implementation
  href: Quickie.html
  name: Quickie.Handlers.Writeonly.Implementation
  nameWithType: Quickie.Handlers.Writeonly.Implementation
  fullName: Quickie.Handlers.Writeonly.Implementation
  spec.csharp:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.Handlers
    name: Handlers
    href: Quickie.Handlers.html
  - name: .
  - uid: Quickie.Handlers.Writeonly
    name: Writeonly
    href: Quickie.Handlers.Writeonly.html
  - name: .
  - uid: Quickie.Handlers.Writeonly.Implementation
    name: Implementation
    href: Quickie.Handlers.Writeonly.Implementation.html
  spec.vb:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.Handlers
    name: Handlers
    href: Quickie.Handlers.html
  - name: .
  - uid: Quickie.Handlers.Writeonly
    name: Writeonly
    href: Quickie.Handlers.Writeonly.html
  - name: .
  - uid: Quickie.Handlers.Writeonly.Implementation
    name: Implementation
    href: Quickie.Handlers.Writeonly.Implementation.html
- uid: Quickie.Handlers.Writeonly.Definition.IWriteOnlyRequestHandler`1
  commentId: T:Quickie.Handlers.Writeonly.Definition.IWriteOnlyRequestHandler`1
  href: Quickie.Handlers.Writeonly.Definition.IWriteOnlyRequestHandler-1.html
  name: IWriteOnlyRequestHandler<TViewModel>
  nameWithType: IWriteOnlyRequestHandler<TViewModel>
  fullName: Quickie.Handlers.Writeonly.Definition.IWriteOnlyRequestHandler<TViewModel>
  nameWithType.vb: IWriteOnlyRequestHandler(Of TViewModel)
  fullName.vb: Quickie.Handlers.Writeonly.Definition.IWriteOnlyRequestHandler(Of TViewModel)
  name.vb: IWriteOnlyRequestHandler(Of TViewModel)
  spec.csharp:
  - uid: Quickie.Handlers.Writeonly.Definition.IWriteOnlyRequestHandler`1
    name: IWriteOnlyRequestHandler
    href: Quickie.Handlers.Writeonly.Definition.IWriteOnlyRequestHandler-1.html
  - name: <
  - name: TViewModel
  - name: '>'
  spec.vb:
  - uid: Quickie.Handlers.Writeonly.Definition.IWriteOnlyRequestHandler`1
    name: IWriteOnlyRequestHandler
    href: Quickie.Handlers.Writeonly.Definition.IWriteOnlyRequestHandler-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TViewModel
  - name: )
- uid: Quickie.Handlers.Writeonly.Definition
  commentId: N:Quickie.Handlers.Writeonly.Definition
  href: Quickie.html
  name: Quickie.Handlers.Writeonly.Definition
  nameWithType: Quickie.Handlers.Writeonly.Definition
  fullName: Quickie.Handlers.Writeonly.Definition
  spec.csharp:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.Handlers
    name: Handlers
    href: Quickie.Handlers.html
  - name: .
  - uid: Quickie.Handlers.Writeonly
    name: Writeonly
    href: Quickie.Handlers.Writeonly.html
  - name: .
  - uid: Quickie.Handlers.Writeonly.Definition
    name: Definition
    href: Quickie.Handlers.Writeonly.Definition.html
  spec.vb:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.Handlers
    name: Handlers
    href: Quickie.Handlers.html
  - name: .
  - uid: Quickie.Handlers.Writeonly
    name: Writeonly
    href: Quickie.Handlers.Writeonly.html
  - name: .
  - uid: Quickie.Handlers.Writeonly.Definition
    name: Definition
    href: Quickie.Handlers.Writeonly.Definition.html
- uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3.CreateItemAsync(`0,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3.CreateItemAsync(`0,System.Nullable{System.Threading.CancellationToken})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CreateItemAsync(TViewModel, CancellationToken?)
  nameWithType: WriteOnlyRequestHandler<TViewModel, TEntity, TDataHandler>.CreateItemAsync(TViewModel, CancellationToken?)
  fullName: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler<TViewModel, TEntity, TDataHandler>.CreateItemAsync(TViewModel, System.Threading.CancellationToken?)
  nameWithType.vb: WriteOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler).CreateItemAsync(TViewModel, CancellationToken?)
  fullName.vb: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler).CreateItemAsync(TViewModel, System.Threading.CancellationToken?)
  spec.csharp:
  - uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3.CreateItemAsync(`0,System.Nullable{System.Threading.CancellationToken})
    name: CreateItemAsync
  - name: (
  - name: TViewModel
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3.CreateItemAsync(`0,System.Nullable{System.Threading.CancellationToken})
    name: CreateItemAsync
  - name: (
  - name: TViewModel
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3.CreateItemsAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3.CreateItemsAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: CreateItemsAsync(ICollection<TViewModel>, CancellationToken?)
  nameWithType: WriteOnlyRequestHandler<TViewModel, TEntity, TDataHandler>.CreateItemsAsync(ICollection<TViewModel>, CancellationToken?)
  fullName: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler<TViewModel, TEntity, TDataHandler>.CreateItemsAsync(System.Collections.Generic.ICollection<TViewModel>, System.Threading.CancellationToken?)
  nameWithType.vb: WriteOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler).CreateItemsAsync(ICollection(Of TViewModel), CancellationToken?)
  fullName.vb: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler).CreateItemsAsync(System.Collections.Generic.ICollection(Of TViewModel), System.Threading.CancellationToken?)
  name.vb: CreateItemsAsync(ICollection(Of TViewModel), CancellationToken?)
  spec.csharp:
  - uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3.CreateItemsAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
    name: CreateItemsAsync
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TViewModel
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3.CreateItemsAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
    name: CreateItemsAsync
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TViewModel
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3.MapToEntity(`0)
  commentId: M:Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3.MapToEntity(`0)
  name: MapToEntity(TViewModel)
  nameWithType: WriteOnlyRequestHandler<TViewModel, TEntity, TDataHandler>.MapToEntity(TViewModel)
  fullName: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler<TViewModel, TEntity, TDataHandler>.MapToEntity(TViewModel)
  nameWithType.vb: WriteOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler).MapToEntity(TViewModel)
  fullName.vb: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler).MapToEntity(TViewModel)
  spec.csharp:
  - uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3.MapToEntity(`0)
    name: MapToEntity
  - name: (
  - name: TViewModel
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3.MapToEntity(`0)
    name: MapToEntity
  - name: (
  - name: TViewModel
  - name: )
- uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3.MapToDto(`1)
  commentId: M:Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3.MapToDto(`1)
  name: MapToDto(TEntity)
  nameWithType: WriteOnlyRequestHandler<TViewModel, TEntity, TDataHandler>.MapToDto(TEntity)
  fullName: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler<TViewModel, TEntity, TDataHandler>.MapToDto(TEntity)
  nameWithType.vb: WriteOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler).MapToDto(TEntity)
  fullName.vb: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler).MapToDto(TEntity)
  spec.csharp:
  - uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3.MapToDto(`1)
    name: MapToDto
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3.MapToDto(`1)
    name: MapToDto
  - name: (
  - name: TEntity
  - name: )
- uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3.MapToCollectionOfEntity(System.Collections.Generic.ICollection{`0})
  commentId: M:Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3.MapToCollectionOfEntity(System.Collections.Generic.ICollection{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: MapToCollectionOfEntity(ICollection<TViewModel>)
  nameWithType: WriteOnlyRequestHandler<TViewModel, TEntity, TDataHandler>.MapToCollectionOfEntity(ICollection<TViewModel>)
  fullName: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler<TViewModel, TEntity, TDataHandler>.MapToCollectionOfEntity(System.Collections.Generic.ICollection<TViewModel>)
  nameWithType.vb: WriteOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler).MapToCollectionOfEntity(ICollection(Of TViewModel))
  fullName.vb: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler).MapToCollectionOfEntity(System.Collections.Generic.ICollection(Of TViewModel))
  name.vb: MapToCollectionOfEntity(ICollection(Of TViewModel))
  spec.csharp:
  - uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3.MapToCollectionOfEntity(System.Collections.Generic.ICollection{`0})
    name: MapToCollectionOfEntity
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TViewModel
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3.MapToCollectionOfEntity(System.Collections.Generic.ICollection{`0})
    name: MapToCollectionOfEntity
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TViewModel
  - name: )
  - name: )
- uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3.MapToCollectionOfDto(System.Collections.Generic.ICollection{`1})
  commentId: M:Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3.MapToCollectionOfDto(System.Collections.Generic.ICollection{`1})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: MapToCollectionOfDto(ICollection<TEntity>)
  nameWithType: WriteOnlyRequestHandler<TViewModel, TEntity, TDataHandler>.MapToCollectionOfDto(ICollection<TEntity>)
  fullName: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler<TViewModel, TEntity, TDataHandler>.MapToCollectionOfDto(System.Collections.Generic.ICollection<TEntity>)
  nameWithType.vb: WriteOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler).MapToCollectionOfDto(ICollection(Of TEntity))
  fullName.vb: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler).MapToCollectionOfDto(System.Collections.Generic.ICollection(Of TEntity))
  name.vb: MapToCollectionOfDto(ICollection(Of TEntity))
  spec.csharp:
  - uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3.MapToCollectionOfDto(System.Collections.Generic.ICollection{`1})
    name: MapToCollectionOfDto
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Writeonly.Implementation.WriteOnlyRequestHandler`3.MapToCollectionOfDto(System.Collections.Generic.ICollection{`1})
    name: MapToCollectionOfDto
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: )
- uid: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.#ctor*
  commentId: Overload:specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.#ctor
  href: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.html#specification_Helpers_RequestHandlers_WriteOnlyRequestHandlerConcrete__ctor_Quickie_DataHandlers_Writeonly_Definition_IWriteOnlyDataHandler_specification_Helpers_Entities_WriteOnlyEntityConcrete__
  name: WriteOnlyRequestHandlerConcrete
  nameWithType: WriteOnlyRequestHandlerConcrete.WriteOnlyRequestHandlerConcrete
  fullName: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.WriteOnlyRequestHandlerConcrete
  nameWithType.vb: WriteOnlyRequestHandlerConcrete.New
  fullName.vb: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.New
  name.vb: New
- uid: Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}
  commentId: T:Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler{specification.Helpers.Entities.WriteOnlyEntityConcrete}
  parent: Quickie.DataHandlers.Writeonly.Definition
  definition: Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler`1
  href: specification.Helpers.Entities.WriteOnlyEntityConcrete.html
  name: IWriteOnlyDataHandler<WriteOnlyEntityConcrete>
  nameWithType: IWriteOnlyDataHandler<WriteOnlyEntityConcrete>
  fullName: Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler<specification.Helpers.Entities.WriteOnlyEntityConcrete>
  nameWithType.vb: IWriteOnlyDataHandler(Of WriteOnlyEntityConcrete)
  fullName.vb: Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler(Of specification.Helpers.Entities.WriteOnlyEntityConcrete)
  name.vb: IWriteOnlyDataHandler(Of WriteOnlyEntityConcrete)
  spec.csharp:
  - uid: Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler`1
    name: IWriteOnlyDataHandler
  - name: <
  - uid: specification.Helpers.Entities.WriteOnlyEntityConcrete
    name: WriteOnlyEntityConcrete
    href: specification.Helpers.Entities.WriteOnlyEntityConcrete.html
  - name: '>'
  spec.vb:
  - uid: Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler`1
    name: IWriteOnlyDataHandler
  - name: (
  - name: Of
  - name: " "
  - uid: specification.Helpers.Entities.WriteOnlyEntityConcrete
    name: WriteOnlyEntityConcrete
    href: specification.Helpers.Entities.WriteOnlyEntityConcrete.html
  - name: )
- uid: Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler`1
  commentId: T:Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler`1
  href: Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler-1.html
  name: IWriteOnlyDataHandler<TEntity>
  nameWithType: IWriteOnlyDataHandler<TEntity>
  fullName: Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler<TEntity>
  nameWithType.vb: IWriteOnlyDataHandler(Of TEntity)
  fullName.vb: Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler(Of TEntity)
  name.vb: IWriteOnlyDataHandler(Of TEntity)
  spec.csharp:
  - uid: Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler`1
    name: IWriteOnlyDataHandler
    href: Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler-1.html
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler`1
    name: IWriteOnlyDataHandler
    href: Quickie.DataHandlers.Writeonly.Definition.IWriteOnlyDataHandler-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: Quickie.DataHandlers.Writeonly.Definition
  commentId: N:Quickie.DataHandlers.Writeonly.Definition
  href: Quickie.html
  name: Quickie.DataHandlers.Writeonly.Definition
  nameWithType: Quickie.DataHandlers.Writeonly.Definition
  fullName: Quickie.DataHandlers.Writeonly.Definition
  spec.csharp:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.DataHandlers
    name: DataHandlers
    href: Quickie.DataHandlers.html
  - name: .
  - uid: Quickie.DataHandlers.Writeonly
    name: Writeonly
    href: Quickie.DataHandlers.Writeonly.html
  - name: .
  - uid: Quickie.DataHandlers.Writeonly.Definition
    name: Definition
    href: Quickie.DataHandlers.Writeonly.Definition.html
  spec.vb:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.DataHandlers
    name: DataHandlers
    href: Quickie.DataHandlers.html
  - name: .
  - uid: Quickie.DataHandlers.Writeonly
    name: Writeonly
    href: Quickie.DataHandlers.Writeonly.html
  - name: .
  - uid: Quickie.DataHandlers.Writeonly.Definition
    name: Definition
    href: Quickie.DataHandlers.Writeonly.Definition.html
- uid: specification.Helpers.Dtos.WriteOnlyDtoConcrete
  commentId: T:specification.Helpers.Dtos.WriteOnlyDtoConcrete
  parent: specification.Helpers.Dtos
  href: specification.Helpers.Dtos.WriteOnlyDtoConcrete.html
  name: WriteOnlyDtoConcrete
  nameWithType: WriteOnlyDtoConcrete
  fullName: specification.Helpers.Dtos.WriteOnlyDtoConcrete
- uid: specification.Helpers.Entities.WriteOnlyEntityConcrete
  commentId: T:specification.Helpers.Entities.WriteOnlyEntityConcrete
  parent: specification.Helpers.Entities
  href: specification.Helpers.Entities.WriteOnlyEntityConcrete.html
  name: WriteOnlyEntityConcrete
  nameWithType: WriteOnlyEntityConcrete
  fullName: specification.Helpers.Entities.WriteOnlyEntityConcrete
- uid: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToEntity*
  commentId: Overload:specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToEntity
  href: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.html#specification_Helpers_RequestHandlers_WriteOnlyRequestHandlerConcrete_MapToEntity_specification_Helpers_Dtos_WriteOnlyDtoConcrete_
  name: MapToEntity
  nameWithType: WriteOnlyRequestHandlerConcrete.MapToEntity
  fullName: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToEntity
- uid: specification.Helpers.Dtos
  commentId: N:specification.Helpers.Dtos
  href: specification.html
  name: specification.Helpers.Dtos
  nameWithType: specification.Helpers.Dtos
  fullName: specification.Helpers.Dtos
  spec.csharp:
  - uid: specification
    name: specification
    href: specification.html
  - name: .
  - uid: specification.Helpers
    name: Helpers
    href: specification.Helpers.html
  - name: .
  - uid: specification.Helpers.Dtos
    name: Dtos
    href: specification.Helpers.Dtos.html
  spec.vb:
  - uid: specification
    name: specification
    href: specification.html
  - name: .
  - uid: specification.Helpers
    name: Helpers
    href: specification.Helpers.html
  - name: .
  - uid: specification.Helpers.Dtos
    name: Dtos
    href: specification.Helpers.Dtos.html
- uid: specification.Helpers.Entities
  commentId: N:specification.Helpers.Entities
  href: specification.html
  name: specification.Helpers.Entities
  nameWithType: specification.Helpers.Entities
  fullName: specification.Helpers.Entities
  spec.csharp:
  - uid: specification
    name: specification
    href: specification.html
  - name: .
  - uid: specification.Helpers
    name: Helpers
    href: specification.Helpers.html
  - name: .
  - uid: specification.Helpers.Entities
    name: Entities
    href: specification.Helpers.Entities.html
  spec.vb:
  - uid: specification
    name: specification
    href: specification.html
  - name: .
  - uid: specification.Helpers
    name: Helpers
    href: specification.Helpers.html
  - name: .
  - uid: specification.Helpers.Entities
    name: Entities
    href: specification.Helpers.Entities.html
- uid: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToDto*
  commentId: Overload:specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToDto
  href: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.html#specification_Helpers_RequestHandlers_WriteOnlyRequestHandlerConcrete_MapToDto_specification_Helpers_Entities_WriteOnlyEntityConcrete_
  name: MapToDto
  nameWithType: WriteOnlyRequestHandlerConcrete.MapToDto
  fullName: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToDto
- uid: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToCollectionOfEntity*
  commentId: Overload:specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToCollectionOfEntity
  href: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.html#specification_Helpers_RequestHandlers_WriteOnlyRequestHandlerConcrete_MapToCollectionOfEntity_System_Collections_Generic_ICollection_specification_Helpers_Dtos_WriteOnlyDtoConcrete__
  name: MapToCollectionOfEntity
  nameWithType: WriteOnlyRequestHandlerConcrete.MapToCollectionOfEntity
  fullName: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToCollectionOfEntity
- uid: System.Collections.Generic.ICollection{specification.Helpers.Dtos.WriteOnlyDtoConcrete}
  commentId: T:System.Collections.Generic.ICollection{specification.Helpers.Dtos.WriteOnlyDtoConcrete}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<WriteOnlyDtoConcrete>
  nameWithType: ICollection<WriteOnlyDtoConcrete>
  fullName: System.Collections.Generic.ICollection<specification.Helpers.Dtos.WriteOnlyDtoConcrete>
  nameWithType.vb: ICollection(Of WriteOnlyDtoConcrete)
  fullName.vb: System.Collections.Generic.ICollection(Of specification.Helpers.Dtos.WriteOnlyDtoConcrete)
  name.vb: ICollection(Of WriteOnlyDtoConcrete)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: specification.Helpers.Dtos.WriteOnlyDtoConcrete
    name: WriteOnlyDtoConcrete
    href: specification.Helpers.Dtos.WriteOnlyDtoConcrete.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: specification.Helpers.Dtos.WriteOnlyDtoConcrete
    name: WriteOnlyDtoConcrete
    href: specification.Helpers.Dtos.WriteOnlyDtoConcrete.html
  - name: )
- uid: System.Collections.Generic.ICollection{specification.Helpers.Entities.WriteOnlyEntityConcrete}
  commentId: T:System.Collections.Generic.ICollection{specification.Helpers.Entities.WriteOnlyEntityConcrete}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<WriteOnlyEntityConcrete>
  nameWithType: ICollection<WriteOnlyEntityConcrete>
  fullName: System.Collections.Generic.ICollection<specification.Helpers.Entities.WriteOnlyEntityConcrete>
  nameWithType.vb: ICollection(Of WriteOnlyEntityConcrete)
  fullName.vb: System.Collections.Generic.ICollection(Of specification.Helpers.Entities.WriteOnlyEntityConcrete)
  name.vb: ICollection(Of WriteOnlyEntityConcrete)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: specification.Helpers.Entities.WriteOnlyEntityConcrete
    name: WriteOnlyEntityConcrete
    href: specification.Helpers.Entities.WriteOnlyEntityConcrete.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: specification.Helpers.Entities.WriteOnlyEntityConcrete
    name: WriteOnlyEntityConcrete
    href: specification.Helpers.Entities.WriteOnlyEntityConcrete.html
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToCollectionOfDto*
  commentId: Overload:specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToCollectionOfDto
  href: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.html#specification_Helpers_RequestHandlers_WriteOnlyRequestHandlerConcrete_MapToCollectionOfDto_System_Collections_Generic_ICollection_specification_Helpers_Entities_WriteOnlyEntityConcrete__
  name: MapToCollectionOfDto
  nameWithType: WriteOnlyRequestHandlerConcrete.MapToCollectionOfDto
  fullName: specification.Helpers.RequestHandlers.WriteOnlyRequestHandlerConcrete.MapToCollectionOfDto
