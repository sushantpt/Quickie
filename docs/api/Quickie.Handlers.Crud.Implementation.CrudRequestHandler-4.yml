### YamlMime:ManagedReference
items:
- uid: Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4
  commentId: T:Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4
  id: CrudRequestHandler`4
  parent: Quickie.Handlers.Crud.Implementation
  children:
  - Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.#ctor(Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{`1,`3})
  - Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.CreateAsync(`0,System.Nullable{System.Threading.CancellationToken})
  - Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.DeleteAsync(`3,System.Nullable{System.Threading.CancellationToken})
  - Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.GetByIdAsync(`3,System.Nullable{System.Threading.CancellationToken})
  - Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.MapToDto(`1)
  - Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.MapToEntity(`0)
  - Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.UpdateAsync(`3,`0,System.Nullable{System.Threading.CancellationToken})
  langs:
  - csharp
  - vb
  name: CrudRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>
  nameWithType: CrudRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>
  fullName: Quickie.Handlers.Crud.Implementation.CrudRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>
  type: Class
  source:
    remote:
      path: src/Quickie/Handlers/Crud/Implementation/CrudRequestHandler.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: CrudRequestHandler
    path: ../src/Quickie/Handlers/Crud/Implementation/CrudRequestHandler.cs
    startLine: 10
  assemblies:
  - Quickie
  namespace: Quickie.Handlers.Crud.Implementation
  summary: Abstract class serving as CRUD request handler.
  example: []
  syntax:
    content: 'public abstract class CrudRequestHandler<TViewModel, TEntity, TDataHandler, TIdType> : ICrudRequestHandler<TViewModel, TIdType> where TViewModel : CrudDto where TEntity : CrudEntity where TDataHandler : ICrudDataHandler<TEntity, TIdType> where TIdType : IComparable'
    typeParameters:
    - id: TViewModel
      description: View model or dto
    - id: TEntity
      description: Entity
    - id: TDataHandler
      description: Data handler (repository layer)
    - id: TIdType
      description: 'Type of identifier. eg: int, string, ...'
    content.vb: Public MustInherit Class CrudRequestHandler(Of TViewModel As CrudDto, TEntity As CrudEntity, TDataHandler As ICrudDataHandler(Of TEntity, TIdType), TIdType As IComparable) Implements ICrudRequestHandler(Of TViewModel, TIdType)
  inheritance:
  - System.Object
  derivedClasses:
  - specification.Helpers.RequestHandlers.CrudRequestHandlerConcrete
  implements:
  - Quickie.Handlers.Crud.Definition.ICrudRequestHandler{{TViewModel},{TIdType}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: CrudRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType)
  fullName.vb: Quickie.Handlers.Crud.Implementation.CrudRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType)
  name.vb: CrudRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType)
- uid: Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.#ctor(Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{`1,`3})
  commentId: M:Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.#ctor(Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{`1,`3})
  id: '#ctor(Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{`1,`3})'
  parent: Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4
  langs:
  - csharp
  - vb
  name: CrudRequestHandler(ICrudDataHandler<TEntity, TIdType>)
  nameWithType: CrudRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.CrudRequestHandler(ICrudDataHandler<TEntity, TIdType>)
  fullName: Quickie.Handlers.Crud.Implementation.CrudRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.CrudRequestHandler(Quickie.DataHandlers.Crud.Definition.ICrudDataHandler<TEntity, TIdType>)
  type: Constructor
  source:
    remote:
      path: src/Quickie/Handlers/Crud/Implementation/CrudRequestHandler.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: .ctor
    path: ../src/Quickie/Handlers/Crud/Implementation/CrudRequestHandler.cs
    startLine: 10
  assemblies:
  - Quickie
  namespace: Quickie.Handlers.Crud.Implementation
  summary: Abstract class serving as CRUD request handler.
  example: []
  syntax:
    content: protected CrudRequestHandler(ICrudDataHandler<TEntity, TIdType> dataHandler)
    parameters:
    - id: dataHandler
      type: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{{TEntity},{TIdType}}
      description: Data handler (repository layer)
    content.vb: Protected Sub New(dataHandler As ICrudDataHandler(Of TEntity, TIdType))
  overload: Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.#ctor*
  nameWithType.vb: CrudRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).New(ICrudDataHandler(Of TEntity, TIdType))
  fullName.vb: Quickie.Handlers.Crud.Implementation.CrudRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).New(Quickie.DataHandlers.Crud.Definition.ICrudDataHandler(Of TEntity, TIdType))
  name.vb: New(ICrudDataHandler(Of TEntity, TIdType))
- uid: Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.CreateAsync(`0,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.CreateAsync(`0,System.Nullable{System.Threading.CancellationToken})
  id: CreateAsync(`0,System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4
  langs:
  - csharp
  - vb
  name: CreateAsync(TViewModel, CancellationToken?)
  nameWithType: CrudRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.CreateAsync(TViewModel, CancellationToken?)
  fullName: Quickie.Handlers.Crud.Implementation.CrudRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.CreateAsync(TViewModel, System.Threading.CancellationToken?)
  type: Method
  source:
    remote:
      path: src/Quickie/Handlers/Crud/Implementation/CrudRequestHandler.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: CreateAsync
    path: ../src/Quickie/Handlers/Crud/Implementation/CrudRequestHandler.cs
    startLine: 18
  assemblies:
  - Quickie
  namespace: Quickie.Handlers.Crud.Implementation
  summary: Data create request.
  example: []
  syntax:
    content: public Task<ResponseObj<TViewModel>> CreateAsync(TViewModel request, CancellationToken? cancellationToken = null)
    parameters:
    - id: request
      type: '{TViewModel}'
      description: Data requested to create.
    - id: cancellationToken
      type: System.Nullable{System.Threading.CancellationToken}
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj{{TViewModel}}}
      description: ''
    content.vb: Public Function CreateAsync(request As TViewModel, cancellationToken As CancellationToken? = Nothing) As Task(Of ResponseObj(Of TViewModel))
  overload: Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.CreateAsync*
  implements:
  - Quickie.Handlers.Crud.Definition.ICrudRequestHandler{{TViewModel},{TIdType}}.CreateAsync({TViewModel},System.Nullable{System.Threading.CancellationToken})
  nameWithType.vb: CrudRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).CreateAsync(TViewModel, CancellationToken?)
  fullName.vb: Quickie.Handlers.Crud.Implementation.CrudRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).CreateAsync(TViewModel, System.Threading.CancellationToken?)
- uid: Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.GetByIdAsync(`3,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.GetByIdAsync(`3,System.Nullable{System.Threading.CancellationToken})
  id: GetByIdAsync(`3,System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4
  langs:
  - csharp
  - vb
  name: GetByIdAsync(TIdType, CancellationToken?)
  nameWithType: CrudRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.GetByIdAsync(TIdType, CancellationToken?)
  fullName: Quickie.Handlers.Crud.Implementation.CrudRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.GetByIdAsync(TIdType, System.Threading.CancellationToken?)
  type: Method
  source:
    remote:
      path: src/Quickie/Handlers/Crud/Implementation/CrudRequestHandler.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: GetByIdAsync
    path: ../src/Quickie/Handlers/Crud/Implementation/CrudRequestHandler.cs
    startLine: 39
  assemblies:
  - Quickie
  namespace: Quickie.Handlers.Crud.Implementation
  summary: Get data by providing an identifier
  example: []
  syntax:
    content: public Task<ResponseObj<TViewModel>> GetByIdAsync(TIdType id, CancellationToken? cancellationToken = null)
    parameters:
    - id: id
      type: '{TIdType}'
      description: Identifier
    - id: cancellationToken
      type: System.Nullable{System.Threading.CancellationToken}
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj{{TViewModel}}}
      description: ''
    content.vb: Public Function GetByIdAsync(id As TIdType, cancellationToken As CancellationToken? = Nothing) As Task(Of ResponseObj(Of TViewModel))
  overload: Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.GetByIdAsync*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: ''
  implements:
  - Quickie.Handlers.Crud.Definition.ICrudRequestHandler{{TViewModel},{TIdType}}.GetByIdAsync({TIdType},System.Nullable{System.Threading.CancellationToken})
  nameWithType.vb: CrudRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).GetByIdAsync(TIdType, CancellationToken?)
  fullName.vb: Quickie.Handlers.Crud.Implementation.CrudRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).GetByIdAsync(TIdType, System.Threading.CancellationToken?)
- uid: Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.UpdateAsync(`3,`0,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.UpdateAsync(`3,`0,System.Nullable{System.Threading.CancellationToken})
  id: UpdateAsync(`3,`0,System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4
  langs:
  - csharp
  - vb
  name: UpdateAsync(TIdType, TViewModel, CancellationToken?)
  nameWithType: CrudRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.UpdateAsync(TIdType, TViewModel, CancellationToken?)
  fullName: Quickie.Handlers.Crud.Implementation.CrudRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.UpdateAsync(TIdType, TViewModel, System.Threading.CancellationToken?)
  type: Method
  source:
    remote:
      path: src/Quickie/Handlers/Crud/Implementation/CrudRequestHandler.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: UpdateAsync
    path: ../src/Quickie/Handlers/Crud/Implementation/CrudRequestHandler.cs
    startLine: 63
  assemblies:
  - Quickie
  namespace: Quickie.Handlers.Crud.Implementation
  summary: Update request.
  example: []
  syntax:
    content: public Task<ResponseObj<TViewModel>> UpdateAsync(TIdType id, TViewModel request, CancellationToken? cancellationToken = null)
    parameters:
    - id: id
      type: '{TIdType}'
      description: Requested data identifier.
    - id: request
      type: '{TViewModel}'
      description: Requested data
    - id: cancellationToken
      type: System.Nullable{System.Threading.CancellationToken}
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj{{TViewModel}}}
      description: ''
    content.vb: Public Function UpdateAsync(id As TIdType, request As TViewModel, cancellationToken As CancellationToken? = Nothing) As Task(Of ResponseObj(Of TViewModel))
  overload: Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.UpdateAsync*
  implements:
  - Quickie.Handlers.Crud.Definition.ICrudRequestHandler{{TViewModel},{TIdType}}.UpdateAsync({TIdType},{TViewModel},System.Nullable{System.Threading.CancellationToken})
  nameWithType.vb: CrudRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).UpdateAsync(TIdType, TViewModel, CancellationToken?)
  fullName.vb: Quickie.Handlers.Crud.Implementation.CrudRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).UpdateAsync(TIdType, TViewModel, System.Threading.CancellationToken?)
- uid: Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.DeleteAsync(`3,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.DeleteAsync(`3,System.Nullable{System.Threading.CancellationToken})
  id: DeleteAsync(`3,System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4
  langs:
  - csharp
  - vb
  name: DeleteAsync(TIdType, CancellationToken?)
  nameWithType: CrudRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.DeleteAsync(TIdType, CancellationToken?)
  fullName: Quickie.Handlers.Crud.Implementation.CrudRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.DeleteAsync(TIdType, System.Threading.CancellationToken?)
  type: Method
  source:
    remote:
      path: src/Quickie/Handlers/Crud/Implementation/CrudRequestHandler.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: DeleteAsync
    path: ../src/Quickie/Handlers/Crud/Implementation/CrudRequestHandler.cs
    startLine: 89
  assemblies:
  - Quickie
  namespace: Quickie.Handlers.Crud.Implementation
  summary: Delete request.
  example: []
  syntax:
    content: public Task<ResponseObj> DeleteAsync(TIdType id, CancellationToken? cancellationToken = null)
    parameters:
    - id: id
      type: '{TIdType}'
      description: Identifier of the data to remove.
    - id: cancellationToken
      type: System.Nullable{System.Threading.CancellationToken}
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj}
      description: ''
    content.vb: Public Function DeleteAsync(id As TIdType, cancellationToken As CancellationToken? = Nothing) As Task(Of ResponseObj)
  overload: Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.DeleteAsync*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: ''
  implements:
  - Quickie.Handlers.Crud.Definition.ICrudRequestHandler{{TViewModel},{TIdType}}.DeleteAsync({TIdType},System.Nullable{System.Threading.CancellationToken})
  nameWithType.vb: CrudRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).DeleteAsync(TIdType, CancellationToken?)
  fullName.vb: Quickie.Handlers.Crud.Implementation.CrudRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).DeleteAsync(TIdType, System.Threading.CancellationToken?)
- uid: Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.MapToEntity(`0)
  commentId: M:Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.MapToEntity(`0)
  id: MapToEntity(`0)
  parent: Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4
  langs:
  - csharp
  - vb
  name: MapToEntity(TViewModel)
  nameWithType: CrudRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToEntity(TViewModel)
  fullName: Quickie.Handlers.Crud.Implementation.CrudRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToEntity(TViewModel)
  type: Method
  source:
    remote:
      path: src/Quickie/Handlers/Crud/Implementation/CrudRequestHandler.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: MapToEntity
    path: ../src/Quickie/Handlers/Crud/Implementation/CrudRequestHandler.cs
    startLine: 105
  assemblies:
  - Quickie
  namespace: Quickie.Handlers.Crud.Implementation
  summary: Maps a <code class="typeparamref">TViewModel</code> to a <code class="typeparamref">TEntity</code> entity.
  example: []
  syntax:
    content: protected abstract TEntity MapToEntity(TViewModel request)
    parameters:
    - id: request
      type: '{TViewModel}'
      description: Dto
    return:
      type: '{TEntity}'
      description: Entity
    content.vb: Protected MustOverride Function MapToEntity(request As TViewModel) As TEntity
  overload: Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.MapToEntity*
  nameWithType.vb: CrudRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToEntity(TViewModel)
  fullName.vb: Quickie.Handlers.Crud.Implementation.CrudRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToEntity(TViewModel)
- uid: Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.MapToDto(`1)
  commentId: M:Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.MapToDto(`1)
  id: MapToDto(`1)
  parent: Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4
  langs:
  - csharp
  - vb
  name: MapToDto(TEntity)
  nameWithType: CrudRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToDto(TEntity)
  fullName: Quickie.Handlers.Crud.Implementation.CrudRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToDto(TEntity)
  type: Method
  source:
    remote:
      path: src/Quickie/Handlers/Crud/Implementation/CrudRequestHandler.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: MapToDto
    path: ../src/Quickie/Handlers/Crud/Implementation/CrudRequestHandler.cs
    startLine: 112
  assemblies:
  - Quickie
  namespace: Quickie.Handlers.Crud.Implementation
  summary: Maps a <code class="typeparamref">TEntity</code> to a <code class="typeparamref">TViewModel</code> dto.
  example: []
  syntax:
    content: protected abstract TViewModel MapToDto(TEntity request)
    parameters:
    - id: request
      type: '{TEntity}'
      description: Entity
    return:
      type: '{TViewModel}'
      description: Dto
    content.vb: Protected MustOverride Function MapToDto(request As TEntity) As TViewModel
  overload: Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.MapToDto*
  nameWithType.vb: CrudRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToDto(TEntity)
  fullName.vb: Quickie.Handlers.Crud.Implementation.CrudRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToDto(TEntity)
references:
- uid: Quickie.Handlers.Crud.Implementation
  commentId: N:Quickie.Handlers.Crud.Implementation
  href: Quickie.html
  name: Quickie.Handlers.Crud.Implementation
  nameWithType: Quickie.Handlers.Crud.Implementation
  fullName: Quickie.Handlers.Crud.Implementation
  spec.csharp:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.Handlers
    name: Handlers
    href: Quickie.Handlers.html
  - name: .
  - uid: Quickie.Handlers.Crud
    name: Crud
    href: Quickie.Handlers.Crud.html
  - name: .
  - uid: Quickie.Handlers.Crud.Implementation
    name: Implementation
    href: Quickie.Handlers.Crud.Implementation.html
  spec.vb:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.Handlers
    name: Handlers
    href: Quickie.Handlers.html
  - name: .
  - uid: Quickie.Handlers.Crud
    name: Crud
    href: Quickie.Handlers.Crud.html
  - name: .
  - uid: Quickie.Handlers.Crud.Implementation
    name: Implementation
    href: Quickie.Handlers.Crud.Implementation.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Quickie.Handlers.Crud.Definition.ICrudRequestHandler{{TViewModel},{TIdType}}
  commentId: T:Quickie.Handlers.Crud.Definition.ICrudRequestHandler{`0,`3}
  parent: Quickie.Handlers.Crud.Definition
  definition: Quickie.Handlers.Crud.Definition.ICrudRequestHandler`2
  href: Quickie.Handlers.Crud.Definition.ICrudRequestHandler-2.html
  name: ICrudRequestHandler<TViewModel, TIdType>
  nameWithType: ICrudRequestHandler<TViewModel, TIdType>
  fullName: Quickie.Handlers.Crud.Definition.ICrudRequestHandler<TViewModel, TIdType>
  nameWithType.vb: ICrudRequestHandler(Of TViewModel, TIdType)
  fullName.vb: Quickie.Handlers.Crud.Definition.ICrudRequestHandler(Of TViewModel, TIdType)
  name.vb: ICrudRequestHandler(Of TViewModel, TIdType)
  spec.csharp:
  - uid: Quickie.Handlers.Crud.Definition.ICrudRequestHandler`2
    name: ICrudRequestHandler
    href: Quickie.Handlers.Crud.Definition.ICrudRequestHandler-2.html
  - name: <
  - name: TViewModel
  - name: ','
  - name: " "
  - name: TIdType
  - name: '>'
  spec.vb:
  - uid: Quickie.Handlers.Crud.Definition.ICrudRequestHandler`2
    name: ICrudRequestHandler
    href: Quickie.Handlers.Crud.Definition.ICrudRequestHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TViewModel
  - name: ','
  - name: " "
  - name: TIdType
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Quickie.Handlers.Crud.Definition.ICrudRequestHandler`2
  commentId: T:Quickie.Handlers.Crud.Definition.ICrudRequestHandler`2
  href: Quickie.Handlers.Crud.Definition.ICrudRequestHandler-2.html
  name: ICrudRequestHandler<TViewModel, TIdType>
  nameWithType: ICrudRequestHandler<TViewModel, TIdType>
  fullName: Quickie.Handlers.Crud.Definition.ICrudRequestHandler<TViewModel, TIdType>
  nameWithType.vb: ICrudRequestHandler(Of TViewModel, TIdType)
  fullName.vb: Quickie.Handlers.Crud.Definition.ICrudRequestHandler(Of TViewModel, TIdType)
  name.vb: ICrudRequestHandler(Of TViewModel, TIdType)
  spec.csharp:
  - uid: Quickie.Handlers.Crud.Definition.ICrudRequestHandler`2
    name: ICrudRequestHandler
    href: Quickie.Handlers.Crud.Definition.ICrudRequestHandler-2.html
  - name: <
  - name: TViewModel
  - name: ','
  - name: " "
  - name: TIdType
  - name: '>'
  spec.vb:
  - uid: Quickie.Handlers.Crud.Definition.ICrudRequestHandler`2
    name: ICrudRequestHandler
    href: Quickie.Handlers.Crud.Definition.ICrudRequestHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TViewModel
  - name: ','
  - name: " "
  - name: TIdType
  - name: )
- uid: Quickie.Handlers.Crud.Definition
  commentId: N:Quickie.Handlers.Crud.Definition
  href: Quickie.html
  name: Quickie.Handlers.Crud.Definition
  nameWithType: Quickie.Handlers.Crud.Definition
  fullName: Quickie.Handlers.Crud.Definition
  spec.csharp:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.Handlers
    name: Handlers
    href: Quickie.Handlers.html
  - name: .
  - uid: Quickie.Handlers.Crud
    name: Crud
    href: Quickie.Handlers.Crud.html
  - name: .
  - uid: Quickie.Handlers.Crud.Definition
    name: Definition
    href: Quickie.Handlers.Crud.Definition.html
  spec.vb:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.Handlers
    name: Handlers
    href: Quickie.Handlers.html
  - name: .
  - uid: Quickie.Handlers.Crud
    name: Crud
    href: Quickie.Handlers.Crud.html
  - name: .
  - uid: Quickie.Handlers.Crud.Definition
    name: Definition
    href: Quickie.Handlers.Crud.Definition.html
- uid: Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.#ctor*
  commentId: Overload:Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.#ctor
  href: Quickie.Handlers.Crud.Implementation.CrudRequestHandler-4.html#Quickie_Handlers_Crud_Implementation_CrudRequestHandler_4__ctor_Quickie_DataHandlers_Crud_Definition_ICrudDataHandler__1__3__
  name: CrudRequestHandler
  nameWithType: CrudRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.CrudRequestHandler
  fullName: Quickie.Handlers.Crud.Implementation.CrudRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.CrudRequestHandler
  nameWithType.vb: CrudRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).New
  fullName.vb: Quickie.Handlers.Crud.Implementation.CrudRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).New
  name.vb: New
- uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{{TEntity},{TIdType}}
  commentId: T:Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{`0,`2}
  parent: Quickie.DataHandlers.Crud.Definition
  definition: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2
  href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html
  name: ICrudDataHandler<TEntity, TIdType>
  nameWithType: ICrudDataHandler<TEntity, TIdType>
  fullName: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler<TEntity, TIdType>
  nameWithType.vb: ICrudDataHandler(Of TEntity, TIdType)
  fullName.vb: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler(Of TEntity, TIdType)
  name.vb: ICrudDataHandler(Of TEntity, TIdType)
  spec.csharp:
  - uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2
    name: ICrudDataHandler
    href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TIdType
  - name: '>'
  spec.vb:
  - uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2
    name: ICrudDataHandler
    href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TIdType
  - name: )
- uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2
  commentId: T:Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2
  href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html
  name: ICrudDataHandler<TEntity, TIdType>
  nameWithType: ICrudDataHandler<TEntity, TIdType>
  fullName: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler<TEntity, TIdType>
  nameWithType.vb: ICrudDataHandler(Of TEntity, TIdType)
  fullName.vb: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler(Of TEntity, TIdType)
  name.vb: ICrudDataHandler(Of TEntity, TIdType)
  spec.csharp:
  - uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2
    name: ICrudDataHandler
    href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TIdType
  - name: '>'
  spec.vb:
  - uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2
    name: ICrudDataHandler
    href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TIdType
  - name: )
- uid: Quickie.DataHandlers.Crud.Definition
  commentId: N:Quickie.DataHandlers.Crud.Definition
  href: Quickie.html
  name: Quickie.DataHandlers.Crud.Definition
  nameWithType: Quickie.DataHandlers.Crud.Definition
  fullName: Quickie.DataHandlers.Crud.Definition
  spec.csharp:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.DataHandlers
    name: DataHandlers
    href: Quickie.DataHandlers.html
  - name: .
  - uid: Quickie.DataHandlers.Crud
    name: Crud
    href: Quickie.DataHandlers.Crud.html
  - name: .
  - uid: Quickie.DataHandlers.Crud.Definition
    name: Definition
    href: Quickie.DataHandlers.Crud.Definition.html
  spec.vb:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.DataHandlers
    name: DataHandlers
    href: Quickie.DataHandlers.html
  - name: .
  - uid: Quickie.DataHandlers.Crud
    name: Crud
    href: Quickie.DataHandlers.Crud.html
  - name: .
  - uid: Quickie.DataHandlers.Crud.Definition
    name: Definition
    href: Quickie.DataHandlers.Crud.Definition.html
- uid: Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.CreateAsync*
  commentId: Overload:Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.CreateAsync
  href: Quickie.Handlers.Crud.Implementation.CrudRequestHandler-4.html#Quickie_Handlers_Crud_Implementation_CrudRequestHandler_4_CreateAsync__0_System_Nullable_System_Threading_CancellationToken__
  name: CreateAsync
  nameWithType: CrudRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.CreateAsync
  fullName: Quickie.Handlers.Crud.Implementation.CrudRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.CreateAsync
  nameWithType.vb: CrudRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).CreateAsync
  fullName.vb: Quickie.Handlers.Crud.Implementation.CrudRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).CreateAsync
- uid: Quickie.Handlers.Crud.Definition.ICrudRequestHandler{{TViewModel},{TIdType}}.CreateAsync({TViewModel},System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Crud.Definition.ICrudRequestHandler{`0,`3}.CreateAsync(`0,System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.Handlers.Crud.Definition.ICrudRequestHandler{{TViewModel},{TIdType}}
  definition: Quickie.Handlers.Crud.Definition.ICrudRequestHandler`2.CreateAsync(`0,System.Nullable{System.Threading.CancellationToken})
  href: Quickie.Handlers.Crud.Definition.ICrudRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudRequestHandler_2_CreateAsync__0_System_Nullable_System_Threading_CancellationToken__
  name: CreateAsync(TViewModel, CancellationToken?)
  nameWithType: ICrudRequestHandler<TViewModel, TIdType>.CreateAsync(TViewModel, CancellationToken?)
  fullName: Quickie.Handlers.Crud.Definition.ICrudRequestHandler<TViewModel, TIdType>.CreateAsync(TViewModel, System.Threading.CancellationToken?)
  nameWithType.vb: ICrudRequestHandler(Of TViewModel, TIdType).CreateAsync(TViewModel, CancellationToken?)
  fullName.vb: Quickie.Handlers.Crud.Definition.ICrudRequestHandler(Of TViewModel, TIdType).CreateAsync(TViewModel, System.Threading.CancellationToken?)
  spec.csharp:
  - uid: Quickie.Handlers.Crud.Definition.ICrudRequestHandler{`0,`3}.CreateAsync(`0,System.Nullable{System.Threading.CancellationToken})
    name: CreateAsync
    href: Quickie.Handlers.Crud.Definition.ICrudRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudRequestHandler_2_CreateAsync__0_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TViewModel
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Crud.Definition.ICrudRequestHandler{`0,`3}.CreateAsync(`0,System.Nullable{System.Threading.CancellationToken})
    name: CreateAsync
    href: Quickie.Handlers.Crud.Definition.ICrudRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudRequestHandler_2_CreateAsync__0_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TViewModel
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: '{TViewModel}'
  commentId: '!:TViewModel'
  definition: TViewModel
  name: TViewModel
  nameWithType: TViewModel
  fullName: TViewModel
- uid: System.Nullable{System.Threading.CancellationToken}
  commentId: T:System.Nullable{System.Threading.CancellationToken}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken?
  nameWithType: CancellationToken?
  fullName: System.Threading.CancellationToken?
  spec.csharp:
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  spec.vb:
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
- uid: System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj{{TViewModel}}}
  commentId: T:System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj{`0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ResponseObj<TViewModel>>
  nameWithType: Task<ResponseObj<TViewModel>>
  fullName: System.Threading.Tasks.Task<Quickie.DataObj.ResponseObj<TViewModel>>
  nameWithType.vb: Task(Of ResponseObj(Of TViewModel))
  fullName.vb: System.Threading.Tasks.Task(Of Quickie.DataObj.ResponseObj(Of TViewModel))
  name.vb: Task(Of ResponseObj(Of TViewModel))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Quickie.DataObj.ResponseObj`1
    name: ResponseObj
    href: Quickie.DataObj.ResponseObj-1.html
  - name: <
  - name: TViewModel
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Quickie.DataObj.ResponseObj`1
    name: ResponseObj
    href: Quickie.DataObj.ResponseObj-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TViewModel
  - name: )
  - name: )
- uid: Quickie.Handlers.Crud.Definition.ICrudRequestHandler`2.CreateAsync(`0,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Crud.Definition.ICrudRequestHandler`2.CreateAsync(`0,System.Nullable{System.Threading.CancellationToken})
  isExternal: true
  href: Quickie.Handlers.Crud.Definition.ICrudRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudRequestHandler_2_CreateAsync__0_System_Nullable_System_Threading_CancellationToken__
  name: CreateAsync(TViewModel, CancellationToken?)
  nameWithType: ICrudRequestHandler<TViewModel, TIdType>.CreateAsync(TViewModel, CancellationToken?)
  fullName: Quickie.Handlers.Crud.Definition.ICrudRequestHandler<TViewModel, TIdType>.CreateAsync(TViewModel, System.Threading.CancellationToken?)
  nameWithType.vb: ICrudRequestHandler(Of TViewModel, TIdType).CreateAsync(TViewModel, CancellationToken?)
  fullName.vb: Quickie.Handlers.Crud.Definition.ICrudRequestHandler(Of TViewModel, TIdType).CreateAsync(TViewModel, System.Threading.CancellationToken?)
  spec.csharp:
  - uid: Quickie.Handlers.Crud.Definition.ICrudRequestHandler`2.CreateAsync(`0,System.Nullable{System.Threading.CancellationToken})
    name: CreateAsync
    href: Quickie.Handlers.Crud.Definition.ICrudRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudRequestHandler_2_CreateAsync__0_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TViewModel
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Crud.Definition.ICrudRequestHandler`2.CreateAsync(`0,System.Nullable{System.Threading.CancellationToken})
    name: CreateAsync
    href: Quickie.Handlers.Crud.Definition.ICrudRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudRequestHandler_2_CreateAsync__0_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TViewModel
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: TViewModel
  name: TViewModel
  nameWithType: TViewModel
  fullName: TViewModel
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.GetByIdAsync*
  commentId: Overload:Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.GetByIdAsync
  href: Quickie.Handlers.Crud.Implementation.CrudRequestHandler-4.html#Quickie_Handlers_Crud_Implementation_CrudRequestHandler_4_GetByIdAsync__3_System_Nullable_System_Threading_CancellationToken__
  name: GetByIdAsync
  nameWithType: CrudRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.GetByIdAsync
  fullName: Quickie.Handlers.Crud.Implementation.CrudRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.GetByIdAsync
  nameWithType.vb: CrudRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).GetByIdAsync
  fullName.vb: Quickie.Handlers.Crud.Implementation.CrudRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).GetByIdAsync
- uid: Quickie.Handlers.Crud.Definition.ICrudRequestHandler{{TViewModel},{TIdType}}.GetByIdAsync({TIdType},System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Crud.Definition.ICrudRequestHandler{`0,`3}.GetByIdAsync(`3,System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.Handlers.Crud.Definition.ICrudRequestHandler{{TViewModel},{TIdType}}
  definition: Quickie.Handlers.Crud.Definition.ICrudRequestHandler`2.GetByIdAsync(`1,System.Nullable{System.Threading.CancellationToken})
  href: Quickie.Handlers.Crud.Definition.ICrudRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudRequestHandler_2_GetByIdAsync__1_System_Nullable_System_Threading_CancellationToken__
  name: GetByIdAsync(TIdType, CancellationToken?)
  nameWithType: ICrudRequestHandler<TViewModel, TIdType>.GetByIdAsync(TIdType, CancellationToken?)
  fullName: Quickie.Handlers.Crud.Definition.ICrudRequestHandler<TViewModel, TIdType>.GetByIdAsync(TIdType, System.Threading.CancellationToken?)
  nameWithType.vb: ICrudRequestHandler(Of TViewModel, TIdType).GetByIdAsync(TIdType, CancellationToken?)
  fullName.vb: Quickie.Handlers.Crud.Definition.ICrudRequestHandler(Of TViewModel, TIdType).GetByIdAsync(TIdType, System.Threading.CancellationToken?)
  spec.csharp:
  - uid: Quickie.Handlers.Crud.Definition.ICrudRequestHandler{`0,`3}.GetByIdAsync(`3,System.Nullable{System.Threading.CancellationToken})
    name: GetByIdAsync
    href: Quickie.Handlers.Crud.Definition.ICrudRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudRequestHandler_2_GetByIdAsync__1_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TIdType
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Crud.Definition.ICrudRequestHandler{`0,`3}.GetByIdAsync(`3,System.Nullable{System.Threading.CancellationToken})
    name: GetByIdAsync
    href: Quickie.Handlers.Crud.Definition.ICrudRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudRequestHandler_2_GetByIdAsync__1_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TIdType
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: '{TIdType}'
  commentId: '!:TIdType'
  definition: TIdType
  name: TIdType
  nameWithType: TIdType
  fullName: TIdType
- uid: Quickie.Handlers.Crud.Definition.ICrudRequestHandler`2.GetByIdAsync(`1,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Crud.Definition.ICrudRequestHandler`2.GetByIdAsync(`1,System.Nullable{System.Threading.CancellationToken})
  isExternal: true
  href: Quickie.Handlers.Crud.Definition.ICrudRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudRequestHandler_2_GetByIdAsync__1_System_Nullable_System_Threading_CancellationToken__
  name: GetByIdAsync(TIdType, CancellationToken?)
  nameWithType: ICrudRequestHandler<TViewModel, TIdType>.GetByIdAsync(TIdType, CancellationToken?)
  fullName: Quickie.Handlers.Crud.Definition.ICrudRequestHandler<TViewModel, TIdType>.GetByIdAsync(TIdType, System.Threading.CancellationToken?)
  nameWithType.vb: ICrudRequestHandler(Of TViewModel, TIdType).GetByIdAsync(TIdType, CancellationToken?)
  fullName.vb: Quickie.Handlers.Crud.Definition.ICrudRequestHandler(Of TViewModel, TIdType).GetByIdAsync(TIdType, System.Threading.CancellationToken?)
  spec.csharp:
  - uid: Quickie.Handlers.Crud.Definition.ICrudRequestHandler`2.GetByIdAsync(`1,System.Nullable{System.Threading.CancellationToken})
    name: GetByIdAsync
    href: Quickie.Handlers.Crud.Definition.ICrudRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudRequestHandler_2_GetByIdAsync__1_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TIdType
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Crud.Definition.ICrudRequestHandler`2.GetByIdAsync(`1,System.Nullable{System.Threading.CancellationToken})
    name: GetByIdAsync
    href: Quickie.Handlers.Crud.Definition.ICrudRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudRequestHandler_2_GetByIdAsync__1_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TIdType
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: TIdType
  name: TIdType
  nameWithType: TIdType
  fullName: TIdType
- uid: Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.UpdateAsync*
  commentId: Overload:Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.UpdateAsync
  href: Quickie.Handlers.Crud.Implementation.CrudRequestHandler-4.html#Quickie_Handlers_Crud_Implementation_CrudRequestHandler_4_UpdateAsync__3__0_System_Nullable_System_Threading_CancellationToken__
  name: UpdateAsync
  nameWithType: CrudRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.UpdateAsync
  fullName: Quickie.Handlers.Crud.Implementation.CrudRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.UpdateAsync
  nameWithType.vb: CrudRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).UpdateAsync
  fullName.vb: Quickie.Handlers.Crud.Implementation.CrudRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).UpdateAsync
- uid: Quickie.Handlers.Crud.Definition.ICrudRequestHandler{{TViewModel},{TIdType}}.UpdateAsync({TIdType},{TViewModel},System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Crud.Definition.ICrudRequestHandler{`0,`3}.UpdateAsync(`3,`0,System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.Handlers.Crud.Definition.ICrudRequestHandler{{TViewModel},{TIdType}}
  definition: Quickie.Handlers.Crud.Definition.ICrudRequestHandler`2.UpdateAsync(`1,`0,System.Nullable{System.Threading.CancellationToken})
  href: Quickie.Handlers.Crud.Definition.ICrudRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudRequestHandler_2_UpdateAsync__1__0_System_Nullable_System_Threading_CancellationToken__
  name: UpdateAsync(TIdType, TViewModel, CancellationToken?)
  nameWithType: ICrudRequestHandler<TViewModel, TIdType>.UpdateAsync(TIdType, TViewModel, CancellationToken?)
  fullName: Quickie.Handlers.Crud.Definition.ICrudRequestHandler<TViewModel, TIdType>.UpdateAsync(TIdType, TViewModel, System.Threading.CancellationToken?)
  nameWithType.vb: ICrudRequestHandler(Of TViewModel, TIdType).UpdateAsync(TIdType, TViewModel, CancellationToken?)
  fullName.vb: Quickie.Handlers.Crud.Definition.ICrudRequestHandler(Of TViewModel, TIdType).UpdateAsync(TIdType, TViewModel, System.Threading.CancellationToken?)
  spec.csharp:
  - uid: Quickie.Handlers.Crud.Definition.ICrudRequestHandler{`0,`3}.UpdateAsync(`3,`0,System.Nullable{System.Threading.CancellationToken})
    name: UpdateAsync
    href: Quickie.Handlers.Crud.Definition.ICrudRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudRequestHandler_2_UpdateAsync__1__0_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TIdType
  - name: ','
  - name: " "
  - name: TViewModel
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Crud.Definition.ICrudRequestHandler{`0,`3}.UpdateAsync(`3,`0,System.Nullable{System.Threading.CancellationToken})
    name: UpdateAsync
    href: Quickie.Handlers.Crud.Definition.ICrudRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudRequestHandler_2_UpdateAsync__1__0_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TIdType
  - name: ','
  - name: " "
  - name: TViewModel
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: Quickie.Handlers.Crud.Definition.ICrudRequestHandler`2.UpdateAsync(`1,`0,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Crud.Definition.ICrudRequestHandler`2.UpdateAsync(`1,`0,System.Nullable{System.Threading.CancellationToken})
  isExternal: true
  href: Quickie.Handlers.Crud.Definition.ICrudRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudRequestHandler_2_UpdateAsync__1__0_System_Nullable_System_Threading_CancellationToken__
  name: UpdateAsync(TIdType, TViewModel, CancellationToken?)
  nameWithType: ICrudRequestHandler<TViewModel, TIdType>.UpdateAsync(TIdType, TViewModel, CancellationToken?)
  fullName: Quickie.Handlers.Crud.Definition.ICrudRequestHandler<TViewModel, TIdType>.UpdateAsync(TIdType, TViewModel, System.Threading.CancellationToken?)
  nameWithType.vb: ICrudRequestHandler(Of TViewModel, TIdType).UpdateAsync(TIdType, TViewModel, CancellationToken?)
  fullName.vb: Quickie.Handlers.Crud.Definition.ICrudRequestHandler(Of TViewModel, TIdType).UpdateAsync(TIdType, TViewModel, System.Threading.CancellationToken?)
  spec.csharp:
  - uid: Quickie.Handlers.Crud.Definition.ICrudRequestHandler`2.UpdateAsync(`1,`0,System.Nullable{System.Threading.CancellationToken})
    name: UpdateAsync
    href: Quickie.Handlers.Crud.Definition.ICrudRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudRequestHandler_2_UpdateAsync__1__0_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TIdType
  - name: ','
  - name: " "
  - name: TViewModel
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Crud.Definition.ICrudRequestHandler`2.UpdateAsync(`1,`0,System.Nullable{System.Threading.CancellationToken})
    name: UpdateAsync
    href: Quickie.Handlers.Crud.Definition.ICrudRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudRequestHandler_2_UpdateAsync__1__0_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TIdType
  - name: ','
  - name: " "
  - name: TViewModel
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.DeleteAsync*
  commentId: Overload:Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.DeleteAsync
  href: Quickie.Handlers.Crud.Implementation.CrudRequestHandler-4.html#Quickie_Handlers_Crud_Implementation_CrudRequestHandler_4_DeleteAsync__3_System_Nullable_System_Threading_CancellationToken__
  name: DeleteAsync
  nameWithType: CrudRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.DeleteAsync
  fullName: Quickie.Handlers.Crud.Implementation.CrudRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.DeleteAsync
  nameWithType.vb: CrudRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).DeleteAsync
  fullName.vb: Quickie.Handlers.Crud.Implementation.CrudRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).DeleteAsync
- uid: Quickie.Handlers.Crud.Definition.ICrudRequestHandler{{TViewModel},{TIdType}}.DeleteAsync({TIdType},System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Crud.Definition.ICrudRequestHandler{`0,`3}.DeleteAsync(`3,System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.Handlers.Crud.Definition.ICrudRequestHandler{{TViewModel},{TIdType}}
  definition: Quickie.Handlers.Crud.Definition.ICrudRequestHandler`2.DeleteAsync(`1,System.Nullable{System.Threading.CancellationToken})
  href: Quickie.Handlers.Crud.Definition.ICrudRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudRequestHandler_2_DeleteAsync__1_System_Nullable_System_Threading_CancellationToken__
  name: DeleteAsync(TIdType, CancellationToken?)
  nameWithType: ICrudRequestHandler<TViewModel, TIdType>.DeleteAsync(TIdType, CancellationToken?)
  fullName: Quickie.Handlers.Crud.Definition.ICrudRequestHandler<TViewModel, TIdType>.DeleteAsync(TIdType, System.Threading.CancellationToken?)
  nameWithType.vb: ICrudRequestHandler(Of TViewModel, TIdType).DeleteAsync(TIdType, CancellationToken?)
  fullName.vb: Quickie.Handlers.Crud.Definition.ICrudRequestHandler(Of TViewModel, TIdType).DeleteAsync(TIdType, System.Threading.CancellationToken?)
  spec.csharp:
  - uid: Quickie.Handlers.Crud.Definition.ICrudRequestHandler{`0,`3}.DeleteAsync(`3,System.Nullable{System.Threading.CancellationToken})
    name: DeleteAsync
    href: Quickie.Handlers.Crud.Definition.ICrudRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudRequestHandler_2_DeleteAsync__1_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TIdType
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Crud.Definition.ICrudRequestHandler{`0,`3}.DeleteAsync(`3,System.Nullable{System.Threading.CancellationToken})
    name: DeleteAsync
    href: Quickie.Handlers.Crud.Definition.ICrudRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudRequestHandler_2_DeleteAsync__1_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TIdType
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj}
  commentId: T:System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ResponseObj>
  nameWithType: Task<ResponseObj>
  fullName: System.Threading.Tasks.Task<Quickie.DataObj.ResponseObj>
  nameWithType.vb: Task(Of ResponseObj)
  fullName.vb: System.Threading.Tasks.Task(Of Quickie.DataObj.ResponseObj)
  name.vb: Task(Of ResponseObj)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Quickie.DataObj.ResponseObj
    name: ResponseObj
    href: Quickie.DataObj.ResponseObj.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Quickie.DataObj.ResponseObj
    name: ResponseObj
    href: Quickie.DataObj.ResponseObj.html
  - name: )
- uid: Quickie.Handlers.Crud.Definition.ICrudRequestHandler`2.DeleteAsync(`1,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Crud.Definition.ICrudRequestHandler`2.DeleteAsync(`1,System.Nullable{System.Threading.CancellationToken})
  isExternal: true
  href: Quickie.Handlers.Crud.Definition.ICrudRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudRequestHandler_2_DeleteAsync__1_System_Nullable_System_Threading_CancellationToken__
  name: DeleteAsync(TIdType, CancellationToken?)
  nameWithType: ICrudRequestHandler<TViewModel, TIdType>.DeleteAsync(TIdType, CancellationToken?)
  fullName: Quickie.Handlers.Crud.Definition.ICrudRequestHandler<TViewModel, TIdType>.DeleteAsync(TIdType, System.Threading.CancellationToken?)
  nameWithType.vb: ICrudRequestHandler(Of TViewModel, TIdType).DeleteAsync(TIdType, CancellationToken?)
  fullName.vb: Quickie.Handlers.Crud.Definition.ICrudRequestHandler(Of TViewModel, TIdType).DeleteAsync(TIdType, System.Threading.CancellationToken?)
  spec.csharp:
  - uid: Quickie.Handlers.Crud.Definition.ICrudRequestHandler`2.DeleteAsync(`1,System.Nullable{System.Threading.CancellationToken})
    name: DeleteAsync
    href: Quickie.Handlers.Crud.Definition.ICrudRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudRequestHandler_2_DeleteAsync__1_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TIdType
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Crud.Definition.ICrudRequestHandler`2.DeleteAsync(`1,System.Nullable{System.Threading.CancellationToken})
    name: DeleteAsync
    href: Quickie.Handlers.Crud.Definition.ICrudRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudRequestHandler_2_DeleteAsync__1_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TIdType
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.MapToEntity*
  commentId: Overload:Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.MapToEntity
  href: Quickie.Handlers.Crud.Implementation.CrudRequestHandler-4.html#Quickie_Handlers_Crud_Implementation_CrudRequestHandler_4_MapToEntity__0_
  name: MapToEntity
  nameWithType: CrudRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToEntity
  fullName: Quickie.Handlers.Crud.Implementation.CrudRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToEntity
  nameWithType.vb: CrudRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToEntity
  fullName.vb: Quickie.Handlers.Crud.Implementation.CrudRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToEntity
- uid: '{TEntity}'
  commentId: '!:TEntity'
  definition: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.MapToDto*
  commentId: Overload:Quickie.Handlers.Crud.Implementation.CrudRequestHandler`4.MapToDto
  href: Quickie.Handlers.Crud.Implementation.CrudRequestHandler-4.html#Quickie_Handlers_Crud_Implementation_CrudRequestHandler_4_MapToDto__1_
  name: MapToDto
  nameWithType: CrudRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToDto
  fullName: Quickie.Handlers.Crud.Implementation.CrudRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToDto
  nameWithType.vb: CrudRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToDto
  fullName.vb: Quickie.Handlers.Crud.Implementation.CrudRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToDto
