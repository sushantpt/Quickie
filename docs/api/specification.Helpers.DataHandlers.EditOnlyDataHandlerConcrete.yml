### YamlMime:ManagedReference
items:
- uid: specification.Helpers.DataHandlers.EditOnlyDataHandlerConcrete
  commentId: T:specification.Helpers.DataHandlers.EditOnlyDataHandlerConcrete
  id: EditOnlyDataHandlerConcrete
  parent: specification.Helpers.DataHandlers
  children:
  - specification.Helpers.DataHandlers.EditOnlyDataHandlerConcrete.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  langs:
  - csharp
  - vb
  name: EditOnlyDataHandlerConcrete
  nameWithType: EditOnlyDataHandlerConcrete
  fullName: specification.Helpers.DataHandlers.EditOnlyDataHandlerConcrete
  type: Class
  source:
    remote:
      path: tests/specification/Helpers/DataHandlers/EditOnlyDataHandlerConcrete.cs
      branch: f-minimalapi
      repo: https://github.com/sushantpt/Quickie.git
    id: EditOnlyDataHandlerConcrete
    path: ../tests/specification/Helpers/DataHandlers/EditOnlyDataHandlerConcrete.cs
    startLine: 6
  assemblies:
  - specification
  namespace: specification.Helpers.DataHandlers
  syntax:
    content: 'public class EditOnlyDataHandlerConcrete : EditOnlyDataHandler<EditOnlyEntityConcrete, int>, IEditOnlyDataHandler<EditOnlyEntityConcrete, int>'
    content.vb: Public Class EditOnlyDataHandlerConcrete Inherits EditOnlyDataHandler(Of EditOnlyEntityConcrete, Integer) Implements IEditOnlyDataHandler(Of EditOnlyEntityConcrete, Integer)
  inheritance:
  - System.Object
  - Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32}
  implements:
  - Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32}
  inheritedMembers:
  - Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32}.EditAsync(System.Int32,specification.Helpers.Entities.EditOnlyEntityConcrete,System.Nullable{System.Threading.CancellationToken})
  - Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32}.EditCollectionAsync(System.Collections.Generic.ICollection{specification.Helpers.Entities.EditOnlyEntityConcrete},System.Nullable{System.Threading.CancellationToken})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: specification.Helpers.DataHandlers.EditOnlyDataHandlerConcrete.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  commentId: M:specification.Helpers.DataHandlers.EditOnlyDataHandlerConcrete.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  id: '#ctor(Microsoft.EntityFrameworkCore.DbContext)'
  parent: specification.Helpers.DataHandlers.EditOnlyDataHandlerConcrete
  langs:
  - csharp
  - vb
  name: EditOnlyDataHandlerConcrete(DbContext)
  nameWithType: EditOnlyDataHandlerConcrete.EditOnlyDataHandlerConcrete(DbContext)
  fullName: specification.Helpers.DataHandlers.EditOnlyDataHandlerConcrete.EditOnlyDataHandlerConcrete(Microsoft.EntityFrameworkCore.DbContext)
  type: Constructor
  source:
    remote:
      path: tests/specification/Helpers/DataHandlers/EditOnlyDataHandlerConcrete.cs
      branch: f-minimalapi
      repo: https://github.com/sushantpt/Quickie.git
    id: .ctor
    path: ../tests/specification/Helpers/DataHandlers/EditOnlyDataHandlerConcrete.cs
    startLine: 6
  assemblies:
  - specification
  namespace: specification.Helpers.DataHandlers
  syntax:
    content: public EditOnlyDataHandlerConcrete(DbContext dbContext)
    parameters:
    - id: dbContext
      type: Microsoft.EntityFrameworkCore.DbContext
    content.vb: Public Sub New(dbContext As DbContext)
  overload: specification.Helpers.DataHandlers.EditOnlyDataHandlerConcrete.#ctor*
  nameWithType.vb: EditOnlyDataHandlerConcrete.New(DbContext)
  fullName.vb: specification.Helpers.DataHandlers.EditOnlyDataHandlerConcrete.New(Microsoft.EntityFrameworkCore.DbContext)
  name.vb: New(DbContext)
references:
- uid: specification.Helpers.DataHandlers
  commentId: N:specification.Helpers.DataHandlers
  href: specification.html
  name: specification.Helpers.DataHandlers
  nameWithType: specification.Helpers.DataHandlers
  fullName: specification.Helpers.DataHandlers
  spec.csharp:
  - uid: specification
    name: specification
    href: specification.html
  - name: .
  - uid: specification.Helpers
    name: Helpers
    href: specification.Helpers.html
  - name: .
  - uid: specification.Helpers.DataHandlers
    name: DataHandlers
    href: specification.Helpers.DataHandlers.html
  spec.vb:
  - uid: specification
    name: specification
    href: specification.html
  - name: .
  - uid: specification.Helpers
    name: Helpers
    href: specification.Helpers.html
  - name: .
  - uid: specification.Helpers.DataHandlers
    name: DataHandlers
    href: specification.Helpers.DataHandlers.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32}
  commentId: T:Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32}
  parent: Quickie.DataHandlers.Editonly.Implementation
  definition: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler`2
  href: specification.Helpers.Entities.EditOnlyEntityConcrete.html
  name: EditOnlyDataHandler<EditOnlyEntityConcrete, int>
  nameWithType: EditOnlyDataHandler<EditOnlyEntityConcrete, int>
  fullName: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler<specification.Helpers.Entities.EditOnlyEntityConcrete, int>
  nameWithType.vb: EditOnlyDataHandler(Of EditOnlyEntityConcrete, Integer)
  fullName.vb: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler(Of specification.Helpers.Entities.EditOnlyEntityConcrete, Integer)
  name.vb: EditOnlyDataHandler(Of EditOnlyEntityConcrete, Integer)
  spec.csharp:
  - uid: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler`2
    name: EditOnlyDataHandler
  - name: <
  - uid: specification.Helpers.Entities.EditOnlyEntityConcrete
    name: EditOnlyEntityConcrete
    href: specification.Helpers.Entities.EditOnlyEntityConcrete.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler`2
    name: EditOnlyDataHandler
  - name: (
  - name: Of
  - name: " "
  - uid: specification.Helpers.Entities.EditOnlyEntityConcrete
    name: EditOnlyEntityConcrete
    href: specification.Helpers.Entities.EditOnlyEntityConcrete.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32}
  commentId: T:Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32}
  parent: Quickie.DataHandlers.Editonly.Definition
  definition: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler`2
  href: specification.Helpers.Entities.EditOnlyEntityConcrete.html
  name: IEditOnlyDataHandler<EditOnlyEntityConcrete, int>
  nameWithType: IEditOnlyDataHandler<EditOnlyEntityConcrete, int>
  fullName: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler<specification.Helpers.Entities.EditOnlyEntityConcrete, int>
  nameWithType.vb: IEditOnlyDataHandler(Of EditOnlyEntityConcrete, Integer)
  fullName.vb: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler(Of specification.Helpers.Entities.EditOnlyEntityConcrete, Integer)
  name.vb: IEditOnlyDataHandler(Of EditOnlyEntityConcrete, Integer)
  spec.csharp:
  - uid: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler`2
    name: IEditOnlyDataHandler
  - name: <
  - uid: specification.Helpers.Entities.EditOnlyEntityConcrete
    name: EditOnlyEntityConcrete
    href: specification.Helpers.Entities.EditOnlyEntityConcrete.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler`2
    name: IEditOnlyDataHandler
  - name: (
  - name: Of
  - name: " "
  - uid: specification.Helpers.Entities.EditOnlyEntityConcrete
    name: EditOnlyEntityConcrete
    href: specification.Helpers.Entities.EditOnlyEntityConcrete.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32}.EditAsync(System.Int32,specification.Helpers.Entities.EditOnlyEntityConcrete,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32}.EditAsync(System.Int32,specification.Helpers.Entities.EditOnlyEntityConcrete,System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32}
  definition: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler`2.EditAsync(`1,`0,System.Nullable{System.Threading.CancellationToken})
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: EditAsync(int, EditOnlyEntityConcrete, CancellationToken?)
  nameWithType: EditOnlyDataHandler<EditOnlyEntityConcrete, int>.EditAsync(int, EditOnlyEntityConcrete, CancellationToken?)
  fullName: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler<specification.Helpers.Entities.EditOnlyEntityConcrete, int>.EditAsync(int, specification.Helpers.Entities.EditOnlyEntityConcrete, System.Threading.CancellationToken?)
  nameWithType.vb: EditOnlyDataHandler(Of EditOnlyEntityConcrete, Integer).EditAsync(Integer, EditOnlyEntityConcrete, CancellationToken?)
  fullName.vb: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler(Of specification.Helpers.Entities.EditOnlyEntityConcrete, Integer).EditAsync(Integer, specification.Helpers.Entities.EditOnlyEntityConcrete, System.Threading.CancellationToken?)
  name.vb: EditAsync(Integer, EditOnlyEntityConcrete, CancellationToken?)
  spec.csharp:
  - uid: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32}.EditAsync(System.Int32,specification.Helpers.Entities.EditOnlyEntityConcrete,System.Nullable{System.Threading.CancellationToken})
    name: EditAsync
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: specification.Helpers.Entities.EditOnlyEntityConcrete
    name: EditOnlyEntityConcrete
    href: specification.Helpers.Entities.EditOnlyEntityConcrete.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32}.EditAsync(System.Int32,specification.Helpers.Entities.EditOnlyEntityConcrete,System.Nullable{System.Threading.CancellationToken})
    name: EditAsync
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: specification.Helpers.Entities.EditOnlyEntityConcrete
    name: EditOnlyEntityConcrete
    href: specification.Helpers.Entities.EditOnlyEntityConcrete.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32}.EditCollectionAsync(System.Collections.Generic.ICollection{specification.Helpers.Entities.EditOnlyEntityConcrete},System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32}.EditCollectionAsync(System.Collections.Generic.ICollection{specification.Helpers.Entities.EditOnlyEntityConcrete},System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32}
  definition: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler`2.EditCollectionAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: EditCollectionAsync(ICollection<EditOnlyEntityConcrete>, CancellationToken?)
  nameWithType: EditOnlyDataHandler<EditOnlyEntityConcrete, int>.EditCollectionAsync(ICollection<EditOnlyEntityConcrete>, CancellationToken?)
  fullName: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler<specification.Helpers.Entities.EditOnlyEntityConcrete, int>.EditCollectionAsync(System.Collections.Generic.ICollection<specification.Helpers.Entities.EditOnlyEntityConcrete>, System.Threading.CancellationToken?)
  nameWithType.vb: EditOnlyDataHandler(Of EditOnlyEntityConcrete, Integer).EditCollectionAsync(ICollection(Of EditOnlyEntityConcrete), CancellationToken?)
  fullName.vb: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler(Of specification.Helpers.Entities.EditOnlyEntityConcrete, Integer).EditCollectionAsync(System.Collections.Generic.ICollection(Of specification.Helpers.Entities.EditOnlyEntityConcrete), System.Threading.CancellationToken?)
  name.vb: EditCollectionAsync(ICollection(Of EditOnlyEntityConcrete), CancellationToken?)
  spec.csharp:
  - uid: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32}.EditCollectionAsync(System.Collections.Generic.ICollection{specification.Helpers.Entities.EditOnlyEntityConcrete},System.Nullable{System.Threading.CancellationToken})
    name: EditCollectionAsync
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: specification.Helpers.Entities.EditOnlyEntityConcrete
    name: EditOnlyEntityConcrete
    href: specification.Helpers.Entities.EditOnlyEntityConcrete.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32}.EditCollectionAsync(System.Collections.Generic.ICollection{specification.Helpers.Entities.EditOnlyEntityConcrete},System.Nullable{System.Threading.CancellationToken})
    name: EditCollectionAsync
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: specification.Helpers.Entities.EditOnlyEntityConcrete
    name: EditOnlyEntityConcrete
    href: specification.Helpers.Entities.EditOnlyEntityConcrete.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler`2
  commentId: T:Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler`2
  href: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler-2.html
  name: EditOnlyDataHandler<TEntity, TIdType>
  nameWithType: EditOnlyDataHandler<TEntity, TIdType>
  fullName: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler<TEntity, TIdType>
  nameWithType.vb: EditOnlyDataHandler(Of TEntity, TIdType)
  fullName.vb: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler(Of TEntity, TIdType)
  name.vb: EditOnlyDataHandler(Of TEntity, TIdType)
  spec.csharp:
  - uid: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler`2
    name: EditOnlyDataHandler
    href: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler-2.html
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TIdType
  - name: '>'
  spec.vb:
  - uid: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler`2
    name: EditOnlyDataHandler
    href: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TIdType
  - name: )
- uid: Quickie.DataHandlers.Editonly.Implementation
  commentId: N:Quickie.DataHandlers.Editonly.Implementation
  href: Quickie.html
  name: Quickie.DataHandlers.Editonly.Implementation
  nameWithType: Quickie.DataHandlers.Editonly.Implementation
  fullName: Quickie.DataHandlers.Editonly.Implementation
  spec.csharp:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.DataHandlers
    name: DataHandlers
    href: Quickie.DataHandlers.html
  - name: .
  - uid: Quickie.DataHandlers.Editonly
    name: Editonly
    href: Quickie.DataHandlers.Editonly.html
  - name: .
  - uid: Quickie.DataHandlers.Editonly.Implementation
    name: Implementation
    href: Quickie.DataHandlers.Editonly.Implementation.html
  spec.vb:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.DataHandlers
    name: DataHandlers
    href: Quickie.DataHandlers.html
  - name: .
  - uid: Quickie.DataHandlers.Editonly
    name: Editonly
    href: Quickie.DataHandlers.Editonly.html
  - name: .
  - uid: Quickie.DataHandlers.Editonly.Implementation
    name: Implementation
    href: Quickie.DataHandlers.Editonly.Implementation.html
- uid: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler`2
  commentId: T:Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler`2
  href: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler-2.html
  name: IEditOnlyDataHandler<TEntity, TIdType>
  nameWithType: IEditOnlyDataHandler<TEntity, TIdType>
  fullName: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler<TEntity, TIdType>
  nameWithType.vb: IEditOnlyDataHandler(Of TEntity, TIdType)
  fullName.vb: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler(Of TEntity, TIdType)
  name.vb: IEditOnlyDataHandler(Of TEntity, TIdType)
  spec.csharp:
  - uid: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler`2
    name: IEditOnlyDataHandler
    href: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler-2.html
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TIdType
  - name: '>'
  spec.vb:
  - uid: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler`2
    name: IEditOnlyDataHandler
    href: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TIdType
  - name: )
- uid: Quickie.DataHandlers.Editonly.Definition
  commentId: N:Quickie.DataHandlers.Editonly.Definition
  href: Quickie.html
  name: Quickie.DataHandlers.Editonly.Definition
  nameWithType: Quickie.DataHandlers.Editonly.Definition
  fullName: Quickie.DataHandlers.Editonly.Definition
  spec.csharp:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.DataHandlers
    name: DataHandlers
    href: Quickie.DataHandlers.html
  - name: .
  - uid: Quickie.DataHandlers.Editonly
    name: Editonly
    href: Quickie.DataHandlers.Editonly.html
  - name: .
  - uid: Quickie.DataHandlers.Editonly.Definition
    name: Definition
    href: Quickie.DataHandlers.Editonly.Definition.html
  spec.vb:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.DataHandlers
    name: DataHandlers
    href: Quickie.DataHandlers.html
  - name: .
  - uid: Quickie.DataHandlers.Editonly
    name: Editonly
    href: Quickie.DataHandlers.Editonly.html
  - name: .
  - uid: Quickie.DataHandlers.Editonly.Definition
    name: Definition
    href: Quickie.DataHandlers.Editonly.Definition.html
- uid: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler`2.EditAsync(`1,`0,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler`2.EditAsync(`1,`0,System.Nullable{System.Threading.CancellationToken})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: EditAsync(TIdType, TEntity, CancellationToken?)
  nameWithType: EditOnlyDataHandler<TEntity, TIdType>.EditAsync(TIdType, TEntity, CancellationToken?)
  fullName: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler<TEntity, TIdType>.EditAsync(TIdType, TEntity, System.Threading.CancellationToken?)
  nameWithType.vb: EditOnlyDataHandler(Of TEntity, TIdType).EditAsync(TIdType, TEntity, CancellationToken?)
  fullName.vb: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler(Of TEntity, TIdType).EditAsync(TIdType, TEntity, System.Threading.CancellationToken?)
  spec.csharp:
  - uid: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler`2.EditAsync(`1,`0,System.Nullable{System.Threading.CancellationToken})
    name: EditAsync
  - name: (
  - name: TIdType
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler`2.EditAsync(`1,`0,System.Nullable{System.Threading.CancellationToken})
    name: EditAsync
  - name: (
  - name: TIdType
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler`2.EditCollectionAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler`2.EditCollectionAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: EditCollectionAsync(ICollection<TEntity>, CancellationToken?)
  nameWithType: EditOnlyDataHandler<TEntity, TIdType>.EditCollectionAsync(ICollection<TEntity>, CancellationToken?)
  fullName: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler<TEntity, TIdType>.EditCollectionAsync(System.Collections.Generic.ICollection<TEntity>, System.Threading.CancellationToken?)
  nameWithType.vb: EditOnlyDataHandler(Of TEntity, TIdType).EditCollectionAsync(ICollection(Of TEntity), CancellationToken?)
  fullName.vb: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler(Of TEntity, TIdType).EditCollectionAsync(System.Collections.Generic.ICollection(Of TEntity), System.Threading.CancellationToken?)
  name.vb: EditCollectionAsync(ICollection(Of TEntity), CancellationToken?)
  spec.csharp:
  - uid: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler`2.EditCollectionAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
    name: EditCollectionAsync
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.DataHandlers.Editonly.Implementation.EditOnlyDataHandler`2.EditCollectionAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
    name: EditCollectionAsync
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: specification.Helpers.DataHandlers.EditOnlyDataHandlerConcrete.#ctor*
  commentId: Overload:specification.Helpers.DataHandlers.EditOnlyDataHandlerConcrete.#ctor
  href: specification.Helpers.DataHandlers.EditOnlyDataHandlerConcrete.html#specification_Helpers_DataHandlers_EditOnlyDataHandlerConcrete__ctor_Microsoft_EntityFrameworkCore_DbContext_
  name: EditOnlyDataHandlerConcrete
  nameWithType: EditOnlyDataHandlerConcrete.EditOnlyDataHandlerConcrete
  fullName: specification.Helpers.DataHandlers.EditOnlyDataHandlerConcrete.EditOnlyDataHandlerConcrete
  nameWithType.vb: EditOnlyDataHandlerConcrete.New
  fullName.vb: specification.Helpers.DataHandlers.EditOnlyDataHandlerConcrete.New
  name.vb: New
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
