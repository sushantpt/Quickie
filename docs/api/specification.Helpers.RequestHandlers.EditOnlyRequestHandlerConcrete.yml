### YamlMime:ManagedReference
items:
- uid: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete
  commentId: T:specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete
  id: EditOnlyRequestHandlerConcrete
  parent: specification.Helpers.RequestHandlers
  children:
  - specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.#ctor(Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32})
  - specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToCollectionOfDto(System.Collections.Generic.ICollection{specification.Helpers.Entities.EditOnlyEntityConcrete})
  - specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToCollectionOfEntity(System.Collections.Generic.ICollection{specification.Helpers.Dtos.EditOnlyDtoConcrete})
  - specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToDto(specification.Helpers.Entities.EditOnlyEntityConcrete)
  - specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToEntity(specification.Helpers.Dtos.EditOnlyDtoConcrete)
  langs:
  - csharp
  - vb
  name: EditOnlyRequestHandlerConcrete
  nameWithType: EditOnlyRequestHandlerConcrete
  fullName: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete
  type: Class
  source:
    remote:
      path: tests/specification/Helpers/RequestHandlers/EditOnlyRequestHandlerConcrete.cs
      branch: f-minimalapi
      repo: https://github.com/sushantpt/Quickie.git
    id: EditOnlyRequestHandlerConcrete
    path: ../tests/specification/Helpers/RequestHandlers/EditOnlyRequestHandlerConcrete.cs
    startLine: 6
  assemblies:
  - specification
  namespace: specification.Helpers.RequestHandlers
  syntax:
    content: 'public class EditOnlyRequestHandlerConcrete : EditOnlyRequestHandler<EditOnlyDtoConcrete, EditOnlyEntityConcrete, IEditOnlyDataHandler<EditOnlyEntityConcrete, int>, int>, IEditOnlyRequestHandler<EditOnlyDtoConcrete, int>'
    content.vb: Public Class EditOnlyRequestHandlerConcrete Inherits EditOnlyRequestHandler(Of EditOnlyDtoConcrete, EditOnlyEntityConcrete, IEditOnlyDataHandler(Of EditOnlyEntityConcrete, Integer), Integer) Implements IEditOnlyRequestHandler(Of EditOnlyDtoConcrete, Integer)
  inheritance:
  - System.Object
  - Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}
  implements:
  - Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,System.Int32}
  inheritedMembers:
  - Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.EditAsync(System.Int32,specification.Helpers.Dtos.EditOnlyDtoConcrete,System.Nullable{System.Threading.CancellationToken})
  - Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.EditCollectionAsync(System.Collections.Generic.ICollection{specification.Helpers.Dtos.EditOnlyDtoConcrete},System.Nullable{System.Threading.CancellationToken})
  - Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.MapToEntity(specification.Helpers.Dtos.EditOnlyDtoConcrete)
  - Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.MapToDto(specification.Helpers.Entities.EditOnlyEntityConcrete)
  - Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.MapToCollectionOfEntity(System.Collections.Generic.ICollection{specification.Helpers.Dtos.EditOnlyDtoConcrete})
  - Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.MapToCollectionOfDto(System.Collections.Generic.ICollection{specification.Helpers.Entities.EditOnlyEntityConcrete})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.#ctor(Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32})
  commentId: M:specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.#ctor(Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32})
  id: '#ctor(Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32})'
  parent: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete
  langs:
  - csharp
  - vb
  name: EditOnlyRequestHandlerConcrete(IEditOnlyDataHandler<EditOnlyEntityConcrete, int>)
  nameWithType: EditOnlyRequestHandlerConcrete.EditOnlyRequestHandlerConcrete(IEditOnlyDataHandler<EditOnlyEntityConcrete, int>)
  fullName: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.EditOnlyRequestHandlerConcrete(Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler<specification.Helpers.Entities.EditOnlyEntityConcrete, int>)
  type: Constructor
  source:
    remote:
      path: tests/specification/Helpers/RequestHandlers/EditOnlyRequestHandlerConcrete.cs
      branch: f-minimalapi
      repo: https://github.com/sushantpt/Quickie.git
    id: .ctor
    path: ../tests/specification/Helpers/RequestHandlers/EditOnlyRequestHandlerConcrete.cs
    startLine: 6
  assemblies:
  - specification
  namespace: specification.Helpers.RequestHandlers
  syntax:
    content: public EditOnlyRequestHandlerConcrete(IEditOnlyDataHandler<EditOnlyEntityConcrete, int> dataHandler)
    parameters:
    - id: dataHandler
      type: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32}
    content.vb: Public Sub New(dataHandler As IEditOnlyDataHandler(Of EditOnlyEntityConcrete, Integer))
  overload: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.#ctor*
  nameWithType.vb: EditOnlyRequestHandlerConcrete.New(IEditOnlyDataHandler(Of EditOnlyEntityConcrete, Integer))
  fullName.vb: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.New(Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler(Of specification.Helpers.Entities.EditOnlyEntityConcrete, Integer))
  name.vb: New(IEditOnlyDataHandler(Of EditOnlyEntityConcrete, Integer))
- uid: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToEntity(specification.Helpers.Dtos.EditOnlyDtoConcrete)
  commentId: M:specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToEntity(specification.Helpers.Dtos.EditOnlyDtoConcrete)
  id: MapToEntity(specification.Helpers.Dtos.EditOnlyDtoConcrete)
  parent: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete
  langs:
  - csharp
  - vb
  name: MapToEntity(EditOnlyDtoConcrete)
  nameWithType: EditOnlyRequestHandlerConcrete.MapToEntity(EditOnlyDtoConcrete)
  fullName: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToEntity(specification.Helpers.Dtos.EditOnlyDtoConcrete)
  type: Method
  source:
    remote:
      path: tests/specification/Helpers/RequestHandlers/EditOnlyRequestHandlerConcrete.cs
      branch: f-minimalapi
      repo: https://github.com/sushantpt/Quickie.git
    id: MapToEntity
    path: ../tests/specification/Helpers/RequestHandlers/EditOnlyRequestHandlerConcrete.cs
    startLine: 10
  assemblies:
  - specification
  namespace: specification.Helpers.RequestHandlers
  summary: Maps a <xref href="specification.Helpers.Dtos.EditOnlyDtoConcrete" data-throw-if-not-resolved="false"></xref> to a <xref href="specification.Helpers.Entities.EditOnlyEntityConcrete" data-throw-if-not-resolved="false"></xref> entity.
  example: []
  syntax:
    content: protected override EditOnlyEntityConcrete MapToEntity(EditOnlyDtoConcrete requestModel)
    parameters:
    - id: requestModel
      type: specification.Helpers.Dtos.EditOnlyDtoConcrete
      description: The view model/dto to map to an entity
    return:
      type: specification.Helpers.Entities.EditOnlyEntityConcrete
      description: Entity.
    content.vb: Protected Overrides Function MapToEntity(requestModel As EditOnlyDtoConcrete) As EditOnlyEntityConcrete
  overridden: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.MapToEntity(specification.Helpers.Dtos.EditOnlyDtoConcrete)
  overload: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToEntity*
- uid: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToDto(specification.Helpers.Entities.EditOnlyEntityConcrete)
  commentId: M:specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToDto(specification.Helpers.Entities.EditOnlyEntityConcrete)
  id: MapToDto(specification.Helpers.Entities.EditOnlyEntityConcrete)
  parent: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete
  langs:
  - csharp
  - vb
  name: MapToDto(EditOnlyEntityConcrete)
  nameWithType: EditOnlyRequestHandlerConcrete.MapToDto(EditOnlyEntityConcrete)
  fullName: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToDto(specification.Helpers.Entities.EditOnlyEntityConcrete)
  type: Method
  source:
    remote:
      path: tests/specification/Helpers/RequestHandlers/EditOnlyRequestHandlerConcrete.cs
      branch: f-minimalapi
      repo: https://github.com/sushantpt/Quickie.git
    id: MapToDto
    path: ../tests/specification/Helpers/RequestHandlers/EditOnlyRequestHandlerConcrete.cs
    startLine: 13
  assemblies:
  - specification
  namespace: specification.Helpers.RequestHandlers
  summary: Maps a <xref href="specification.Helpers.Entities.EditOnlyEntityConcrete" data-throw-if-not-resolved="false"></xref> entity to a <xref href="specification.Helpers.Dtos.EditOnlyDtoConcrete" data-throw-if-not-resolved="false"></xref> view model/dto.
  example: []
  syntax:
    content: protected override EditOnlyDtoConcrete MapToDto(EditOnlyEntityConcrete entity)
    parameters:
    - id: entity
      type: specification.Helpers.Entities.EditOnlyEntityConcrete
      description: Entity.
    return:
      type: specification.Helpers.Dtos.EditOnlyDtoConcrete
      description: View model/dto.
    content.vb: Protected Overrides Function MapToDto(entity As EditOnlyEntityConcrete) As EditOnlyDtoConcrete
  overridden: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.MapToDto(specification.Helpers.Entities.EditOnlyEntityConcrete)
  overload: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToDto*
- uid: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToCollectionOfEntity(System.Collections.Generic.ICollection{specification.Helpers.Dtos.EditOnlyDtoConcrete})
  commentId: M:specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToCollectionOfEntity(System.Collections.Generic.ICollection{specification.Helpers.Dtos.EditOnlyDtoConcrete})
  id: MapToCollectionOfEntity(System.Collections.Generic.ICollection{specification.Helpers.Dtos.EditOnlyDtoConcrete})
  parent: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete
  langs:
  - csharp
  - vb
  name: MapToCollectionOfEntity(ICollection<EditOnlyDtoConcrete>)
  nameWithType: EditOnlyRequestHandlerConcrete.MapToCollectionOfEntity(ICollection<EditOnlyDtoConcrete>)
  fullName: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToCollectionOfEntity(System.Collections.Generic.ICollection<specification.Helpers.Dtos.EditOnlyDtoConcrete>)
  type: Method
  source:
    remote:
      path: tests/specification/Helpers/RequestHandlers/EditOnlyRequestHandlerConcrete.cs
      branch: f-minimalapi
      repo: https://github.com/sushantpt/Quickie.git
    id: MapToCollectionOfEntity
    path: ../tests/specification/Helpers/RequestHandlers/EditOnlyRequestHandlerConcrete.cs
    startLine: 15
  assemblies:
  - specification
  namespace: specification.Helpers.RequestHandlers
  summary: Maps a collection of <xref href="specification.Helpers.Dtos.EditOnlyDtoConcrete" data-throw-if-not-resolved="false"></xref> to a collection of <xref href="specification.Helpers.Entities.EditOnlyEntityConcrete" data-throw-if-not-resolved="false"></xref> entities.
  example: []
  syntax:
    content: protected override ICollection<EditOnlyEntityConcrete> MapToCollectionOfEntity(ICollection<EditOnlyDtoConcrete> requestModels)
    parameters:
    - id: requestModels
      type: System.Collections.Generic.ICollection{specification.Helpers.Dtos.EditOnlyDtoConcrete}
      description: Collection of view model/dto
    return:
      type: System.Collections.Generic.ICollection{specification.Helpers.Entities.EditOnlyEntityConcrete}
      description: Collection of entity.
    content.vb: Protected Overrides Function MapToCollectionOfEntity(requestModels As ICollection(Of EditOnlyDtoConcrete)) As ICollection(Of EditOnlyEntityConcrete)
  overridden: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.MapToCollectionOfEntity(System.Collections.Generic.ICollection{specification.Helpers.Dtos.EditOnlyDtoConcrete})
  overload: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToCollectionOfEntity*
  nameWithType.vb: EditOnlyRequestHandlerConcrete.MapToCollectionOfEntity(ICollection(Of EditOnlyDtoConcrete))
  fullName.vb: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToCollectionOfEntity(System.Collections.Generic.ICollection(Of specification.Helpers.Dtos.EditOnlyDtoConcrete))
  name.vb: MapToCollectionOfEntity(ICollection(Of EditOnlyDtoConcrete))
- uid: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToCollectionOfDto(System.Collections.Generic.ICollection{specification.Helpers.Entities.EditOnlyEntityConcrete})
  commentId: M:specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToCollectionOfDto(System.Collections.Generic.ICollection{specification.Helpers.Entities.EditOnlyEntityConcrete})
  id: MapToCollectionOfDto(System.Collections.Generic.ICollection{specification.Helpers.Entities.EditOnlyEntityConcrete})
  parent: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete
  langs:
  - csharp
  - vb
  name: MapToCollectionOfDto(ICollection<EditOnlyEntityConcrete>)
  nameWithType: EditOnlyRequestHandlerConcrete.MapToCollectionOfDto(ICollection<EditOnlyEntityConcrete>)
  fullName: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToCollectionOfDto(System.Collections.Generic.ICollection<specification.Helpers.Entities.EditOnlyEntityConcrete>)
  type: Method
  source:
    remote:
      path: tests/specification/Helpers/RequestHandlers/EditOnlyRequestHandlerConcrete.cs
      branch: f-minimalapi
      repo: https://github.com/sushantpt/Quickie.git
    id: MapToCollectionOfDto
    path: ../tests/specification/Helpers/RequestHandlers/EditOnlyRequestHandlerConcrete.cs
    startLine: 17
  assemblies:
  - specification
  namespace: specification.Helpers.RequestHandlers
  summary: Maps a collection of <xref href="specification.Helpers.Entities.EditOnlyEntityConcrete" data-throw-if-not-resolved="false"></xref> entities to a collection of <xref href="specification.Helpers.Dtos.EditOnlyDtoConcrete" data-throw-if-not-resolved="false"></xref> view models.
  example: []
  syntax:
    content: protected override ICollection<EditOnlyDtoConcrete> MapToCollectionOfDto(ICollection<EditOnlyEntityConcrete> entities)
    parameters:
    - id: entities
      type: System.Collections.Generic.ICollection{specification.Helpers.Entities.EditOnlyEntityConcrete}
      description: Collection of entity.
    return:
      type: System.Collections.Generic.ICollection{specification.Helpers.Dtos.EditOnlyDtoConcrete}
      description: Collection of view model/dto.
    content.vb: Protected Overrides Function MapToCollectionOfDto(entities As ICollection(Of EditOnlyEntityConcrete)) As ICollection(Of EditOnlyDtoConcrete)
  overridden: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.MapToCollectionOfDto(System.Collections.Generic.ICollection{specification.Helpers.Entities.EditOnlyEntityConcrete})
  overload: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToCollectionOfDto*
  nameWithType.vb: EditOnlyRequestHandlerConcrete.MapToCollectionOfDto(ICollection(Of EditOnlyEntityConcrete))
  fullName.vb: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToCollectionOfDto(System.Collections.Generic.ICollection(Of specification.Helpers.Entities.EditOnlyEntityConcrete))
  name.vb: MapToCollectionOfDto(ICollection(Of EditOnlyEntityConcrete))
references:
- uid: specification.Helpers.RequestHandlers
  commentId: N:specification.Helpers.RequestHandlers
  href: specification.html
  name: specification.Helpers.RequestHandlers
  nameWithType: specification.Helpers.RequestHandlers
  fullName: specification.Helpers.RequestHandlers
  spec.csharp:
  - uid: specification
    name: specification
    href: specification.html
  - name: .
  - uid: specification.Helpers
    name: Helpers
    href: specification.Helpers.html
  - name: .
  - uid: specification.Helpers.RequestHandlers
    name: RequestHandlers
    href: specification.Helpers.RequestHandlers.html
  spec.vb:
  - uid: specification
    name: specification
    href: specification.html
  - name: .
  - uid: specification.Helpers
    name: Helpers
    href: specification.Helpers.html
  - name: .
  - uid: specification.Helpers.RequestHandlers
    name: RequestHandlers
    href: specification.Helpers.RequestHandlers.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}
  commentId: T:Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}
  parent: Quickie.Handlers.Editonly.Implementation
  definition: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4
  href: specification.Helpers.Dtos.EditOnlyDtoConcrete.html
  name: EditOnlyRequestHandler<EditOnlyDtoConcrete, EditOnlyEntityConcrete, IEditOnlyDataHandler<EditOnlyEntityConcrete, int>, int>
  nameWithType: EditOnlyRequestHandler<EditOnlyDtoConcrete, EditOnlyEntityConcrete, IEditOnlyDataHandler<EditOnlyEntityConcrete, int>, int>
  fullName: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler<specification.Helpers.Dtos.EditOnlyDtoConcrete, specification.Helpers.Entities.EditOnlyEntityConcrete, Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler<specification.Helpers.Entities.EditOnlyEntityConcrete, int>, int>
  nameWithType.vb: EditOnlyRequestHandler(Of EditOnlyDtoConcrete, EditOnlyEntityConcrete, IEditOnlyDataHandler(Of EditOnlyEntityConcrete, Integer), Integer)
  fullName.vb: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler(Of specification.Helpers.Dtos.EditOnlyDtoConcrete, specification.Helpers.Entities.EditOnlyEntityConcrete, Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler(Of specification.Helpers.Entities.EditOnlyEntityConcrete, Integer), Integer)
  name.vb: EditOnlyRequestHandler(Of EditOnlyDtoConcrete, EditOnlyEntityConcrete, IEditOnlyDataHandler(Of EditOnlyEntityConcrete, Integer), Integer)
  spec.csharp:
  - uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4
    name: EditOnlyRequestHandler
  - name: <
  - uid: specification.Helpers.Dtos.EditOnlyDtoConcrete
    name: EditOnlyDtoConcrete
    href: specification.Helpers.Dtos.EditOnlyDtoConcrete.html
  - name: ','
  - name: " "
  - uid: specification.Helpers.Entities.EditOnlyEntityConcrete
    name: EditOnlyEntityConcrete
    href: specification.Helpers.Entities.EditOnlyEntityConcrete.html
  - name: ','
  - name: " "
  - uid: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler`2
    name: IEditOnlyDataHandler
  - name: <
  - uid: specification.Helpers.Entities.EditOnlyEntityConcrete
    name: EditOnlyEntityConcrete
    href: specification.Helpers.Entities.EditOnlyEntityConcrete.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4
    name: EditOnlyRequestHandler
  - name: (
  - name: Of
  - name: " "
  - uid: specification.Helpers.Dtos.EditOnlyDtoConcrete
    name: EditOnlyDtoConcrete
    href: specification.Helpers.Dtos.EditOnlyDtoConcrete.html
  - name: ','
  - name: " "
  - uid: specification.Helpers.Entities.EditOnlyEntityConcrete
    name: EditOnlyEntityConcrete
    href: specification.Helpers.Entities.EditOnlyEntityConcrete.html
  - name: ','
  - name: " "
  - uid: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler`2
    name: IEditOnlyDataHandler
  - name: (
  - name: Of
  - name: " "
  - uid: specification.Helpers.Entities.EditOnlyEntityConcrete
    name: EditOnlyEntityConcrete
    href: specification.Helpers.Entities.EditOnlyEntityConcrete.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,System.Int32}
  commentId: T:Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,System.Int32}
  parent: Quickie.Handlers.Editonly.Definition
  definition: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler`2
  href: specification.Helpers.Dtos.EditOnlyDtoConcrete.html
  name: IEditOnlyRequestHandler<EditOnlyDtoConcrete, int>
  nameWithType: IEditOnlyRequestHandler<EditOnlyDtoConcrete, int>
  fullName: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler<specification.Helpers.Dtos.EditOnlyDtoConcrete, int>
  nameWithType.vb: IEditOnlyRequestHandler(Of EditOnlyDtoConcrete, Integer)
  fullName.vb: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler(Of specification.Helpers.Dtos.EditOnlyDtoConcrete, Integer)
  name.vb: IEditOnlyRequestHandler(Of EditOnlyDtoConcrete, Integer)
  spec.csharp:
  - uid: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler`2
    name: IEditOnlyRequestHandler
  - name: <
  - uid: specification.Helpers.Dtos.EditOnlyDtoConcrete
    name: EditOnlyDtoConcrete
    href: specification.Helpers.Dtos.EditOnlyDtoConcrete.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler`2
    name: IEditOnlyRequestHandler
  - name: (
  - name: Of
  - name: " "
  - uid: specification.Helpers.Dtos.EditOnlyDtoConcrete
    name: EditOnlyDtoConcrete
    href: specification.Helpers.Dtos.EditOnlyDtoConcrete.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.EditAsync(System.Int32,specification.Helpers.Dtos.EditOnlyDtoConcrete,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.EditAsync(System.Int32,specification.Helpers.Dtos.EditOnlyDtoConcrete,System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}
  definition: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.EditAsync(`3,`0,System.Nullable{System.Threading.CancellationToken})
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: EditAsync(int, EditOnlyDtoConcrete, CancellationToken?)
  nameWithType: EditOnlyRequestHandler<EditOnlyDtoConcrete, EditOnlyEntityConcrete, IEditOnlyDataHandler<EditOnlyEntityConcrete, int>, int>.EditAsync(int, EditOnlyDtoConcrete, CancellationToken?)
  fullName: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler<specification.Helpers.Dtos.EditOnlyDtoConcrete, specification.Helpers.Entities.EditOnlyEntityConcrete, Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler<specification.Helpers.Entities.EditOnlyEntityConcrete, int>, int>.EditAsync(int, specification.Helpers.Dtos.EditOnlyDtoConcrete, System.Threading.CancellationToken?)
  nameWithType.vb: EditOnlyRequestHandler(Of EditOnlyDtoConcrete, EditOnlyEntityConcrete, IEditOnlyDataHandler(Of EditOnlyEntityConcrete, Integer), Integer).EditAsync(Integer, EditOnlyDtoConcrete, CancellationToken?)
  fullName.vb: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler(Of specification.Helpers.Dtos.EditOnlyDtoConcrete, specification.Helpers.Entities.EditOnlyEntityConcrete, Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler(Of specification.Helpers.Entities.EditOnlyEntityConcrete, Integer), Integer).EditAsync(Integer, specification.Helpers.Dtos.EditOnlyDtoConcrete, System.Threading.CancellationToken?)
  name.vb: EditAsync(Integer, EditOnlyDtoConcrete, CancellationToken?)
  spec.csharp:
  - uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.EditAsync(System.Int32,specification.Helpers.Dtos.EditOnlyDtoConcrete,System.Nullable{System.Threading.CancellationToken})
    name: EditAsync
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: specification.Helpers.Dtos.EditOnlyDtoConcrete
    name: EditOnlyDtoConcrete
    href: specification.Helpers.Dtos.EditOnlyDtoConcrete.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.EditAsync(System.Int32,specification.Helpers.Dtos.EditOnlyDtoConcrete,System.Nullable{System.Threading.CancellationToken})
    name: EditAsync
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: specification.Helpers.Dtos.EditOnlyDtoConcrete
    name: EditOnlyDtoConcrete
    href: specification.Helpers.Dtos.EditOnlyDtoConcrete.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.EditCollectionAsync(System.Collections.Generic.ICollection{specification.Helpers.Dtos.EditOnlyDtoConcrete},System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.EditCollectionAsync(System.Collections.Generic.ICollection{specification.Helpers.Dtos.EditOnlyDtoConcrete},System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}
  definition: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.EditCollectionAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: EditCollectionAsync(ICollection<EditOnlyDtoConcrete>, CancellationToken?)
  nameWithType: EditOnlyRequestHandler<EditOnlyDtoConcrete, EditOnlyEntityConcrete, IEditOnlyDataHandler<EditOnlyEntityConcrete, int>, int>.EditCollectionAsync(ICollection<EditOnlyDtoConcrete>, CancellationToken?)
  fullName: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler<specification.Helpers.Dtos.EditOnlyDtoConcrete, specification.Helpers.Entities.EditOnlyEntityConcrete, Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler<specification.Helpers.Entities.EditOnlyEntityConcrete, int>, int>.EditCollectionAsync(System.Collections.Generic.ICollection<specification.Helpers.Dtos.EditOnlyDtoConcrete>, System.Threading.CancellationToken?)
  nameWithType.vb: EditOnlyRequestHandler(Of EditOnlyDtoConcrete, EditOnlyEntityConcrete, IEditOnlyDataHandler(Of EditOnlyEntityConcrete, Integer), Integer).EditCollectionAsync(ICollection(Of EditOnlyDtoConcrete), CancellationToken?)
  fullName.vb: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler(Of specification.Helpers.Dtos.EditOnlyDtoConcrete, specification.Helpers.Entities.EditOnlyEntityConcrete, Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler(Of specification.Helpers.Entities.EditOnlyEntityConcrete, Integer), Integer).EditCollectionAsync(System.Collections.Generic.ICollection(Of specification.Helpers.Dtos.EditOnlyDtoConcrete), System.Threading.CancellationToken?)
  name.vb: EditCollectionAsync(ICollection(Of EditOnlyDtoConcrete), CancellationToken?)
  spec.csharp:
  - uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.EditCollectionAsync(System.Collections.Generic.ICollection{specification.Helpers.Dtos.EditOnlyDtoConcrete},System.Nullable{System.Threading.CancellationToken})
    name: EditCollectionAsync
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: specification.Helpers.Dtos.EditOnlyDtoConcrete
    name: EditOnlyDtoConcrete
    href: specification.Helpers.Dtos.EditOnlyDtoConcrete.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.EditCollectionAsync(System.Collections.Generic.ICollection{specification.Helpers.Dtos.EditOnlyDtoConcrete},System.Nullable{System.Threading.CancellationToken})
    name: EditCollectionAsync
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: specification.Helpers.Dtos.EditOnlyDtoConcrete
    name: EditOnlyDtoConcrete
    href: specification.Helpers.Dtos.EditOnlyDtoConcrete.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.MapToEntity(specification.Helpers.Dtos.EditOnlyDtoConcrete)
  commentId: M:Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.MapToEntity(specification.Helpers.Dtos.EditOnlyDtoConcrete)
  parent: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}
  definition: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToEntity(`0)
  href: specification.Helpers.Dtos.EditOnlyDtoConcrete.html
  name: MapToEntity(EditOnlyDtoConcrete)
  nameWithType: EditOnlyRequestHandler<EditOnlyDtoConcrete, EditOnlyEntityConcrete, IEditOnlyDataHandler<EditOnlyEntityConcrete, int>, int>.MapToEntity(EditOnlyDtoConcrete)
  fullName: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler<specification.Helpers.Dtos.EditOnlyDtoConcrete, specification.Helpers.Entities.EditOnlyEntityConcrete, Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler<specification.Helpers.Entities.EditOnlyEntityConcrete, int>, int>.MapToEntity(specification.Helpers.Dtos.EditOnlyDtoConcrete)
  nameWithType.vb: EditOnlyRequestHandler(Of EditOnlyDtoConcrete, EditOnlyEntityConcrete, IEditOnlyDataHandler(Of EditOnlyEntityConcrete, Integer), Integer).MapToEntity(EditOnlyDtoConcrete)
  fullName.vb: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler(Of specification.Helpers.Dtos.EditOnlyDtoConcrete, specification.Helpers.Entities.EditOnlyEntityConcrete, Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler(Of specification.Helpers.Entities.EditOnlyEntityConcrete, Integer), Integer).MapToEntity(specification.Helpers.Dtos.EditOnlyDtoConcrete)
  spec.csharp:
  - uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.MapToEntity(specification.Helpers.Dtos.EditOnlyDtoConcrete)
    name: MapToEntity
  - name: (
  - uid: specification.Helpers.Dtos.EditOnlyDtoConcrete
    name: EditOnlyDtoConcrete
    href: specification.Helpers.Dtos.EditOnlyDtoConcrete.html
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.MapToEntity(specification.Helpers.Dtos.EditOnlyDtoConcrete)
    name: MapToEntity
  - name: (
  - uid: specification.Helpers.Dtos.EditOnlyDtoConcrete
    name: EditOnlyDtoConcrete
    href: specification.Helpers.Dtos.EditOnlyDtoConcrete.html
  - name: )
- uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.MapToDto(specification.Helpers.Entities.EditOnlyEntityConcrete)
  commentId: M:Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.MapToDto(specification.Helpers.Entities.EditOnlyEntityConcrete)
  parent: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}
  definition: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToDto(`1)
  href: specification.Helpers.Entities.EditOnlyEntityConcrete.html
  name: MapToDto(EditOnlyEntityConcrete)
  nameWithType: EditOnlyRequestHandler<EditOnlyDtoConcrete, EditOnlyEntityConcrete, IEditOnlyDataHandler<EditOnlyEntityConcrete, int>, int>.MapToDto(EditOnlyEntityConcrete)
  fullName: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler<specification.Helpers.Dtos.EditOnlyDtoConcrete, specification.Helpers.Entities.EditOnlyEntityConcrete, Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler<specification.Helpers.Entities.EditOnlyEntityConcrete, int>, int>.MapToDto(specification.Helpers.Entities.EditOnlyEntityConcrete)
  nameWithType.vb: EditOnlyRequestHandler(Of EditOnlyDtoConcrete, EditOnlyEntityConcrete, IEditOnlyDataHandler(Of EditOnlyEntityConcrete, Integer), Integer).MapToDto(EditOnlyEntityConcrete)
  fullName.vb: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler(Of specification.Helpers.Dtos.EditOnlyDtoConcrete, specification.Helpers.Entities.EditOnlyEntityConcrete, Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler(Of specification.Helpers.Entities.EditOnlyEntityConcrete, Integer), Integer).MapToDto(specification.Helpers.Entities.EditOnlyEntityConcrete)
  spec.csharp:
  - uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.MapToDto(specification.Helpers.Entities.EditOnlyEntityConcrete)
    name: MapToDto
  - name: (
  - uid: specification.Helpers.Entities.EditOnlyEntityConcrete
    name: EditOnlyEntityConcrete
    href: specification.Helpers.Entities.EditOnlyEntityConcrete.html
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.MapToDto(specification.Helpers.Entities.EditOnlyEntityConcrete)
    name: MapToDto
  - name: (
  - uid: specification.Helpers.Entities.EditOnlyEntityConcrete
    name: EditOnlyEntityConcrete
    href: specification.Helpers.Entities.EditOnlyEntityConcrete.html
  - name: )
- uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.MapToCollectionOfEntity(System.Collections.Generic.ICollection{specification.Helpers.Dtos.EditOnlyDtoConcrete})
  commentId: M:Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.MapToCollectionOfEntity(System.Collections.Generic.ICollection{specification.Helpers.Dtos.EditOnlyDtoConcrete})
  parent: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}
  definition: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToCollectionOfEntity(System.Collections.Generic.ICollection{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: MapToCollectionOfEntity(ICollection<EditOnlyDtoConcrete>)
  nameWithType: EditOnlyRequestHandler<EditOnlyDtoConcrete, EditOnlyEntityConcrete, IEditOnlyDataHandler<EditOnlyEntityConcrete, int>, int>.MapToCollectionOfEntity(ICollection<EditOnlyDtoConcrete>)
  fullName: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler<specification.Helpers.Dtos.EditOnlyDtoConcrete, specification.Helpers.Entities.EditOnlyEntityConcrete, Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler<specification.Helpers.Entities.EditOnlyEntityConcrete, int>, int>.MapToCollectionOfEntity(System.Collections.Generic.ICollection<specification.Helpers.Dtos.EditOnlyDtoConcrete>)
  nameWithType.vb: EditOnlyRequestHandler(Of EditOnlyDtoConcrete, EditOnlyEntityConcrete, IEditOnlyDataHandler(Of EditOnlyEntityConcrete, Integer), Integer).MapToCollectionOfEntity(ICollection(Of EditOnlyDtoConcrete))
  fullName.vb: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler(Of specification.Helpers.Dtos.EditOnlyDtoConcrete, specification.Helpers.Entities.EditOnlyEntityConcrete, Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler(Of specification.Helpers.Entities.EditOnlyEntityConcrete, Integer), Integer).MapToCollectionOfEntity(System.Collections.Generic.ICollection(Of specification.Helpers.Dtos.EditOnlyDtoConcrete))
  name.vb: MapToCollectionOfEntity(ICollection(Of EditOnlyDtoConcrete))
  spec.csharp:
  - uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.MapToCollectionOfEntity(System.Collections.Generic.ICollection{specification.Helpers.Dtos.EditOnlyDtoConcrete})
    name: MapToCollectionOfEntity
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: specification.Helpers.Dtos.EditOnlyDtoConcrete
    name: EditOnlyDtoConcrete
    href: specification.Helpers.Dtos.EditOnlyDtoConcrete.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.MapToCollectionOfEntity(System.Collections.Generic.ICollection{specification.Helpers.Dtos.EditOnlyDtoConcrete})
    name: MapToCollectionOfEntity
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: specification.Helpers.Dtos.EditOnlyDtoConcrete
    name: EditOnlyDtoConcrete
    href: specification.Helpers.Dtos.EditOnlyDtoConcrete.html
  - name: )
  - name: )
- uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.MapToCollectionOfDto(System.Collections.Generic.ICollection{specification.Helpers.Entities.EditOnlyEntityConcrete})
  commentId: M:Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.MapToCollectionOfDto(System.Collections.Generic.ICollection{specification.Helpers.Entities.EditOnlyEntityConcrete})
  parent: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}
  definition: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToCollectionOfDto(System.Collections.Generic.ICollection{`1})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: MapToCollectionOfDto(ICollection<EditOnlyEntityConcrete>)
  nameWithType: EditOnlyRequestHandler<EditOnlyDtoConcrete, EditOnlyEntityConcrete, IEditOnlyDataHandler<EditOnlyEntityConcrete, int>, int>.MapToCollectionOfDto(ICollection<EditOnlyEntityConcrete>)
  fullName: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler<specification.Helpers.Dtos.EditOnlyDtoConcrete, specification.Helpers.Entities.EditOnlyEntityConcrete, Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler<specification.Helpers.Entities.EditOnlyEntityConcrete, int>, int>.MapToCollectionOfDto(System.Collections.Generic.ICollection<specification.Helpers.Entities.EditOnlyEntityConcrete>)
  nameWithType.vb: EditOnlyRequestHandler(Of EditOnlyDtoConcrete, EditOnlyEntityConcrete, IEditOnlyDataHandler(Of EditOnlyEntityConcrete, Integer), Integer).MapToCollectionOfDto(ICollection(Of EditOnlyEntityConcrete))
  fullName.vb: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler(Of specification.Helpers.Dtos.EditOnlyDtoConcrete, specification.Helpers.Entities.EditOnlyEntityConcrete, Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler(Of specification.Helpers.Entities.EditOnlyEntityConcrete, Integer), Integer).MapToCollectionOfDto(System.Collections.Generic.ICollection(Of specification.Helpers.Entities.EditOnlyEntityConcrete))
  name.vb: MapToCollectionOfDto(ICollection(Of EditOnlyEntityConcrete))
  spec.csharp:
  - uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.MapToCollectionOfDto(System.Collections.Generic.ICollection{specification.Helpers.Entities.EditOnlyEntityConcrete})
    name: MapToCollectionOfDto
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: specification.Helpers.Entities.EditOnlyEntityConcrete
    name: EditOnlyEntityConcrete
    href: specification.Helpers.Entities.EditOnlyEntityConcrete.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler{specification.Helpers.Dtos.EditOnlyDtoConcrete,specification.Helpers.Entities.EditOnlyEntityConcrete,Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32},System.Int32}.MapToCollectionOfDto(System.Collections.Generic.ICollection{specification.Helpers.Entities.EditOnlyEntityConcrete})
    name: MapToCollectionOfDto
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: specification.Helpers.Entities.EditOnlyEntityConcrete
    name: EditOnlyEntityConcrete
    href: specification.Helpers.Entities.EditOnlyEntityConcrete.html
  - name: )
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4
  commentId: T:Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4
  href: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler-4.html
  name: EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>
  nameWithType: EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>
  fullName: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>
  nameWithType.vb: EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType)
  fullName.vb: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType)
  name.vb: EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType)
  spec.csharp:
  - uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4
    name: EditOnlyRequestHandler
    href: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler-4.html
  - name: <
  - name: TViewModel
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TDataHandler
  - name: ','
  - name: " "
  - name: TIdType
  - name: '>'
  spec.vb:
  - uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4
    name: EditOnlyRequestHandler
    href: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler-4.html
  - name: (
  - name: Of
  - name: " "
  - name: TViewModel
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TDataHandler
  - name: ','
  - name: " "
  - name: TIdType
  - name: )
- uid: Quickie.Handlers.Editonly.Implementation
  commentId: N:Quickie.Handlers.Editonly.Implementation
  href: Quickie.html
  name: Quickie.Handlers.Editonly.Implementation
  nameWithType: Quickie.Handlers.Editonly.Implementation
  fullName: Quickie.Handlers.Editonly.Implementation
  spec.csharp:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.Handlers
    name: Handlers
    href: Quickie.Handlers.html
  - name: .
  - uid: Quickie.Handlers.Editonly
    name: Editonly
    href: Quickie.Handlers.Editonly.html
  - name: .
  - uid: Quickie.Handlers.Editonly.Implementation
    name: Implementation
    href: Quickie.Handlers.Editonly.Implementation.html
  spec.vb:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.Handlers
    name: Handlers
    href: Quickie.Handlers.html
  - name: .
  - uid: Quickie.Handlers.Editonly
    name: Editonly
    href: Quickie.Handlers.Editonly.html
  - name: .
  - uid: Quickie.Handlers.Editonly.Implementation
    name: Implementation
    href: Quickie.Handlers.Editonly.Implementation.html
- uid: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler`2
  commentId: T:Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler`2
  href: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler-2.html
  name: IEditOnlyRequestHandler<TViewModel, TIdType>
  nameWithType: IEditOnlyRequestHandler<TViewModel, TIdType>
  fullName: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler<TViewModel, TIdType>
  nameWithType.vb: IEditOnlyRequestHandler(Of TViewModel, TIdType)
  fullName.vb: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler(Of TViewModel, TIdType)
  name.vb: IEditOnlyRequestHandler(Of TViewModel, TIdType)
  spec.csharp:
  - uid: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler`2
    name: IEditOnlyRequestHandler
    href: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler-2.html
  - name: <
  - name: TViewModel
  - name: ','
  - name: " "
  - name: TIdType
  - name: '>'
  spec.vb:
  - uid: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler`2
    name: IEditOnlyRequestHandler
    href: Quickie.Handlers.Editonly.Definition.IEditOnlyRequestHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TViewModel
  - name: ','
  - name: " "
  - name: TIdType
  - name: )
- uid: Quickie.Handlers.Editonly.Definition
  commentId: N:Quickie.Handlers.Editonly.Definition
  href: Quickie.html
  name: Quickie.Handlers.Editonly.Definition
  nameWithType: Quickie.Handlers.Editonly.Definition
  fullName: Quickie.Handlers.Editonly.Definition
  spec.csharp:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.Handlers
    name: Handlers
    href: Quickie.Handlers.html
  - name: .
  - uid: Quickie.Handlers.Editonly
    name: Editonly
    href: Quickie.Handlers.Editonly.html
  - name: .
  - uid: Quickie.Handlers.Editonly.Definition
    name: Definition
    href: Quickie.Handlers.Editonly.Definition.html
  spec.vb:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.Handlers
    name: Handlers
    href: Quickie.Handlers.html
  - name: .
  - uid: Quickie.Handlers.Editonly
    name: Editonly
    href: Quickie.Handlers.Editonly.html
  - name: .
  - uid: Quickie.Handlers.Editonly.Definition
    name: Definition
    href: Quickie.Handlers.Editonly.Definition.html
- uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.EditAsync(`3,`0,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.EditAsync(`3,`0,System.Nullable{System.Threading.CancellationToken})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: EditAsync(TIdType, TViewModel, CancellationToken?)
  nameWithType: EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.EditAsync(TIdType, TViewModel, CancellationToken?)
  fullName: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.EditAsync(TIdType, TViewModel, System.Threading.CancellationToken?)
  nameWithType.vb: EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).EditAsync(TIdType, TViewModel, CancellationToken?)
  fullName.vb: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).EditAsync(TIdType, TViewModel, System.Threading.CancellationToken?)
  spec.csharp:
  - uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.EditAsync(`3,`0,System.Nullable{System.Threading.CancellationToken})
    name: EditAsync
  - name: (
  - name: TIdType
  - name: ','
  - name: " "
  - name: TViewModel
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.EditAsync(`3,`0,System.Nullable{System.Threading.CancellationToken})
    name: EditAsync
  - name: (
  - name: TIdType
  - name: ','
  - name: " "
  - name: TViewModel
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.EditCollectionAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.EditCollectionAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: EditCollectionAsync(ICollection<TViewModel>, CancellationToken?)
  nameWithType: EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.EditCollectionAsync(ICollection<TViewModel>, CancellationToken?)
  fullName: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.EditCollectionAsync(System.Collections.Generic.ICollection<TViewModel>, System.Threading.CancellationToken?)
  nameWithType.vb: EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).EditCollectionAsync(ICollection(Of TViewModel), CancellationToken?)
  fullName.vb: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).EditCollectionAsync(System.Collections.Generic.ICollection(Of TViewModel), System.Threading.CancellationToken?)
  name.vb: EditCollectionAsync(ICollection(Of TViewModel), CancellationToken?)
  spec.csharp:
  - uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.EditCollectionAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
    name: EditCollectionAsync
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TViewModel
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.EditCollectionAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
    name: EditCollectionAsync
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TViewModel
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToEntity(`0)
  commentId: M:Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToEntity(`0)
  name: MapToEntity(TViewModel)
  nameWithType: EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToEntity(TViewModel)
  fullName: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToEntity(TViewModel)
  nameWithType.vb: EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToEntity(TViewModel)
  fullName.vb: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToEntity(TViewModel)
  spec.csharp:
  - uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToEntity(`0)
    name: MapToEntity
  - name: (
  - name: TViewModel
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToEntity(`0)
    name: MapToEntity
  - name: (
  - name: TViewModel
  - name: )
- uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToDto(`1)
  commentId: M:Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToDto(`1)
  name: MapToDto(TEntity)
  nameWithType: EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToDto(TEntity)
  fullName: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToDto(TEntity)
  nameWithType.vb: EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToDto(TEntity)
  fullName.vb: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToDto(TEntity)
  spec.csharp:
  - uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToDto(`1)
    name: MapToDto
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToDto(`1)
    name: MapToDto
  - name: (
  - name: TEntity
  - name: )
- uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToCollectionOfEntity(System.Collections.Generic.ICollection{`0})
  commentId: M:Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToCollectionOfEntity(System.Collections.Generic.ICollection{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: MapToCollectionOfEntity(ICollection<TViewModel>)
  nameWithType: EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToCollectionOfEntity(ICollection<TViewModel>)
  fullName: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToCollectionOfEntity(System.Collections.Generic.ICollection<TViewModel>)
  nameWithType.vb: EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToCollectionOfEntity(ICollection(Of TViewModel))
  fullName.vb: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToCollectionOfEntity(System.Collections.Generic.ICollection(Of TViewModel))
  name.vb: MapToCollectionOfEntity(ICollection(Of TViewModel))
  spec.csharp:
  - uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToCollectionOfEntity(System.Collections.Generic.ICollection{`0})
    name: MapToCollectionOfEntity
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TViewModel
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToCollectionOfEntity(System.Collections.Generic.ICollection{`0})
    name: MapToCollectionOfEntity
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TViewModel
  - name: )
  - name: )
- uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToCollectionOfDto(System.Collections.Generic.ICollection{`1})
  commentId: M:Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToCollectionOfDto(System.Collections.Generic.ICollection{`1})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: MapToCollectionOfDto(ICollection<TEntity>)
  nameWithType: EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToCollectionOfDto(ICollection<TEntity>)
  fullName: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToCollectionOfDto(System.Collections.Generic.ICollection<TEntity>)
  nameWithType.vb: EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToCollectionOfDto(ICollection(Of TEntity))
  fullName.vb: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToCollectionOfDto(System.Collections.Generic.ICollection(Of TEntity))
  name.vb: MapToCollectionOfDto(ICollection(Of TEntity))
  spec.csharp:
  - uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToCollectionOfDto(System.Collections.Generic.ICollection{`1})
    name: MapToCollectionOfDto
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Editonly.Implementation.EditOnlyRequestHandler`4.MapToCollectionOfDto(System.Collections.Generic.ICollection{`1})
    name: MapToCollectionOfDto
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: )
- uid: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.#ctor*
  commentId: Overload:specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.#ctor
  href: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.html#specification_Helpers_RequestHandlers_EditOnlyRequestHandlerConcrete__ctor_Quickie_DataHandlers_Editonly_Definition_IEditOnlyDataHandler_specification_Helpers_Entities_EditOnlyEntityConcrete_System_Int32__
  name: EditOnlyRequestHandlerConcrete
  nameWithType: EditOnlyRequestHandlerConcrete.EditOnlyRequestHandlerConcrete
  fullName: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.EditOnlyRequestHandlerConcrete
  nameWithType.vb: EditOnlyRequestHandlerConcrete.New
  fullName.vb: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.New
  name.vb: New
- uid: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32}
  commentId: T:Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler{specification.Helpers.Entities.EditOnlyEntityConcrete,System.Int32}
  parent: Quickie.DataHandlers.Editonly.Definition
  definition: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler`2
  href: specification.Helpers.Entities.EditOnlyEntityConcrete.html
  name: IEditOnlyDataHandler<EditOnlyEntityConcrete, int>
  nameWithType: IEditOnlyDataHandler<EditOnlyEntityConcrete, int>
  fullName: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler<specification.Helpers.Entities.EditOnlyEntityConcrete, int>
  nameWithType.vb: IEditOnlyDataHandler(Of EditOnlyEntityConcrete, Integer)
  fullName.vb: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler(Of specification.Helpers.Entities.EditOnlyEntityConcrete, Integer)
  name.vb: IEditOnlyDataHandler(Of EditOnlyEntityConcrete, Integer)
  spec.csharp:
  - uid: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler`2
    name: IEditOnlyDataHandler
  - name: <
  - uid: specification.Helpers.Entities.EditOnlyEntityConcrete
    name: EditOnlyEntityConcrete
    href: specification.Helpers.Entities.EditOnlyEntityConcrete.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler`2
    name: IEditOnlyDataHandler
  - name: (
  - name: Of
  - name: " "
  - uid: specification.Helpers.Entities.EditOnlyEntityConcrete
    name: EditOnlyEntityConcrete
    href: specification.Helpers.Entities.EditOnlyEntityConcrete.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler`2
  commentId: T:Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler`2
  href: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler-2.html
  name: IEditOnlyDataHandler<TEntity, TIdType>
  nameWithType: IEditOnlyDataHandler<TEntity, TIdType>
  fullName: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler<TEntity, TIdType>
  nameWithType.vb: IEditOnlyDataHandler(Of TEntity, TIdType)
  fullName.vb: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler(Of TEntity, TIdType)
  name.vb: IEditOnlyDataHandler(Of TEntity, TIdType)
  spec.csharp:
  - uid: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler`2
    name: IEditOnlyDataHandler
    href: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler-2.html
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TIdType
  - name: '>'
  spec.vb:
  - uid: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler`2
    name: IEditOnlyDataHandler
    href: Quickie.DataHandlers.Editonly.Definition.IEditOnlyDataHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TIdType
  - name: )
- uid: Quickie.DataHandlers.Editonly.Definition
  commentId: N:Quickie.DataHandlers.Editonly.Definition
  href: Quickie.html
  name: Quickie.DataHandlers.Editonly.Definition
  nameWithType: Quickie.DataHandlers.Editonly.Definition
  fullName: Quickie.DataHandlers.Editonly.Definition
  spec.csharp:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.DataHandlers
    name: DataHandlers
    href: Quickie.DataHandlers.html
  - name: .
  - uid: Quickie.DataHandlers.Editonly
    name: Editonly
    href: Quickie.DataHandlers.Editonly.html
  - name: .
  - uid: Quickie.DataHandlers.Editonly.Definition
    name: Definition
    href: Quickie.DataHandlers.Editonly.Definition.html
  spec.vb:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.DataHandlers
    name: DataHandlers
    href: Quickie.DataHandlers.html
  - name: .
  - uid: Quickie.DataHandlers.Editonly
    name: Editonly
    href: Quickie.DataHandlers.Editonly.html
  - name: .
  - uid: Quickie.DataHandlers.Editonly.Definition
    name: Definition
    href: Quickie.DataHandlers.Editonly.Definition.html
- uid: specification.Helpers.Dtos.EditOnlyDtoConcrete
  commentId: T:specification.Helpers.Dtos.EditOnlyDtoConcrete
  parent: specification.Helpers.Dtos
  href: specification.Helpers.Dtos.EditOnlyDtoConcrete.html
  name: EditOnlyDtoConcrete
  nameWithType: EditOnlyDtoConcrete
  fullName: specification.Helpers.Dtos.EditOnlyDtoConcrete
- uid: specification.Helpers.Entities.EditOnlyEntityConcrete
  commentId: T:specification.Helpers.Entities.EditOnlyEntityConcrete
  parent: specification.Helpers.Entities
  href: specification.Helpers.Entities.EditOnlyEntityConcrete.html
  name: EditOnlyEntityConcrete
  nameWithType: EditOnlyEntityConcrete
  fullName: specification.Helpers.Entities.EditOnlyEntityConcrete
- uid: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToEntity*
  commentId: Overload:specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToEntity
  href: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.html#specification_Helpers_RequestHandlers_EditOnlyRequestHandlerConcrete_MapToEntity_specification_Helpers_Dtos_EditOnlyDtoConcrete_
  name: MapToEntity
  nameWithType: EditOnlyRequestHandlerConcrete.MapToEntity
  fullName: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToEntity
- uid: specification.Helpers.Dtos
  commentId: N:specification.Helpers.Dtos
  href: specification.html
  name: specification.Helpers.Dtos
  nameWithType: specification.Helpers.Dtos
  fullName: specification.Helpers.Dtos
  spec.csharp:
  - uid: specification
    name: specification
    href: specification.html
  - name: .
  - uid: specification.Helpers
    name: Helpers
    href: specification.Helpers.html
  - name: .
  - uid: specification.Helpers.Dtos
    name: Dtos
    href: specification.Helpers.Dtos.html
  spec.vb:
  - uid: specification
    name: specification
    href: specification.html
  - name: .
  - uid: specification.Helpers
    name: Helpers
    href: specification.Helpers.html
  - name: .
  - uid: specification.Helpers.Dtos
    name: Dtos
    href: specification.Helpers.Dtos.html
- uid: specification.Helpers.Entities
  commentId: N:specification.Helpers.Entities
  href: specification.html
  name: specification.Helpers.Entities
  nameWithType: specification.Helpers.Entities
  fullName: specification.Helpers.Entities
  spec.csharp:
  - uid: specification
    name: specification
    href: specification.html
  - name: .
  - uid: specification.Helpers
    name: Helpers
    href: specification.Helpers.html
  - name: .
  - uid: specification.Helpers.Entities
    name: Entities
    href: specification.Helpers.Entities.html
  spec.vb:
  - uid: specification
    name: specification
    href: specification.html
  - name: .
  - uid: specification.Helpers
    name: Helpers
    href: specification.Helpers.html
  - name: .
  - uid: specification.Helpers.Entities
    name: Entities
    href: specification.Helpers.Entities.html
- uid: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToDto*
  commentId: Overload:specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToDto
  href: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.html#specification_Helpers_RequestHandlers_EditOnlyRequestHandlerConcrete_MapToDto_specification_Helpers_Entities_EditOnlyEntityConcrete_
  name: MapToDto
  nameWithType: EditOnlyRequestHandlerConcrete.MapToDto
  fullName: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToDto
- uid: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToCollectionOfEntity*
  commentId: Overload:specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToCollectionOfEntity
  href: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.html#specification_Helpers_RequestHandlers_EditOnlyRequestHandlerConcrete_MapToCollectionOfEntity_System_Collections_Generic_ICollection_specification_Helpers_Dtos_EditOnlyDtoConcrete__
  name: MapToCollectionOfEntity
  nameWithType: EditOnlyRequestHandlerConcrete.MapToCollectionOfEntity
  fullName: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToCollectionOfEntity
- uid: System.Collections.Generic.ICollection{specification.Helpers.Dtos.EditOnlyDtoConcrete}
  commentId: T:System.Collections.Generic.ICollection{specification.Helpers.Dtos.EditOnlyDtoConcrete}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<EditOnlyDtoConcrete>
  nameWithType: ICollection<EditOnlyDtoConcrete>
  fullName: System.Collections.Generic.ICollection<specification.Helpers.Dtos.EditOnlyDtoConcrete>
  nameWithType.vb: ICollection(Of EditOnlyDtoConcrete)
  fullName.vb: System.Collections.Generic.ICollection(Of specification.Helpers.Dtos.EditOnlyDtoConcrete)
  name.vb: ICollection(Of EditOnlyDtoConcrete)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: specification.Helpers.Dtos.EditOnlyDtoConcrete
    name: EditOnlyDtoConcrete
    href: specification.Helpers.Dtos.EditOnlyDtoConcrete.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: specification.Helpers.Dtos.EditOnlyDtoConcrete
    name: EditOnlyDtoConcrete
    href: specification.Helpers.Dtos.EditOnlyDtoConcrete.html
  - name: )
- uid: System.Collections.Generic.ICollection{specification.Helpers.Entities.EditOnlyEntityConcrete}
  commentId: T:System.Collections.Generic.ICollection{specification.Helpers.Entities.EditOnlyEntityConcrete}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<EditOnlyEntityConcrete>
  nameWithType: ICollection<EditOnlyEntityConcrete>
  fullName: System.Collections.Generic.ICollection<specification.Helpers.Entities.EditOnlyEntityConcrete>
  nameWithType.vb: ICollection(Of EditOnlyEntityConcrete)
  fullName.vb: System.Collections.Generic.ICollection(Of specification.Helpers.Entities.EditOnlyEntityConcrete)
  name.vb: ICollection(Of EditOnlyEntityConcrete)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: specification.Helpers.Entities.EditOnlyEntityConcrete
    name: EditOnlyEntityConcrete
    href: specification.Helpers.Entities.EditOnlyEntityConcrete.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: specification.Helpers.Entities.EditOnlyEntityConcrete
    name: EditOnlyEntityConcrete
    href: specification.Helpers.Entities.EditOnlyEntityConcrete.html
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToCollectionOfDto*
  commentId: Overload:specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToCollectionOfDto
  href: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.html#specification_Helpers_RequestHandlers_EditOnlyRequestHandlerConcrete_MapToCollectionOfDto_System_Collections_Generic_ICollection_specification_Helpers_Entities_EditOnlyEntityConcrete__
  name: MapToCollectionOfDto
  nameWithType: EditOnlyRequestHandlerConcrete.MapToCollectionOfDto
  fullName: specification.Helpers.RequestHandlers.EditOnlyRequestHandlerConcrete.MapToCollectionOfDto
