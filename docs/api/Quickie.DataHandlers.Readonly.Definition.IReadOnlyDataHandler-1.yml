### YamlMime:ManagedReference
items:
- uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyDataHandler`1
  commentId: T:Quickie.DataHandlers.Readonly.Definition.IReadOnlyDataHandler`1
  id: IReadOnlyDataHandler`1
  parent: Quickie.DataHandlers.Readonly.Definition
  children:
  - Quickie.DataHandlers.Readonly.Definition.IReadOnlyDataHandler`1.GetByIdAsync(System.Object,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IReadOnlyDataHandler<TEntity>
  nameWithType: IReadOnlyDataHandler<TEntity>
  fullName: Quickie.DataHandlers.Readonly.Definition.IReadOnlyDataHandler<TEntity>
  type: Interface
  source:
    id: IReadOnlyDataHandler
    path: C:\Users\stpt4\OneDrive\Desktop\libs\Quickie\src\Quickie\DataHandlers\Readonly\Definition\IReadOnlyDataHandler.cs
    startLine: 6
  assemblies:
  - Quickie
  namespace: Quickie.DataHandlers.Readonly.Definition
  summary: Read-only data handler (Repository).
  example: []
  syntax:
    content: 'public interface IReadOnlyDataHandler<TEntity> where TEntity : ReadOnlyEntity'
    typeParameters:
    - id: TEntity
      description: Entity
    content.vb: Public Interface IReadOnlyDataHandler(Of TEntity As ReadOnlyEntity)
  nameWithType.vb: IReadOnlyDataHandler(Of TEntity)
  fullName.vb: Quickie.DataHandlers.Readonly.Definition.IReadOnlyDataHandler(Of TEntity)
  name.vb: IReadOnlyDataHandler(Of TEntity)
- uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyDataHandler`1.GetByIdAsync(System.Object,System.Threading.CancellationToken)
  commentId: M:Quickie.DataHandlers.Readonly.Definition.IReadOnlyDataHandler`1.GetByIdAsync(System.Object,System.Threading.CancellationToken)
  id: GetByIdAsync(System.Object,System.Threading.CancellationToken)
  parent: Quickie.DataHandlers.Readonly.Definition.IReadOnlyDataHandler`1
  langs:
  - csharp
  - vb
  name: GetByIdAsync(object, CancellationToken)
  nameWithType: IReadOnlyDataHandler<TEntity>.GetByIdAsync(object, CancellationToken)
  fullName: Quickie.DataHandlers.Readonly.Definition.IReadOnlyDataHandler<TEntity>.GetByIdAsync(object, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetByIdAsync
    path: C:\Users\stpt4\OneDrive\Desktop\libs\Quickie\src\Quickie\DataHandlers\Readonly\Definition\IReadOnlyDataHandler.cs
    startLine: 14
  assemblies:
  - Quickie
  namespace: Quickie.DataHandlers.Readonly.Definition
  summary: Get data by id. (ID must be primary key or composite key.)
  example: []
  syntax:
    content: Task<TEntity?> GetByIdAsync(object id, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.Object
      description: Unique identifier.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token.
    return:
      type: System.Threading.Tasks.Task{{TEntity}}
      description: Entity object.
    content.vb: Function GetByIdAsync(id As Object, cancellationToken As CancellationToken = Nothing) As Task(Of TEntity)
  overload: Quickie.DataHandlers.Readonly.Definition.IReadOnlyDataHandler`1.GetByIdAsync*
  nameWithType.vb: IReadOnlyDataHandler(Of TEntity).GetByIdAsync(Object, CancellationToken)
  fullName.vb: Quickie.DataHandlers.Readonly.Definition.IReadOnlyDataHandler(Of TEntity).GetByIdAsync(Object, System.Threading.CancellationToken)
  name.vb: GetByIdAsync(Object, CancellationToken)
references:
- uid: Quickie.DataHandlers.Readonly.Definition
  commentId: N:Quickie.DataHandlers.Readonly.Definition
  href: Quickie.html
  name: Quickie.DataHandlers.Readonly.Definition
  nameWithType: Quickie.DataHandlers.Readonly.Definition
  fullName: Quickie.DataHandlers.Readonly.Definition
  spec.csharp:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.DataHandlers
    name: DataHandlers
    href: Quickie.DataHandlers.html
  - name: .
  - uid: Quickie.DataHandlers.Readonly
    name: Readonly
    href: Quickie.DataHandlers.Readonly.html
  - name: .
  - uid: Quickie.DataHandlers.Readonly.Definition
    name: Definition
    href: Quickie.DataHandlers.Readonly.Definition.html
  spec.vb:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.DataHandlers
    name: DataHandlers
    href: Quickie.DataHandlers.html
  - name: .
  - uid: Quickie.DataHandlers.Readonly
    name: Readonly
    href: Quickie.DataHandlers.Readonly.html
  - name: .
  - uid: Quickie.DataHandlers.Readonly.Definition
    name: Definition
    href: Quickie.DataHandlers.Readonly.Definition.html
- uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyDataHandler`1.GetByIdAsync*
  commentId: Overload:Quickie.DataHandlers.Readonly.Definition.IReadOnlyDataHandler`1.GetByIdAsync
  href: Quickie.DataHandlers.Readonly.Definition.IReadOnlyDataHandler-1.html#Quickie_DataHandlers_Readonly_Definition_IReadOnlyDataHandler_1_GetByIdAsync_System_Object_System_Threading_CancellationToken_
  name: GetByIdAsync
  nameWithType: IReadOnlyDataHandler<TEntity>.GetByIdAsync
  fullName: Quickie.DataHandlers.Readonly.Definition.IReadOnlyDataHandler<TEntity>.GetByIdAsync
  nameWithType.vb: IReadOnlyDataHandler(Of TEntity).GetByIdAsync
  fullName.vb: Quickie.DataHandlers.Readonly.Definition.IReadOnlyDataHandler(Of TEntity).GetByIdAsync
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{{TEntity}}
  commentId: T:System.Threading.Tasks.Task{`0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TEntity>
  nameWithType: Task<TEntity>
  fullName: System.Threading.Tasks.Task<TEntity>
  nameWithType.vb: Task(Of TEntity)
  fullName.vb: System.Threading.Tasks.Task(Of TEntity)
  name.vb: Task(Of TEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
