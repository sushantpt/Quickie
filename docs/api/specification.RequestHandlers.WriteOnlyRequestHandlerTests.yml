### YamlMime:ManagedReference
items:
- uid: specification.RequestHandlers.WriteOnlyRequestHandlerTests
  commentId: T:specification.RequestHandlers.WriteOnlyRequestHandlerTests
  id: WriteOnlyRequestHandlerTests
  parent: specification.RequestHandlers
  children:
  - specification.RequestHandlers.WriteOnlyRequestHandlerTests.#ctor
  - specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemAsync_ShouldReturnFailureResponse_WhenCreationFails
  - specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemAsync_ShouldReturnSuccessResponse_WhenItemIsCreatedSuccessfully
  - specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemAsync_ShouldThrowArgumentException_WhenItemIsNull
  - specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemsAsync_ShouldReturnFailureResponse_WhenCreationFails
  - specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemsAsync_ShouldReturnSuccessResponse_WhenItemsAreCreatedSuccessfully
  - specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemsAsync_ShouldThrowArgumentException_WhenItemsAreNull
  langs:
  - csharp
  - vb
  name: WriteOnlyRequestHandlerTests
  nameWithType: WriteOnlyRequestHandlerTests
  fullName: specification.RequestHandlers.WriteOnlyRequestHandlerTests
  type: Class
  source:
    remote:
      path: tests/specification/RequestHandlers/WriteOnlyRequestHandlerTests.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: WriteOnlyRequestHandlerTests
    path: ../tests/specification/RequestHandlers/WriteOnlyRequestHandlerTests.cs
    startLine: 12
  assemblies:
  - specification
  namespace: specification.RequestHandlers
  summary: Tests for write only request handler.
  example: []
  syntax:
    content: public class WriteOnlyRequestHandlerTests
    content.vb: Public Class WriteOnlyRequestHandlerTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: specification.RequestHandlers.WriteOnlyRequestHandlerTests.#ctor
  commentId: M:specification.RequestHandlers.WriteOnlyRequestHandlerTests.#ctor
  id: '#ctor'
  parent: specification.RequestHandlers.WriteOnlyRequestHandlerTests
  langs:
  - csharp
  - vb
  name: WriteOnlyRequestHandlerTests()
  nameWithType: WriteOnlyRequestHandlerTests.WriteOnlyRequestHandlerTests()
  fullName: specification.RequestHandlers.WriteOnlyRequestHandlerTests.WriteOnlyRequestHandlerTests()
  type: Constructor
  source:
    remote:
      path: tests/specification/RequestHandlers/WriteOnlyRequestHandlerTests.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: .ctor
    path: ../tests/specification/RequestHandlers/WriteOnlyRequestHandlerTests.cs
    startLine: 17
  assemblies:
  - specification
  namespace: specification.RequestHandlers
  syntax:
    content: public WriteOnlyRequestHandlerTests()
    content.vb: Public Sub New()
  overload: specification.RequestHandlers.WriteOnlyRequestHandlerTests.#ctor*
  nameWithType.vb: WriteOnlyRequestHandlerTests.New()
  fullName.vb: specification.RequestHandlers.WriteOnlyRequestHandlerTests.New()
  name.vb: New()
- uid: specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemAsync_ShouldReturnSuccessResponse_WhenItemIsCreatedSuccessfully
  commentId: M:specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemAsync_ShouldReturnSuccessResponse_WhenItemIsCreatedSuccessfully
  id: CreateItemAsync_ShouldReturnSuccessResponse_WhenItemIsCreatedSuccessfully
  parent: specification.RequestHandlers.WriteOnlyRequestHandlerTests
  langs:
  - csharp
  - vb
  name: CreateItemAsync_ShouldReturnSuccessResponse_WhenItemIsCreatedSuccessfully()
  nameWithType: WriteOnlyRequestHandlerTests.CreateItemAsync_ShouldReturnSuccessResponse_WhenItemIsCreatedSuccessfully()
  fullName: specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemAsync_ShouldReturnSuccessResponse_WhenItemIsCreatedSuccessfully()
  type: Method
  source:
    remote:
      path: tests/specification/RequestHandlers/WriteOnlyRequestHandlerTests.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: CreateItemAsync_ShouldReturnSuccessResponse_WhenItemIsCreatedSuccessfully
    path: ../tests/specification/RequestHandlers/WriteOnlyRequestHandlerTests.cs
    startLine: 26
  assemblies:
  - specification
  namespace: specification.RequestHandlers
  summary: When data is created, it returns success with newly created data.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task CreateItemAsync_ShouldReturnSuccessResponse_WhenItemIsCreatedSuccessfully()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function CreateItemAsync_ShouldReturnSuccessResponse_WhenItemIsCreatedSuccessfully() As Task
  overload: specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemAsync_ShouldReturnSuccessResponse_WhenItemIsCreatedSuccessfully*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemAsync_ShouldReturnFailureResponse_WhenCreationFails
  commentId: M:specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemAsync_ShouldReturnFailureResponse_WhenCreationFails
  id: CreateItemAsync_ShouldReturnFailureResponse_WhenCreationFails
  parent: specification.RequestHandlers.WriteOnlyRequestHandlerTests
  langs:
  - csharp
  - vb
  name: CreateItemAsync_ShouldReturnFailureResponse_WhenCreationFails()
  nameWithType: WriteOnlyRequestHandlerTests.CreateItemAsync_ShouldReturnFailureResponse_WhenCreationFails()
  fullName: specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemAsync_ShouldReturnFailureResponse_WhenCreationFails()
  type: Method
  source:
    remote:
      path: tests/specification/RequestHandlers/WriteOnlyRequestHandlerTests.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: CreateItemAsync_ShouldReturnFailureResponse_WhenCreationFails
    path: ../tests/specification/RequestHandlers/WriteOnlyRequestHandlerTests.cs
    startLine: 52
  assemblies:
  - specification
  namespace: specification.RequestHandlers
  summary: When data is not created, it returns failure with message.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task CreateItemAsync_ShouldReturnFailureResponse_WhenCreationFails()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function CreateItemAsync_ShouldReturnFailureResponse_WhenCreationFails() As Task
  overload: specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemAsync_ShouldReturnFailureResponse_WhenCreationFails*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemAsync_ShouldThrowArgumentException_WhenItemIsNull
  commentId: M:specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemAsync_ShouldThrowArgumentException_WhenItemIsNull
  id: CreateItemAsync_ShouldThrowArgumentException_WhenItemIsNull
  parent: specification.RequestHandlers.WriteOnlyRequestHandlerTests
  langs:
  - csharp
  - vb
  name: CreateItemAsync_ShouldThrowArgumentException_WhenItemIsNull()
  nameWithType: WriteOnlyRequestHandlerTests.CreateItemAsync_ShouldThrowArgumentException_WhenItemIsNull()
  fullName: specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemAsync_ShouldThrowArgumentException_WhenItemIsNull()
  type: Method
  source:
    remote:
      path: tests/specification/RequestHandlers/WriteOnlyRequestHandlerTests.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: CreateItemAsync_ShouldThrowArgumentException_WhenItemIsNull
    path: ../tests/specification/RequestHandlers/WriteOnlyRequestHandlerTests.cs
    startLine: 74
  assemblies:
  - specification
  namespace: specification.RequestHandlers
  summary: When creating data, if requested data is null, it throws exception.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task CreateItemAsync_ShouldThrowArgumentException_WhenItemIsNull()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function CreateItemAsync_ShouldThrowArgumentException_WhenItemIsNull() As Task
  overload: specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemAsync_ShouldThrowArgumentException_WhenItemIsNull*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemsAsync_ShouldReturnSuccessResponse_WhenItemsAreCreatedSuccessfully
  commentId: M:specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemsAsync_ShouldReturnSuccessResponse_WhenItemsAreCreatedSuccessfully
  id: CreateItemsAsync_ShouldReturnSuccessResponse_WhenItemsAreCreatedSuccessfully
  parent: specification.RequestHandlers.WriteOnlyRequestHandlerTests
  langs:
  - csharp
  - vb
  name: CreateItemsAsync_ShouldReturnSuccessResponse_WhenItemsAreCreatedSuccessfully()
  nameWithType: WriteOnlyRequestHandlerTests.CreateItemsAsync_ShouldReturnSuccessResponse_WhenItemsAreCreatedSuccessfully()
  fullName: specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemsAsync_ShouldReturnSuccessResponse_WhenItemsAreCreatedSuccessfully()
  type: Method
  source:
    remote:
      path: tests/specification/RequestHandlers/WriteOnlyRequestHandlerTests.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: CreateItemsAsync_ShouldReturnSuccessResponse_WhenItemsAreCreatedSuccessfully
    path: ../tests/specification/RequestHandlers/WriteOnlyRequestHandlerTests.cs
    startLine: 83
  assemblies:
  - specification
  namespace: specification.RequestHandlers
  summary: When data is created in bulk, it returns success with newly created data.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task CreateItemsAsync_ShouldReturnSuccessResponse_WhenItemsAreCreatedSuccessfully()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function CreateItemsAsync_ShouldReturnSuccessResponse_WhenItemsAreCreatedSuccessfully() As Task
  overload: specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemsAsync_ShouldReturnSuccessResponse_WhenItemsAreCreatedSuccessfully*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemsAsync_ShouldReturnFailureResponse_WhenCreationFails
  commentId: M:specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemsAsync_ShouldReturnFailureResponse_WhenCreationFails
  id: CreateItemsAsync_ShouldReturnFailureResponse_WhenCreationFails
  parent: specification.RequestHandlers.WriteOnlyRequestHandlerTests
  langs:
  - csharp
  - vb
  name: CreateItemsAsync_ShouldReturnFailureResponse_WhenCreationFails()
  nameWithType: WriteOnlyRequestHandlerTests.CreateItemsAsync_ShouldReturnFailureResponse_WhenCreationFails()
  fullName: specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemsAsync_ShouldReturnFailureResponse_WhenCreationFails()
  type: Method
  source:
    remote:
      path: tests/specification/RequestHandlers/WriteOnlyRequestHandlerTests.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: CreateItemsAsync_ShouldReturnFailureResponse_WhenCreationFails
    path: ../tests/specification/RequestHandlers/WriteOnlyRequestHandlerTests.cs
    startLine: 106
  assemblies:
  - specification
  namespace: specification.RequestHandlers
  summary: When data (bulk) is not created, it returns failure with message.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task CreateItemsAsync_ShouldReturnFailureResponse_WhenCreationFails()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function CreateItemsAsync_ShouldReturnFailureResponse_WhenCreationFails() As Task
  overload: specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemsAsync_ShouldReturnFailureResponse_WhenCreationFails*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemsAsync_ShouldThrowArgumentException_WhenItemsAreNull
  commentId: M:specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemsAsync_ShouldThrowArgumentException_WhenItemsAreNull
  id: CreateItemsAsync_ShouldThrowArgumentException_WhenItemsAreNull
  parent: specification.RequestHandlers.WriteOnlyRequestHandlerTests
  langs:
  - csharp
  - vb
  name: CreateItemsAsync_ShouldThrowArgumentException_WhenItemsAreNull()
  nameWithType: WriteOnlyRequestHandlerTests.CreateItemsAsync_ShouldThrowArgumentException_WhenItemsAreNull()
  fullName: specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemsAsync_ShouldThrowArgumentException_WhenItemsAreNull()
  type: Method
  source:
    remote:
      path: tests/specification/RequestHandlers/WriteOnlyRequestHandlerTests.cs
      branch: master
      repo: https://github.com/sushantpt/Quickie.git
    id: CreateItemsAsync_ShouldThrowArgumentException_WhenItemsAreNull
    path: ../tests/specification/RequestHandlers/WriteOnlyRequestHandlerTests.cs
    startLine: 128
  assemblies:
  - specification
  namespace: specification.RequestHandlers
  summary: When creating data (bulk), if requested data is null, it throws exception.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task CreateItemsAsync_ShouldThrowArgumentException_WhenItemsAreNull()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function CreateItemsAsync_ShouldThrowArgumentException_WhenItemsAreNull() As Task
  overload: specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemsAsync_ShouldThrowArgumentException_WhenItemsAreNull*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
references:
- uid: specification.RequestHandlers
  commentId: N:specification.RequestHandlers
  href: specification.html
  name: specification.RequestHandlers
  nameWithType: specification.RequestHandlers
  fullName: specification.RequestHandlers
  spec.csharp:
  - uid: specification
    name: specification
    href: specification.html
  - name: .
  - uid: specification.RequestHandlers
    name: RequestHandlers
    href: specification.RequestHandlers.html
  spec.vb:
  - uid: specification
    name: specification
    href: specification.html
  - name: .
  - uid: specification.RequestHandlers
    name: RequestHandlers
    href: specification.RequestHandlers.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: specification.RequestHandlers.WriteOnlyRequestHandlerTests.#ctor*
  commentId: Overload:specification.RequestHandlers.WriteOnlyRequestHandlerTests.#ctor
  href: specification.RequestHandlers.WriteOnlyRequestHandlerTests.html#specification_RequestHandlers_WriteOnlyRequestHandlerTests__ctor
  name: WriteOnlyRequestHandlerTests
  nameWithType: WriteOnlyRequestHandlerTests.WriteOnlyRequestHandlerTests
  fullName: specification.RequestHandlers.WriteOnlyRequestHandlerTests.WriteOnlyRequestHandlerTests
  nameWithType.vb: WriteOnlyRequestHandlerTests.New
  fullName.vb: specification.RequestHandlers.WriteOnlyRequestHandlerTests.New
  name.vb: New
- uid: specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemAsync_ShouldReturnSuccessResponse_WhenItemIsCreatedSuccessfully*
  commentId: Overload:specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemAsync_ShouldReturnSuccessResponse_WhenItemIsCreatedSuccessfully
  href: specification.RequestHandlers.WriteOnlyRequestHandlerTests.html#specification_RequestHandlers_WriteOnlyRequestHandlerTests_CreateItemAsync_ShouldReturnSuccessResponse_WhenItemIsCreatedSuccessfully
  name: CreateItemAsync_ShouldReturnSuccessResponse_WhenItemIsCreatedSuccessfully
  nameWithType: WriteOnlyRequestHandlerTests.CreateItemAsync_ShouldReturnSuccessResponse_WhenItemIsCreatedSuccessfully
  fullName: specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemAsync_ShouldReturnSuccessResponse_WhenItemIsCreatedSuccessfully
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemAsync_ShouldReturnFailureResponse_WhenCreationFails*
  commentId: Overload:specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemAsync_ShouldReturnFailureResponse_WhenCreationFails
  href: specification.RequestHandlers.WriteOnlyRequestHandlerTests.html#specification_RequestHandlers_WriteOnlyRequestHandlerTests_CreateItemAsync_ShouldReturnFailureResponse_WhenCreationFails
  name: CreateItemAsync_ShouldReturnFailureResponse_WhenCreationFails
  nameWithType: WriteOnlyRequestHandlerTests.CreateItemAsync_ShouldReturnFailureResponse_WhenCreationFails
  fullName: specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemAsync_ShouldReturnFailureResponse_WhenCreationFails
- uid: specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemAsync_ShouldThrowArgumentException_WhenItemIsNull*
  commentId: Overload:specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemAsync_ShouldThrowArgumentException_WhenItemIsNull
  href: specification.RequestHandlers.WriteOnlyRequestHandlerTests.html#specification_RequestHandlers_WriteOnlyRequestHandlerTests_CreateItemAsync_ShouldThrowArgumentException_WhenItemIsNull
  name: CreateItemAsync_ShouldThrowArgumentException_WhenItemIsNull
  nameWithType: WriteOnlyRequestHandlerTests.CreateItemAsync_ShouldThrowArgumentException_WhenItemIsNull
  fullName: specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemAsync_ShouldThrowArgumentException_WhenItemIsNull
- uid: specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemsAsync_ShouldReturnSuccessResponse_WhenItemsAreCreatedSuccessfully*
  commentId: Overload:specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemsAsync_ShouldReturnSuccessResponse_WhenItemsAreCreatedSuccessfully
  href: specification.RequestHandlers.WriteOnlyRequestHandlerTests.html#specification_RequestHandlers_WriteOnlyRequestHandlerTests_CreateItemsAsync_ShouldReturnSuccessResponse_WhenItemsAreCreatedSuccessfully
  name: CreateItemsAsync_ShouldReturnSuccessResponse_WhenItemsAreCreatedSuccessfully
  nameWithType: WriteOnlyRequestHandlerTests.CreateItemsAsync_ShouldReturnSuccessResponse_WhenItemsAreCreatedSuccessfully
  fullName: specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemsAsync_ShouldReturnSuccessResponse_WhenItemsAreCreatedSuccessfully
- uid: specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemsAsync_ShouldReturnFailureResponse_WhenCreationFails*
  commentId: Overload:specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemsAsync_ShouldReturnFailureResponse_WhenCreationFails
  href: specification.RequestHandlers.WriteOnlyRequestHandlerTests.html#specification_RequestHandlers_WriteOnlyRequestHandlerTests_CreateItemsAsync_ShouldReturnFailureResponse_WhenCreationFails
  name: CreateItemsAsync_ShouldReturnFailureResponse_WhenCreationFails
  nameWithType: WriteOnlyRequestHandlerTests.CreateItemsAsync_ShouldReturnFailureResponse_WhenCreationFails
  fullName: specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemsAsync_ShouldReturnFailureResponse_WhenCreationFails
- uid: specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemsAsync_ShouldThrowArgumentException_WhenItemsAreNull*
  commentId: Overload:specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemsAsync_ShouldThrowArgumentException_WhenItemsAreNull
  href: specification.RequestHandlers.WriteOnlyRequestHandlerTests.html#specification_RequestHandlers_WriteOnlyRequestHandlerTests_CreateItemsAsync_ShouldThrowArgumentException_WhenItemsAreNull
  name: CreateItemsAsync_ShouldThrowArgumentException_WhenItemsAreNull
  nameWithType: WriteOnlyRequestHandlerTests.CreateItemsAsync_ShouldThrowArgumentException_WhenItemsAreNull
  fullName: specification.RequestHandlers.WriteOnlyRequestHandlerTests.CreateItemsAsync_ShouldThrowArgumentException_WhenItemsAreNull
