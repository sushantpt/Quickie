### YamlMime:ManagedReference
items:
- uid: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4
  commentId: T:Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4
  id: CrudForCollectionRequestHandler`4
  parent: Quickie.Handlers.Crud.Implementation
  children:
  - Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.#ctor(`2)
  - Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.CountAsync(System.Nullable{System.Threading.CancellationToken})
  - Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.CreateRangeAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  - Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.DeleteRangeAsync(System.Collections.Generic.ICollection{`3},System.Nullable{System.Threading.CancellationToken})
  - Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.GetAllAsync(Quickie.DataObj.RequestForDataObj,System.Nullable{System.Threading.CancellationToken})
  - Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.MapToCollectionOfDto(System.Collections.Generic.ICollection{`1})
  - Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.MapToCollectionOfEntity(System.Collections.Generic.ICollection{`0})
  - Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.UpdateRangeAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  langs:
  - csharp
  - vb
  name: CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>
  nameWithType: CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>
  fullName: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>
  type: Class
  source:
    remote:
      path: src/Quickie/Handlers/Crud/Implementation/CrudForCollectionRequestHandler.cs
      branch: gh-pages
      repo: https://github.com/sushantpt/Quickie.git
    id: CrudForCollectionRequestHandler
    path: ../src/Quickie/Handlers/Crud/Implementation/CrudForCollectionRequestHandler.cs
    startLine: 10
  assemblies:
  - Quickie
  namespace: Quickie.Handlers.Crud.Implementation
  summary: Abstract class serving as CRUD for collection request handler.
  example: []
  syntax:
    content: 'public abstract class CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType> : ICrudForCollectionRequestHandler<TViewModel, TIdType> where TViewModel : CrudDto where TEntity : CrudEntity where TDataHandler : ICrudForCollectionDataHandler<TEntity, TIdType> where TIdType : IComparable'
    typeParameters:
    - id: TViewModel
      description: View model or dto
    - id: TEntity
      description: Entity
    - id: TDataHandler
      description: Data handler (repository layer)
    - id: TIdType
      description: 'Type of identifier. eg: int, string, ...'
    content.vb: Public MustInherit Class CrudForCollectionRequestHandler(Of TViewModel As CrudDto, TEntity As CrudEntity, TDataHandler As ICrudForCollectionDataHandler(Of TEntity, TIdType), TIdType As IComparable) Implements ICrudForCollectionRequestHandler(Of TViewModel, TIdType)
  inheritance:
  - System.Object
  derivedClasses:
  - specification.Helpers.RequestHandlers.CrudForCollectionRequestHandlerConcrete
  implements:
  - Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{{TViewModel},{TIdType}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType)
  fullName.vb: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType)
  name.vb: CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType)
- uid: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.#ctor(`2)
  commentId: M:Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.#ctor(`2)
  id: '#ctor(`2)'
  parent: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4
  langs:
  - csharp
  - vb
  name: CrudForCollectionRequestHandler(TDataHandler)
  nameWithType: CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.CrudForCollectionRequestHandler(TDataHandler)
  fullName: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.CrudForCollectionRequestHandler(TDataHandler)
  type: Constructor
  source:
    remote:
      path: src/Quickie/Handlers/Crud/Implementation/CrudForCollectionRequestHandler.cs
      branch: gh-pages
      repo: https://github.com/sushantpt/Quickie.git
    id: .ctor
    path: ../src/Quickie/Handlers/Crud/Implementation/CrudForCollectionRequestHandler.cs
    startLine: 10
  assemblies:
  - Quickie
  namespace: Quickie.Handlers.Crud.Implementation
  summary: Abstract class serving as CRUD for collection request handler.
  example: []
  syntax:
    content: protected CrudForCollectionRequestHandler(TDataHandler dataHandler)
    parameters:
    - id: dataHandler
      type: '{TDataHandler}'
      description: Data
    content.vb: Protected Sub New(dataHandler As TDataHandler)
  overload: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.#ctor*
  nameWithType.vb: CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).New(TDataHandler)
  fullName.vb: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).New(TDataHandler)
  name.vb: New(TDataHandler)
- uid: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.CreateRangeAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.CreateRangeAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  id: CreateRangeAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4
  langs:
  - csharp
  - vb
  name: CreateRangeAsync(ICollection<TViewModel>, CancellationToken?)
  nameWithType: CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.CreateRangeAsync(ICollection<TViewModel>, CancellationToken?)
  fullName: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.CreateRangeAsync(System.Collections.Generic.ICollection<TViewModel>, System.Threading.CancellationToken?)
  type: Method
  source:
    remote:
      path: src/Quickie/Handlers/Crud/Implementation/CrudForCollectionRequestHandler.cs
      branch: gh-pages
      repo: https://github.com/sushantpt/Quickie.git
    id: CreateRangeAsync
    path: ../src/Quickie/Handlers/Crud/Implementation/CrudForCollectionRequestHandler.cs
    startLine: 20
  assemblies:
  - Quickie
  namespace: Quickie.Handlers.Crud.Implementation
  summary: Data create request.
  example: []
  syntax:
    content: public Task<ResponseObj<ICollection<TViewModel>>> CreateRangeAsync(ICollection<TViewModel> entities, CancellationToken? cancellationToken = null)
    parameters:
    - id: entities
      type: System.Collections.Generic.ICollection{{TViewModel}}
      description: Collection of data requested to create.
    - id: cancellationToken
      type: System.Nullable{System.Threading.CancellationToken}
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj{System.Collections.Generic.ICollection{{TViewModel}}}}
      description: ''
    content.vb: Public Function CreateRangeAsync(entities As ICollection(Of TViewModel), cancellationToken As CancellationToken? = Nothing) As Task(Of ResponseObj(Of ICollection(Of TViewModel)))
  overload: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.CreateRangeAsync*
  implements:
  - Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{{TViewModel},{TIdType}}.CreateRangeAsync(System.Collections.Generic.ICollection{{TViewModel}},System.Nullable{System.Threading.CancellationToken})
  nameWithType.vb: CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).CreateRangeAsync(ICollection(Of TViewModel), CancellationToken?)
  fullName.vb: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).CreateRangeAsync(System.Collections.Generic.ICollection(Of TViewModel), System.Threading.CancellationToken?)
  name.vb: CreateRangeAsync(ICollection(Of TViewModel), CancellationToken?)
- uid: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.UpdateRangeAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.UpdateRangeAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  id: UpdateRangeAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4
  langs:
  - csharp
  - vb
  name: UpdateRangeAsync(ICollection<TViewModel>, CancellationToken?)
  nameWithType: CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.UpdateRangeAsync(ICollection<TViewModel>, CancellationToken?)
  fullName: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.UpdateRangeAsync(System.Collections.Generic.ICollection<TViewModel>, System.Threading.CancellationToken?)
  type: Method
  source:
    remote:
      path: src/Quickie/Handlers/Crud/Implementation/CrudForCollectionRequestHandler.cs
      branch: gh-pages
      repo: https://github.com/sushantpt/Quickie.git
    id: UpdateRangeAsync
    path: ../src/Quickie/Handlers/Crud/Implementation/CrudForCollectionRequestHandler.cs
    startLine: 44
  assemblies:
  - Quickie
  namespace: Quickie.Handlers.Crud.Implementation
  summary: Update request.
  example: []
  syntax:
    content: public Task<ResponseObj<ICollection<TViewModel>>> UpdateRangeAsync(ICollection<TViewModel> entities, CancellationToken? cancellationToken = null)
    parameters:
    - id: entities
      type: System.Collections.Generic.ICollection{{TViewModel}}
      description: Requested collection data
    - id: cancellationToken
      type: System.Nullable{System.Threading.CancellationToken}
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj{System.Collections.Generic.ICollection{{TViewModel}}}}
      description: ''
    content.vb: Public Function UpdateRangeAsync(entities As ICollection(Of TViewModel), cancellationToken As CancellationToken? = Nothing) As Task(Of ResponseObj(Of ICollection(Of TViewModel)))
  overload: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.UpdateRangeAsync*
  implements:
  - Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{{TViewModel},{TIdType}}.UpdateRangeAsync(System.Collections.Generic.ICollection{{TViewModel}},System.Nullable{System.Threading.CancellationToken})
  nameWithType.vb: CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).UpdateRangeAsync(ICollection(Of TViewModel), CancellationToken?)
  fullName.vb: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).UpdateRangeAsync(System.Collections.Generic.ICollection(Of TViewModel), System.Threading.CancellationToken?)
  name.vb: UpdateRangeAsync(ICollection(Of TViewModel), CancellationToken?)
- uid: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.DeleteRangeAsync(System.Collections.Generic.ICollection{`3},System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.DeleteRangeAsync(System.Collections.Generic.ICollection{`3},System.Nullable{System.Threading.CancellationToken})
  id: DeleteRangeAsync(System.Collections.Generic.ICollection{`3},System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4
  langs:
  - csharp
  - vb
  name: DeleteRangeAsync(ICollection<TIdType>, CancellationToken?)
  nameWithType: CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.DeleteRangeAsync(ICollection<TIdType>, CancellationToken?)
  fullName: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.DeleteRangeAsync(System.Collections.Generic.ICollection<TIdType>, System.Threading.CancellationToken?)
  type: Method
  source:
    remote:
      path: src/Quickie/Handlers/Crud/Implementation/CrudForCollectionRequestHandler.cs
      branch: gh-pages
      repo: https://github.com/sushantpt/Quickie.git
    id: DeleteRangeAsync
    path: ../src/Quickie/Handlers/Crud/Implementation/CrudForCollectionRequestHandler.cs
    startLine: 65
  assemblies:
  - Quickie
  namespace: Quickie.Handlers.Crud.Implementation
  summary: Delete request.
  example: []
  syntax:
    content: public Task<ResponseObj> DeleteRangeAsync(ICollection<TIdType> ids, CancellationToken? cancellationToken = null)
    parameters:
    - id: ids
      type: System.Collections.Generic.ICollection{{TIdType}}
      description: Identifiers of the data to remove.
    - id: cancellationToken
      type: System.Nullable{System.Threading.CancellationToken}
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj}
      description: ''
    content.vb: Public Function DeleteRangeAsync(ids As ICollection(Of TIdType), cancellationToken As CancellationToken? = Nothing) As Task(Of ResponseObj)
  overload: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.DeleteRangeAsync*
  implements:
  - Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{{TViewModel},{TIdType}}.DeleteRangeAsync(System.Collections.Generic.ICollection{{TIdType}},System.Nullable{System.Threading.CancellationToken})
  nameWithType.vb: CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).DeleteRangeAsync(ICollection(Of TIdType), CancellationToken?)
  fullName.vb: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).DeleteRangeAsync(System.Collections.Generic.ICollection(Of TIdType), System.Threading.CancellationToken?)
  name.vb: DeleteRangeAsync(ICollection(Of TIdType), CancellationToken?)
- uid: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.GetAllAsync(Quickie.DataObj.RequestForDataObj,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.GetAllAsync(Quickie.DataObj.RequestForDataObj,System.Nullable{System.Threading.CancellationToken})
  id: GetAllAsync(Quickie.DataObj.RequestForDataObj,System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4
  langs:
  - csharp
  - vb
  name: GetAllAsync(RequestForDataObj, CancellationToken?)
  nameWithType: CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.GetAllAsync(RequestForDataObj, CancellationToken?)
  fullName: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.GetAllAsync(Quickie.DataObj.RequestForDataObj, System.Threading.CancellationToken?)
  type: Method
  source:
    remote:
      path: src/Quickie/Handlers/Crud/Implementation/CrudForCollectionRequestHandler.cs
      branch: gh-pages
      repo: https://github.com/sushantpt/Quickie.git
    id: GetAllAsync
    path: ../src/Quickie/Handlers/Crud/Implementation/CrudForCollectionRequestHandler.cs
    startLine: 77
  assemblies:
  - Quickie
  namespace: Quickie.Handlers.Crud.Implementation
  summary: Get data.
  example: []
  syntax:
    content: public Task<ResponseObj<PaginatedDataObj<TViewModel>>> GetAllAsync(RequestForDataObj request, CancellationToken? cancellationToken = null)
    parameters:
    - id: request
      type: Quickie.DataObj.RequestForDataObj
      description: Data request filter
    - id: cancellationToken
      type: System.Nullable{System.Threading.CancellationToken}
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj{Quickie.DataObj.PaginatedDataObj{{TViewModel}}}}
      description: ''
    content.vb: Public Function GetAllAsync(request As RequestForDataObj, cancellationToken As CancellationToken? = Nothing) As Task(Of ResponseObj(Of PaginatedDataObj(Of TViewModel)))
  overload: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.GetAllAsync*
  implements:
  - Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{{TViewModel},{TIdType}}.GetAllAsync(Quickie.DataObj.RequestForDataObj,System.Nullable{System.Threading.CancellationToken})
  nameWithType.vb: CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).GetAllAsync(RequestForDataObj, CancellationToken?)
  fullName.vb: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).GetAllAsync(Quickie.DataObj.RequestForDataObj, System.Threading.CancellationToken?)
- uid: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.CountAsync(System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.CountAsync(System.Nullable{System.Threading.CancellationToken})
  id: CountAsync(System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4
  langs:
  - csharp
  - vb
  name: CountAsync(CancellationToken?)
  nameWithType: CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.CountAsync(CancellationToken?)
  fullName: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.CountAsync(System.Threading.CancellationToken?)
  type: Method
  source:
    remote:
      path: src/Quickie/Handlers/Crud/Implementation/CrudForCollectionRequestHandler.cs
      branch: gh-pages
      repo: https://github.com/sushantpt/Quickie.git
    id: CountAsync
    path: ../src/Quickie/Handlers/Crud/Implementation/CrudForCollectionRequestHandler.cs
    startLine: 104
  assemblies:
  - Quickie
  namespace: Quickie.Handlers.Crud.Implementation
  summary: Count.
  example: []
  syntax:
    content: public Task<ResponseObj<int>> CountAsync(CancellationToken? cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Nullable{System.Threading.CancellationToken}
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj{System.Int32}}
      description: ''
    content.vb: Public Function CountAsync(cancellationToken As CancellationToken? = Nothing) As Task(Of ResponseObj(Of Integer))
  overload: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.CountAsync*
  implements:
  - Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{{TViewModel},{TIdType}}.CountAsync(System.Nullable{System.Threading.CancellationToken})
  nameWithType.vb: CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).CountAsync(CancellationToken?)
  fullName.vb: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).CountAsync(System.Threading.CancellationToken?)
- uid: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.MapToCollectionOfDto(System.Collections.Generic.ICollection{`1})
  commentId: M:Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.MapToCollectionOfDto(System.Collections.Generic.ICollection{`1})
  id: MapToCollectionOfDto(System.Collections.Generic.ICollection{`1})
  parent: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4
  langs:
  - csharp
  - vb
  name: MapToCollectionOfDto(ICollection<TEntity>)
  nameWithType: CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToCollectionOfDto(ICollection<TEntity>)
  fullName: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToCollectionOfDto(System.Collections.Generic.ICollection<TEntity>)
  type: Method
  source:
    remote:
      path: src/Quickie/Handlers/Crud/Implementation/CrudForCollectionRequestHandler.cs
      branch: gh-pages
      repo: https://github.com/sushantpt/Quickie.git
    id: MapToCollectionOfDto
    path: ../src/Quickie/Handlers/Crud/Implementation/CrudForCollectionRequestHandler.cs
    startLine: 111
  assemblies:
  - Quickie
  namespace: Quickie.Handlers.Crud.Implementation
  summary: Maps a collection of <code class="typeparamref">TEntity</code> to a collection of <code class="typeparamref">TViewModel</code> dto.
  example: []
  syntax:
    content: protected abstract ICollection<TViewModel> MapToCollectionOfDto(ICollection<TEntity> entity)
    parameters:
    - id: entity
      type: System.Collections.Generic.ICollection{{TEntity}}
      description: ''
    return:
      type: System.Collections.Generic.ICollection{{TViewModel}}
      description: ''
    content.vb: Protected MustOverride Function MapToCollectionOfDto(entity As ICollection(Of TEntity)) As ICollection(Of TViewModel)
  overload: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.MapToCollectionOfDto*
  nameWithType.vb: CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToCollectionOfDto(ICollection(Of TEntity))
  fullName.vb: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToCollectionOfDto(System.Collections.Generic.ICollection(Of TEntity))
  name.vb: MapToCollectionOfDto(ICollection(Of TEntity))
- uid: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.MapToCollectionOfEntity(System.Collections.Generic.ICollection{`0})
  commentId: M:Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.MapToCollectionOfEntity(System.Collections.Generic.ICollection{`0})
  id: MapToCollectionOfEntity(System.Collections.Generic.ICollection{`0})
  parent: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4
  langs:
  - csharp
  - vb
  name: MapToCollectionOfEntity(ICollection<TViewModel>)
  nameWithType: CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToCollectionOfEntity(ICollection<TViewModel>)
  fullName: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToCollectionOfEntity(System.Collections.Generic.ICollection<TViewModel>)
  type: Method
  source:
    remote:
      path: src/Quickie/Handlers/Crud/Implementation/CrudForCollectionRequestHandler.cs
      branch: gh-pages
      repo: https://github.com/sushantpt/Quickie.git
    id: MapToCollectionOfEntity
    path: ../src/Quickie/Handlers/Crud/Implementation/CrudForCollectionRequestHandler.cs
    startLine: 118
  assemblies:
  - Quickie
  namespace: Quickie.Handlers.Crud.Implementation
  summary: Maps a collection of <code class="typeparamref">TViewModel</code> to a collection of <code class="typeparamref">TEntity</code> entity.
  example: []
  syntax:
    content: protected abstract ICollection<TEntity> MapToCollectionOfEntity(ICollection<TViewModel> entity)
    parameters:
    - id: entity
      type: System.Collections.Generic.ICollection{{TViewModel}}
      description: ''
    return:
      type: System.Collections.Generic.ICollection{{TEntity}}
      description: ''
    content.vb: Protected MustOverride Function MapToCollectionOfEntity(entity As ICollection(Of TViewModel)) As ICollection(Of TEntity)
  overload: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.MapToCollectionOfEntity*
  nameWithType.vb: CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToCollectionOfEntity(ICollection(Of TViewModel))
  fullName.vb: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToCollectionOfEntity(System.Collections.Generic.ICollection(Of TViewModel))
  name.vb: MapToCollectionOfEntity(ICollection(Of TViewModel))
references:
- uid: Quickie.Handlers.Crud.Implementation
  commentId: N:Quickie.Handlers.Crud.Implementation
  href: Quickie.html
  name: Quickie.Handlers.Crud.Implementation
  nameWithType: Quickie.Handlers.Crud.Implementation
  fullName: Quickie.Handlers.Crud.Implementation
  spec.csharp:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.Handlers
    name: Handlers
    href: Quickie.Handlers.html
  - name: .
  - uid: Quickie.Handlers.Crud
    name: Crud
    href: Quickie.Handlers.Crud.html
  - name: .
  - uid: Quickie.Handlers.Crud.Implementation
    name: Implementation
    href: Quickie.Handlers.Crud.Implementation.html
  spec.vb:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.Handlers
    name: Handlers
    href: Quickie.Handlers.html
  - name: .
  - uid: Quickie.Handlers.Crud
    name: Crud
    href: Quickie.Handlers.Crud.html
  - name: .
  - uid: Quickie.Handlers.Crud.Implementation
    name: Implementation
    href: Quickie.Handlers.Crud.Implementation.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{{TViewModel},{TIdType}}
  commentId: T:Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{`0,`3}
  parent: Quickie.Handlers.Crud.Definition
  definition: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler`2
  href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html
  name: ICrudForCollectionRequestHandler<TViewModel, TIdType>
  nameWithType: ICrudForCollectionRequestHandler<TViewModel, TIdType>
  fullName: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler<TViewModel, TIdType>
  nameWithType.vb: ICrudForCollectionRequestHandler(Of TViewModel, TIdType)
  fullName.vb: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler(Of TViewModel, TIdType)
  name.vb: ICrudForCollectionRequestHandler(Of TViewModel, TIdType)
  spec.csharp:
  - uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler`2
    name: ICrudForCollectionRequestHandler
    href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html
  - name: <
  - name: TViewModel
  - name: ','
  - name: " "
  - name: TIdType
  - name: '>'
  spec.vb:
  - uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler`2
    name: ICrudForCollectionRequestHandler
    href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TViewModel
  - name: ','
  - name: " "
  - name: TIdType
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler`2
  commentId: T:Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler`2
  href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html
  name: ICrudForCollectionRequestHandler<TViewModel, TIdType>
  nameWithType: ICrudForCollectionRequestHandler<TViewModel, TIdType>
  fullName: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler<TViewModel, TIdType>
  nameWithType.vb: ICrudForCollectionRequestHandler(Of TViewModel, TIdType)
  fullName.vb: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler(Of TViewModel, TIdType)
  name.vb: ICrudForCollectionRequestHandler(Of TViewModel, TIdType)
  spec.csharp:
  - uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler`2
    name: ICrudForCollectionRequestHandler
    href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html
  - name: <
  - name: TViewModel
  - name: ','
  - name: " "
  - name: TIdType
  - name: '>'
  spec.vb:
  - uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler`2
    name: ICrudForCollectionRequestHandler
    href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TViewModel
  - name: ','
  - name: " "
  - name: TIdType
  - name: )
- uid: Quickie.Handlers.Crud.Definition
  commentId: N:Quickie.Handlers.Crud.Definition
  href: Quickie.html
  name: Quickie.Handlers.Crud.Definition
  nameWithType: Quickie.Handlers.Crud.Definition
  fullName: Quickie.Handlers.Crud.Definition
  spec.csharp:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.Handlers
    name: Handlers
    href: Quickie.Handlers.html
  - name: .
  - uid: Quickie.Handlers.Crud
    name: Crud
    href: Quickie.Handlers.Crud.html
  - name: .
  - uid: Quickie.Handlers.Crud.Definition
    name: Definition
    href: Quickie.Handlers.Crud.Definition.html
  spec.vb:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.Handlers
    name: Handlers
    href: Quickie.Handlers.html
  - name: .
  - uid: Quickie.Handlers.Crud
    name: Crud
    href: Quickie.Handlers.Crud.html
  - name: .
  - uid: Quickie.Handlers.Crud.Definition
    name: Definition
    href: Quickie.Handlers.Crud.Definition.html
- uid: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.#ctor*
  commentId: Overload:Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.#ctor
  href: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler-4.html#Quickie_Handlers_Crud_Implementation_CrudForCollectionRequestHandler_4__ctor__2_
  name: CrudForCollectionRequestHandler
  nameWithType: CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.CrudForCollectionRequestHandler
  fullName: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.CrudForCollectionRequestHandler
  nameWithType.vb: CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).New
  fullName.vb: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).New
  name.vb: New
- uid: '{TDataHandler}'
  commentId: '!:TDataHandler'
  definition: TDataHandler
  name: TDataHandler
  nameWithType: TDataHandler
  fullName: TDataHandler
- uid: TDataHandler
  commentId: '!:TDataHandler'
  name: TDataHandler
  nameWithType: TDataHandler
  fullName: TDataHandler
- uid: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.CreateRangeAsync*
  commentId: Overload:Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.CreateRangeAsync
  href: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler-4.html#Quickie_Handlers_Crud_Implementation_CrudForCollectionRequestHandler_4_CreateRangeAsync_System_Collections_Generic_ICollection__0__System_Nullable_System_Threading_CancellationToken__
  name: CreateRangeAsync
  nameWithType: CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.CreateRangeAsync
  fullName: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.CreateRangeAsync
  nameWithType.vb: CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).CreateRangeAsync
  fullName.vb: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).CreateRangeAsync
- uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{{TViewModel},{TIdType}}.CreateRangeAsync(System.Collections.Generic.ICollection{{TViewModel}},System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{`0,`3}.CreateRangeAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{{TViewModel},{TIdType}}
  definition: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler`2.CreateRangeAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudForCollectionRequestHandler_2_CreateRangeAsync_System_Collections_Generic_ICollection__0__System_Nullable_System_Threading_CancellationToken__
  name: CreateRangeAsync(ICollection<TViewModel>, CancellationToken?)
  nameWithType: ICrudForCollectionRequestHandler<TViewModel, TIdType>.CreateRangeAsync(ICollection<TViewModel>, CancellationToken?)
  fullName: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler<TViewModel, TIdType>.CreateRangeAsync(System.Collections.Generic.ICollection<TViewModel>, System.Threading.CancellationToken?)
  nameWithType.vb: ICrudForCollectionRequestHandler(Of TViewModel, TIdType).CreateRangeAsync(ICollection(Of TViewModel), CancellationToken?)
  fullName.vb: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler(Of TViewModel, TIdType).CreateRangeAsync(System.Collections.Generic.ICollection(Of TViewModel), System.Threading.CancellationToken?)
  name.vb: CreateRangeAsync(ICollection(Of TViewModel), CancellationToken?)
  spec.csharp:
  - uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{`0,`3}.CreateRangeAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
    name: CreateRangeAsync
    href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudForCollectionRequestHandler_2_CreateRangeAsync_System_Collections_Generic_ICollection__0__System_Nullable_System_Threading_CancellationToken__
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TViewModel
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{`0,`3}.CreateRangeAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
    name: CreateRangeAsync
    href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudForCollectionRequestHandler_2_CreateRangeAsync_System_Collections_Generic_ICollection__0__System_Nullable_System_Threading_CancellationToken__
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TViewModel
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: System.Collections.Generic.ICollection{{TViewModel}}
  commentId: T:System.Collections.Generic.ICollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<TViewModel>
  nameWithType: ICollection<TViewModel>
  fullName: System.Collections.Generic.ICollection<TViewModel>
  nameWithType.vb: ICollection(Of TViewModel)
  fullName.vb: System.Collections.Generic.ICollection(Of TViewModel)
  name.vb: ICollection(Of TViewModel)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TViewModel
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TViewModel
  - name: )
- uid: System.Nullable{System.Threading.CancellationToken}
  commentId: T:System.Nullable{System.Threading.CancellationToken}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken?
  nameWithType: CancellationToken?
  fullName: System.Threading.CancellationToken?
  spec.csharp:
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  spec.vb:
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
- uid: System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj{System.Collections.Generic.ICollection{{TViewModel}}}}
  commentId: T:System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj{System.Collections.Generic.ICollection{`0}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ResponseObj<ICollection<TViewModel>>>
  nameWithType: Task<ResponseObj<ICollection<TViewModel>>>
  fullName: System.Threading.Tasks.Task<Quickie.DataObj.ResponseObj<System.Collections.Generic.ICollection<TViewModel>>>
  nameWithType.vb: Task(Of ResponseObj(Of ICollection(Of TViewModel)))
  fullName.vb: System.Threading.Tasks.Task(Of Quickie.DataObj.ResponseObj(Of System.Collections.Generic.ICollection(Of TViewModel)))
  name.vb: Task(Of ResponseObj(Of ICollection(Of TViewModel)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Quickie.DataObj.ResponseObj`1
    name: ResponseObj
    href: Quickie.DataObj.ResponseObj-1.html
  - name: <
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TViewModel
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Quickie.DataObj.ResponseObj`1
    name: ResponseObj
    href: Quickie.DataObj.ResponseObj-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TViewModel
  - name: )
  - name: )
  - name: )
- uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler`2.CreateRangeAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler`2.CreateRangeAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  isExternal: true
  href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudForCollectionRequestHandler_2_CreateRangeAsync_System_Collections_Generic_ICollection__0__System_Nullable_System_Threading_CancellationToken__
  name: CreateRangeAsync(ICollection<TViewModel>, CancellationToken?)
  nameWithType: ICrudForCollectionRequestHandler<TViewModel, TIdType>.CreateRangeAsync(ICollection<TViewModel>, CancellationToken?)
  fullName: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler<TViewModel, TIdType>.CreateRangeAsync(System.Collections.Generic.ICollection<TViewModel>, System.Threading.CancellationToken?)
  nameWithType.vb: ICrudForCollectionRequestHandler(Of TViewModel, TIdType).CreateRangeAsync(ICollection(Of TViewModel), CancellationToken?)
  fullName.vb: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler(Of TViewModel, TIdType).CreateRangeAsync(System.Collections.Generic.ICollection(Of TViewModel), System.Threading.CancellationToken?)
  name.vb: CreateRangeAsync(ICollection(Of TViewModel), CancellationToken?)
  spec.csharp:
  - uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler`2.CreateRangeAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
    name: CreateRangeAsync
    href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudForCollectionRequestHandler_2_CreateRangeAsync_System_Collections_Generic_ICollection__0__System_Nullable_System_Threading_CancellationToken__
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TViewModel
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler`2.CreateRangeAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
    name: CreateRangeAsync
    href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudForCollectionRequestHandler_2_CreateRangeAsync_System_Collections_Generic_ICollection__0__System_Nullable_System_Threading_CancellationToken__
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TViewModel
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.UpdateRangeAsync*
  commentId: Overload:Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.UpdateRangeAsync
  href: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler-4.html#Quickie_Handlers_Crud_Implementation_CrudForCollectionRequestHandler_4_UpdateRangeAsync_System_Collections_Generic_ICollection__0__System_Nullable_System_Threading_CancellationToken__
  name: UpdateRangeAsync
  nameWithType: CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.UpdateRangeAsync
  fullName: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.UpdateRangeAsync
  nameWithType.vb: CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).UpdateRangeAsync
  fullName.vb: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).UpdateRangeAsync
- uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{{TViewModel},{TIdType}}.UpdateRangeAsync(System.Collections.Generic.ICollection{{TViewModel}},System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{`0,`3}.UpdateRangeAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{{TViewModel},{TIdType}}
  definition: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler`2.UpdateRangeAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudForCollectionRequestHandler_2_UpdateRangeAsync_System_Collections_Generic_ICollection__0__System_Nullable_System_Threading_CancellationToken__
  name: UpdateRangeAsync(ICollection<TViewModel>, CancellationToken?)
  nameWithType: ICrudForCollectionRequestHandler<TViewModel, TIdType>.UpdateRangeAsync(ICollection<TViewModel>, CancellationToken?)
  fullName: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler<TViewModel, TIdType>.UpdateRangeAsync(System.Collections.Generic.ICollection<TViewModel>, System.Threading.CancellationToken?)
  nameWithType.vb: ICrudForCollectionRequestHandler(Of TViewModel, TIdType).UpdateRangeAsync(ICollection(Of TViewModel), CancellationToken?)
  fullName.vb: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler(Of TViewModel, TIdType).UpdateRangeAsync(System.Collections.Generic.ICollection(Of TViewModel), System.Threading.CancellationToken?)
  name.vb: UpdateRangeAsync(ICollection(Of TViewModel), CancellationToken?)
  spec.csharp:
  - uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{`0,`3}.UpdateRangeAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
    name: UpdateRangeAsync
    href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudForCollectionRequestHandler_2_UpdateRangeAsync_System_Collections_Generic_ICollection__0__System_Nullable_System_Threading_CancellationToken__
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TViewModel
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{`0,`3}.UpdateRangeAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
    name: UpdateRangeAsync
    href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudForCollectionRequestHandler_2_UpdateRangeAsync_System_Collections_Generic_ICollection__0__System_Nullable_System_Threading_CancellationToken__
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TViewModel
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler`2.UpdateRangeAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler`2.UpdateRangeAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
  isExternal: true
  href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudForCollectionRequestHandler_2_UpdateRangeAsync_System_Collections_Generic_ICollection__0__System_Nullable_System_Threading_CancellationToken__
  name: UpdateRangeAsync(ICollection<TViewModel>, CancellationToken?)
  nameWithType: ICrudForCollectionRequestHandler<TViewModel, TIdType>.UpdateRangeAsync(ICollection<TViewModel>, CancellationToken?)
  fullName: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler<TViewModel, TIdType>.UpdateRangeAsync(System.Collections.Generic.ICollection<TViewModel>, System.Threading.CancellationToken?)
  nameWithType.vb: ICrudForCollectionRequestHandler(Of TViewModel, TIdType).UpdateRangeAsync(ICollection(Of TViewModel), CancellationToken?)
  fullName.vb: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler(Of TViewModel, TIdType).UpdateRangeAsync(System.Collections.Generic.ICollection(Of TViewModel), System.Threading.CancellationToken?)
  name.vb: UpdateRangeAsync(ICollection(Of TViewModel), CancellationToken?)
  spec.csharp:
  - uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler`2.UpdateRangeAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
    name: UpdateRangeAsync
    href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudForCollectionRequestHandler_2_UpdateRangeAsync_System_Collections_Generic_ICollection__0__System_Nullable_System_Threading_CancellationToken__
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TViewModel
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler`2.UpdateRangeAsync(System.Collections.Generic.ICollection{`0},System.Nullable{System.Threading.CancellationToken})
    name: UpdateRangeAsync
    href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudForCollectionRequestHandler_2_UpdateRangeAsync_System_Collections_Generic_ICollection__0__System_Nullable_System_Threading_CancellationToken__
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TViewModel
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.DeleteRangeAsync*
  commentId: Overload:Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.DeleteRangeAsync
  href: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler-4.html#Quickie_Handlers_Crud_Implementation_CrudForCollectionRequestHandler_4_DeleteRangeAsync_System_Collections_Generic_ICollection__3__System_Nullable_System_Threading_CancellationToken__
  name: DeleteRangeAsync
  nameWithType: CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.DeleteRangeAsync
  fullName: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.DeleteRangeAsync
  nameWithType.vb: CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).DeleteRangeAsync
  fullName.vb: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).DeleteRangeAsync
- uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{{TViewModel},{TIdType}}.DeleteRangeAsync(System.Collections.Generic.ICollection{{TIdType}},System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{`0,`3}.DeleteRangeAsync(System.Collections.Generic.ICollection{`3},System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{{TViewModel},{TIdType}}
  definition: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler`2.DeleteRangeAsync(System.Collections.Generic.ICollection{`1},System.Nullable{System.Threading.CancellationToken})
  href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudForCollectionRequestHandler_2_DeleteRangeAsync_System_Collections_Generic_ICollection__1__System_Nullable_System_Threading_CancellationToken__
  name: DeleteRangeAsync(ICollection<TIdType>, CancellationToken?)
  nameWithType: ICrudForCollectionRequestHandler<TViewModel, TIdType>.DeleteRangeAsync(ICollection<TIdType>, CancellationToken?)
  fullName: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler<TViewModel, TIdType>.DeleteRangeAsync(System.Collections.Generic.ICollection<TIdType>, System.Threading.CancellationToken?)
  nameWithType.vb: ICrudForCollectionRequestHandler(Of TViewModel, TIdType).DeleteRangeAsync(ICollection(Of TIdType), CancellationToken?)
  fullName.vb: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler(Of TViewModel, TIdType).DeleteRangeAsync(System.Collections.Generic.ICollection(Of TIdType), System.Threading.CancellationToken?)
  name.vb: DeleteRangeAsync(ICollection(Of TIdType), CancellationToken?)
  spec.csharp:
  - uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{`0,`3}.DeleteRangeAsync(System.Collections.Generic.ICollection{`3},System.Nullable{System.Threading.CancellationToken})
    name: DeleteRangeAsync
    href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudForCollectionRequestHandler_2_DeleteRangeAsync_System_Collections_Generic_ICollection__1__System_Nullable_System_Threading_CancellationToken__
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TIdType
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{`0,`3}.DeleteRangeAsync(System.Collections.Generic.ICollection{`3},System.Nullable{System.Threading.CancellationToken})
    name: DeleteRangeAsync
    href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudForCollectionRequestHandler_2_DeleteRangeAsync_System_Collections_Generic_ICollection__1__System_Nullable_System_Threading_CancellationToken__
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TIdType
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: System.Collections.Generic.ICollection{{TIdType}}
  commentId: T:System.Collections.Generic.ICollection{`2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<TIdType>
  nameWithType: ICollection<TIdType>
  fullName: System.Collections.Generic.ICollection<TIdType>
  nameWithType.vb: ICollection(Of TIdType)
  fullName.vb: System.Collections.Generic.ICollection(Of TIdType)
  name.vb: ICollection(Of TIdType)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TIdType
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TIdType
  - name: )
- uid: System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj}
  commentId: T:System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ResponseObj>
  nameWithType: Task<ResponseObj>
  fullName: System.Threading.Tasks.Task<Quickie.DataObj.ResponseObj>
  nameWithType.vb: Task(Of ResponseObj)
  fullName.vb: System.Threading.Tasks.Task(Of Quickie.DataObj.ResponseObj)
  name.vb: Task(Of ResponseObj)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Quickie.DataObj.ResponseObj
    name: ResponseObj
    href: Quickie.DataObj.ResponseObj.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Quickie.DataObj.ResponseObj
    name: ResponseObj
    href: Quickie.DataObj.ResponseObj.html
  - name: )
- uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler`2.DeleteRangeAsync(System.Collections.Generic.ICollection{`1},System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler`2.DeleteRangeAsync(System.Collections.Generic.ICollection{`1},System.Nullable{System.Threading.CancellationToken})
  isExternal: true
  href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudForCollectionRequestHandler_2_DeleteRangeAsync_System_Collections_Generic_ICollection__1__System_Nullable_System_Threading_CancellationToken__
  name: DeleteRangeAsync(ICollection<TIdType>, CancellationToken?)
  nameWithType: ICrudForCollectionRequestHandler<TViewModel, TIdType>.DeleteRangeAsync(ICollection<TIdType>, CancellationToken?)
  fullName: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler<TViewModel, TIdType>.DeleteRangeAsync(System.Collections.Generic.ICollection<TIdType>, System.Threading.CancellationToken?)
  nameWithType.vb: ICrudForCollectionRequestHandler(Of TViewModel, TIdType).DeleteRangeAsync(ICollection(Of TIdType), CancellationToken?)
  fullName.vb: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler(Of TViewModel, TIdType).DeleteRangeAsync(System.Collections.Generic.ICollection(Of TIdType), System.Threading.CancellationToken?)
  name.vb: DeleteRangeAsync(ICollection(Of TIdType), CancellationToken?)
  spec.csharp:
  - uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler`2.DeleteRangeAsync(System.Collections.Generic.ICollection{`1},System.Nullable{System.Threading.CancellationToken})
    name: DeleteRangeAsync
    href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudForCollectionRequestHandler_2_DeleteRangeAsync_System_Collections_Generic_ICollection__1__System_Nullable_System_Threading_CancellationToken__
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TIdType
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler`2.DeleteRangeAsync(System.Collections.Generic.ICollection{`1},System.Nullable{System.Threading.CancellationToken})
    name: DeleteRangeAsync
    href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudForCollectionRequestHandler_2_DeleteRangeAsync_System_Collections_Generic_ICollection__1__System_Nullable_System_Threading_CancellationToken__
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TIdType
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.GetAllAsync*
  commentId: Overload:Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.GetAllAsync
  href: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler-4.html#Quickie_Handlers_Crud_Implementation_CrudForCollectionRequestHandler_4_GetAllAsync_Quickie_DataObj_RequestForDataObj_System_Nullable_System_Threading_CancellationToken__
  name: GetAllAsync
  nameWithType: CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.GetAllAsync
  fullName: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.GetAllAsync
  nameWithType.vb: CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).GetAllAsync
  fullName.vb: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).GetAllAsync
- uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{{TViewModel},{TIdType}}.GetAllAsync(Quickie.DataObj.RequestForDataObj,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{`0,`3}.GetAllAsync(Quickie.DataObj.RequestForDataObj,System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{{TViewModel},{TIdType}}
  definition: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler`2.GetAllAsync(Quickie.DataObj.RequestForDataObj,System.Nullable{System.Threading.CancellationToken})
  href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudForCollectionRequestHandler_2_GetAllAsync_Quickie_DataObj_RequestForDataObj_System_Nullable_System_Threading_CancellationToken__
  name: GetAllAsync(RequestForDataObj, CancellationToken?)
  nameWithType: ICrudForCollectionRequestHandler<TViewModel, TIdType>.GetAllAsync(RequestForDataObj, CancellationToken?)
  fullName: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler<TViewModel, TIdType>.GetAllAsync(Quickie.DataObj.RequestForDataObj, System.Threading.CancellationToken?)
  nameWithType.vb: ICrudForCollectionRequestHandler(Of TViewModel, TIdType).GetAllAsync(RequestForDataObj, CancellationToken?)
  fullName.vb: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler(Of TViewModel, TIdType).GetAllAsync(Quickie.DataObj.RequestForDataObj, System.Threading.CancellationToken?)
  spec.csharp:
  - uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{`0,`3}.GetAllAsync(Quickie.DataObj.RequestForDataObj,System.Nullable{System.Threading.CancellationToken})
    name: GetAllAsync
    href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudForCollectionRequestHandler_2_GetAllAsync_Quickie_DataObj_RequestForDataObj_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - uid: Quickie.DataObj.RequestForDataObj
    name: RequestForDataObj
    href: Quickie.DataObj.RequestForDataObj.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{`0,`3}.GetAllAsync(Quickie.DataObj.RequestForDataObj,System.Nullable{System.Threading.CancellationToken})
    name: GetAllAsync
    href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudForCollectionRequestHandler_2_GetAllAsync_Quickie_DataObj_RequestForDataObj_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - uid: Quickie.DataObj.RequestForDataObj
    name: RequestForDataObj
    href: Quickie.DataObj.RequestForDataObj.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: Quickie.DataObj.RequestForDataObj
  commentId: T:Quickie.DataObj.RequestForDataObj
  parent: Quickie.DataObj
  href: Quickie.DataObj.RequestForDataObj.html
  name: RequestForDataObj
  nameWithType: RequestForDataObj
  fullName: Quickie.DataObj.RequestForDataObj
- uid: System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj{Quickie.DataObj.PaginatedDataObj{{TViewModel}}}}
  commentId: T:System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj{Quickie.DataObj.PaginatedDataObj{`0}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ResponseObj<PaginatedDataObj<TViewModel>>>
  nameWithType: Task<ResponseObj<PaginatedDataObj<TViewModel>>>
  fullName: System.Threading.Tasks.Task<Quickie.DataObj.ResponseObj<Quickie.DataObj.PaginatedDataObj<TViewModel>>>
  nameWithType.vb: Task(Of ResponseObj(Of PaginatedDataObj(Of TViewModel)))
  fullName.vb: System.Threading.Tasks.Task(Of Quickie.DataObj.ResponseObj(Of Quickie.DataObj.PaginatedDataObj(Of TViewModel)))
  name.vb: Task(Of ResponseObj(Of PaginatedDataObj(Of TViewModel)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Quickie.DataObj.ResponseObj`1
    name: ResponseObj
    href: Quickie.DataObj.ResponseObj-1.html
  - name: <
  - uid: Quickie.DataObj.PaginatedDataObj`1
    name: PaginatedDataObj
    href: Quickie.DataObj.PaginatedDataObj-1.html
  - name: <
  - name: TViewModel
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Quickie.DataObj.ResponseObj`1
    name: ResponseObj
    href: Quickie.DataObj.ResponseObj-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Quickie.DataObj.PaginatedDataObj`1
    name: PaginatedDataObj
    href: Quickie.DataObj.PaginatedDataObj-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TViewModel
  - name: )
  - name: )
  - name: )
- uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler`2.GetAllAsync(Quickie.DataObj.RequestForDataObj,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler`2.GetAllAsync(Quickie.DataObj.RequestForDataObj,System.Nullable{System.Threading.CancellationToken})
  isExternal: true
  href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudForCollectionRequestHandler_2_GetAllAsync_Quickie_DataObj_RequestForDataObj_System_Nullable_System_Threading_CancellationToken__
  name: GetAllAsync(RequestForDataObj, CancellationToken?)
  nameWithType: ICrudForCollectionRequestHandler<TViewModel, TIdType>.GetAllAsync(RequestForDataObj, CancellationToken?)
  fullName: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler<TViewModel, TIdType>.GetAllAsync(Quickie.DataObj.RequestForDataObj, System.Threading.CancellationToken?)
  nameWithType.vb: ICrudForCollectionRequestHandler(Of TViewModel, TIdType).GetAllAsync(RequestForDataObj, CancellationToken?)
  fullName.vb: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler(Of TViewModel, TIdType).GetAllAsync(Quickie.DataObj.RequestForDataObj, System.Threading.CancellationToken?)
  spec.csharp:
  - uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler`2.GetAllAsync(Quickie.DataObj.RequestForDataObj,System.Nullable{System.Threading.CancellationToken})
    name: GetAllAsync
    href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudForCollectionRequestHandler_2_GetAllAsync_Quickie_DataObj_RequestForDataObj_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - uid: Quickie.DataObj.RequestForDataObj
    name: RequestForDataObj
    href: Quickie.DataObj.RequestForDataObj.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler`2.GetAllAsync(Quickie.DataObj.RequestForDataObj,System.Nullable{System.Threading.CancellationToken})
    name: GetAllAsync
    href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudForCollectionRequestHandler_2_GetAllAsync_Quickie_DataObj_RequestForDataObj_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - uid: Quickie.DataObj.RequestForDataObj
    name: RequestForDataObj
    href: Quickie.DataObj.RequestForDataObj.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: Quickie.DataObj
  commentId: N:Quickie.DataObj
  href: Quickie.html
  name: Quickie.DataObj
  nameWithType: Quickie.DataObj
  fullName: Quickie.DataObj
  spec.csharp:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.DataObj
    name: DataObj
    href: Quickie.DataObj.html
  spec.vb:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.DataObj
    name: DataObj
    href: Quickie.DataObj.html
- uid: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.CountAsync*
  commentId: Overload:Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.CountAsync
  href: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler-4.html#Quickie_Handlers_Crud_Implementation_CrudForCollectionRequestHandler_4_CountAsync_System_Nullable_System_Threading_CancellationToken__
  name: CountAsync
  nameWithType: CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.CountAsync
  fullName: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.CountAsync
  nameWithType.vb: CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).CountAsync
  fullName.vb: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).CountAsync
- uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{{TViewModel},{TIdType}}.CountAsync(System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{`0,`3}.CountAsync(System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{{TViewModel},{TIdType}}
  definition: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler`2.CountAsync(System.Nullable{System.Threading.CancellationToken})
  href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudForCollectionRequestHandler_2_CountAsync_System_Nullable_System_Threading_CancellationToken__
  name: CountAsync(CancellationToken?)
  nameWithType: ICrudForCollectionRequestHandler<TViewModel, TIdType>.CountAsync(CancellationToken?)
  fullName: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler<TViewModel, TIdType>.CountAsync(System.Threading.CancellationToken?)
  nameWithType.vb: ICrudForCollectionRequestHandler(Of TViewModel, TIdType).CountAsync(CancellationToken?)
  fullName.vb: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler(Of TViewModel, TIdType).CountAsync(System.Threading.CancellationToken?)
  spec.csharp:
  - uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{`0,`3}.CountAsync(System.Nullable{System.Threading.CancellationToken})
    name: CountAsync
    href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudForCollectionRequestHandler_2_CountAsync_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler{`0,`3}.CountAsync(System.Nullable{System.Threading.CancellationToken})
    name: CountAsync
    href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudForCollectionRequestHandler_2_CountAsync_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj{System.Int32}}
  commentId: T:System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj{System.Int32}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ResponseObj<int>>
  nameWithType: Task<ResponseObj<int>>
  fullName: System.Threading.Tasks.Task<Quickie.DataObj.ResponseObj<int>>
  nameWithType.vb: Task(Of ResponseObj(Of Integer))
  fullName.vb: System.Threading.Tasks.Task(Of Quickie.DataObj.ResponseObj(Of Integer))
  name.vb: Task(Of ResponseObj(Of Integer))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Quickie.DataObj.ResponseObj`1
    name: ResponseObj
    href: Quickie.DataObj.ResponseObj-1.html
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Quickie.DataObj.ResponseObj`1
    name: ResponseObj
    href: Quickie.DataObj.ResponseObj-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: )
- uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler`2.CountAsync(System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler`2.CountAsync(System.Nullable{System.Threading.CancellationToken})
  isExternal: true
  href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudForCollectionRequestHandler_2_CountAsync_System_Nullable_System_Threading_CancellationToken__
  name: CountAsync(CancellationToken?)
  nameWithType: ICrudForCollectionRequestHandler<TViewModel, TIdType>.CountAsync(CancellationToken?)
  fullName: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler<TViewModel, TIdType>.CountAsync(System.Threading.CancellationToken?)
  nameWithType.vb: ICrudForCollectionRequestHandler(Of TViewModel, TIdType).CountAsync(CancellationToken?)
  fullName.vb: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler(Of TViewModel, TIdType).CountAsync(System.Threading.CancellationToken?)
  spec.csharp:
  - uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler`2.CountAsync(System.Nullable{System.Threading.CancellationToken})
    name: CountAsync
    href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudForCollectionRequestHandler_2_CountAsync_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler`2.CountAsync(System.Nullable{System.Threading.CancellationToken})
    name: CountAsync
    href: Quickie.Handlers.Crud.Definition.ICrudForCollectionRequestHandler-2.html#Quickie_Handlers_Crud_Definition_ICrudForCollectionRequestHandler_2_CountAsync_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.MapToCollectionOfDto*
  commentId: Overload:Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.MapToCollectionOfDto
  href: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler-4.html#Quickie_Handlers_Crud_Implementation_CrudForCollectionRequestHandler_4_MapToCollectionOfDto_System_Collections_Generic_ICollection__1__
  name: MapToCollectionOfDto
  nameWithType: CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToCollectionOfDto
  fullName: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToCollectionOfDto
  nameWithType.vb: CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToCollectionOfDto
  fullName.vb: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToCollectionOfDto
- uid: System.Collections.Generic.ICollection{{TEntity}}
  commentId: T:System.Collections.Generic.ICollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<TEntity>
  nameWithType: ICollection<TEntity>
  fullName: System.Collections.Generic.ICollection<TEntity>
  nameWithType.vb: ICollection(Of TEntity)
  fullName.vb: System.Collections.Generic.ICollection(Of TEntity)
  name.vb: ICollection(Of TEntity)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.MapToCollectionOfEntity*
  commentId: Overload:Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler`4.MapToCollectionOfEntity
  href: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler-4.html#Quickie_Handlers_Crud_Implementation_CrudForCollectionRequestHandler_4_MapToCollectionOfEntity_System_Collections_Generic_ICollection__0__
  name: MapToCollectionOfEntity
  nameWithType: CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToCollectionOfEntity
  fullName: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler<TViewModel, TEntity, TDataHandler, TIdType>.MapToCollectionOfEntity
  nameWithType.vb: CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToCollectionOfEntity
  fullName.vb: Quickie.Handlers.Crud.Implementation.CrudForCollectionRequestHandler(Of TViewModel, TEntity, TDataHandler, TIdType).MapToCollectionOfEntity
