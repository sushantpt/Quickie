### YamlMime:ManagedReference
items:
- uid: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3
  commentId: T:Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3
  id: CrudDataHandler`3
  parent: Quickie.DataHandlers.Crud.Implementation
  children:
  - Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3.#ctor(`1)
  - Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3.CreateAsync(`0,System.Nullable{System.Threading.CancellationToken})
  - Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3.DeleteAsync(`2,System.Nullable{System.Threading.CancellationToken})
  - Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3.GetByIdAsync(`2,System.Nullable{System.Threading.CancellationToken})
  - Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3.UpdateAsync(`2,`0,System.Nullable{System.Threading.CancellationToken})
  langs:
  - csharp
  - vb
  name: CrudDataHandler<TEntity, TDbContext, TIdType>
  nameWithType: CrudDataHandler<TEntity, TDbContext, TIdType>
  fullName: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler<TEntity, TDbContext, TIdType>
  type: Class
  source:
    remote:
      path: src/Quickie/DataHandlers/Crud/Implementation/CrudDataHandler.cs
      branch: f-minimalapi
      repo: https://github.com/sushantpt/Quickie.git
    id: CrudDataHandler
    path: ../src/Quickie/DataHandlers/Crud/Implementation/CrudDataHandler.cs
    startLine: 9
  assemblies:
  - Quickie
  namespace: Quickie.DataHandlers.Crud.Implementation
  summary: Abstract class serving as CRUD data handler (Repository layer).
  example: []
  syntax:
    content: 'public abstract class CrudDataHandler<TEntity, TDbContext, TIdType> : ICrudDataHandler<TEntity, TIdType> where TEntity : CrudEntity where TDbContext : DbContext where TIdType : IComparable'
    typeParameters:
    - id: TEntity
      description: Entity
    - id: TDbContext
      description: Db context
    - id: TIdType
      description: 'Type of identifier. eg: int, string, ...'
    content.vb: Public MustInherit Class CrudDataHandler(Of TEntity As CrudEntity, TDbContext As DbContext, TIdType As IComparable) Implements ICrudDataHandler(Of TEntity, TIdType)
  inheritance:
  - System.Object
  derivedClasses:
  - specification.Helpers.DataHandlers.CrudDataHandlerConcrete
  implements:
  - Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{{TEntity},{TIdType}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: CrudDataHandler(Of TEntity, TDbContext, TIdType)
  fullName.vb: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler(Of TEntity, TDbContext, TIdType)
  name.vb: CrudDataHandler(Of TEntity, TDbContext, TIdType)
- uid: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3.#ctor(`1)
  commentId: M:Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3.#ctor(`1)
  id: '#ctor(`1)'
  parent: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3
  langs:
  - csharp
  - vb
  name: CrudDataHandler(TDbContext)
  nameWithType: CrudDataHandler<TEntity, TDbContext, TIdType>.CrudDataHandler(TDbContext)
  fullName: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler<TEntity, TDbContext, TIdType>.CrudDataHandler(TDbContext)
  type: Constructor
  source:
    remote:
      path: src/Quickie/DataHandlers/Crud/Implementation/CrudDataHandler.cs
      branch: f-minimalapi
      repo: https://github.com/sushantpt/Quickie.git
    id: .ctor
    path: ../src/Quickie/DataHandlers/Crud/Implementation/CrudDataHandler.cs
    startLine: 9
  assemblies:
  - Quickie
  namespace: Quickie.DataHandlers.Crud.Implementation
  summary: Abstract class serving as CRUD data handler (Repository layer).
  example: []
  syntax:
    content: protected CrudDataHandler(TDbContext dbContext)
    parameters:
    - id: dbContext
      type: '{TDbContext}'
      description: Db context
    content.vb: Protected Sub New(dbContext As TDbContext)
  overload: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3.#ctor*
  nameWithType.vb: CrudDataHandler(Of TEntity, TDbContext, TIdType).New(TDbContext)
  fullName.vb: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler(Of TEntity, TDbContext, TIdType).New(TDbContext)
  name.vb: New(TDbContext)
- uid: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3.CreateAsync(`0,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3.CreateAsync(`0,System.Nullable{System.Threading.CancellationToken})
  id: CreateAsync(`0,System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3
  langs:
  - csharp
  - vb
  name: CreateAsync(TEntity, CancellationToken?)
  nameWithType: CrudDataHandler<TEntity, TDbContext, TIdType>.CreateAsync(TEntity, CancellationToken?)
  fullName: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler<TEntity, TDbContext, TIdType>.CreateAsync(TEntity, System.Threading.CancellationToken?)
  type: Method
  source:
    remote:
      path: src/Quickie/DataHandlers/Crud/Implementation/CrudDataHandler.cs
      branch: f-minimalapi
      repo: https://github.com/sushantpt/Quickie.git
    id: CreateAsync
    path: ../src/Quickie/DataHandlers/Crud/Implementation/CrudDataHandler.cs
    startLine: 19
  assemblies:
  - Quickie
  namespace: Quickie.DataHandlers.Crud.Implementation
  summary: Data create request.
  example: []
  syntax:
    content: public Task<ResponseObj<TEntity>> CreateAsync(TEntity request, CancellationToken? cancellationToken = null)
    parameters:
    - id: request
      type: '{TEntity}'
      description: Data requested to create.
    - id: cancellationToken
      type: System.Nullable{System.Threading.CancellationToken}
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj{{TEntity}}}
      description: ''
    content.vb: Public Function CreateAsync(request As TEntity, cancellationToken As CancellationToken? = Nothing) As Task(Of ResponseObj(Of TEntity))
  overload: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3.CreateAsync*
  implements:
  - Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{{TEntity},{TIdType}}.CreateAsync({TEntity},System.Nullable{System.Threading.CancellationToken})
  nameWithType.vb: CrudDataHandler(Of TEntity, TDbContext, TIdType).CreateAsync(TEntity, CancellationToken?)
  fullName.vb: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler(Of TEntity, TDbContext, TIdType).CreateAsync(TEntity, System.Threading.CancellationToken?)
- uid: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3.GetByIdAsync(`2,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3.GetByIdAsync(`2,System.Nullable{System.Threading.CancellationToken})
  id: GetByIdAsync(`2,System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3
  langs:
  - csharp
  - vb
  name: GetByIdAsync(TIdType, CancellationToken?)
  nameWithType: CrudDataHandler<TEntity, TDbContext, TIdType>.GetByIdAsync(TIdType, CancellationToken?)
  fullName: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler<TEntity, TDbContext, TIdType>.GetByIdAsync(TIdType, System.Threading.CancellationToken?)
  type: Method
  source:
    remote:
      path: src/Quickie/DataHandlers/Crud/Implementation/CrudDataHandler.cs
      branch: f-minimalapi
      repo: https://github.com/sushantpt/Quickie.git
    id: GetByIdAsync
    path: ../src/Quickie/DataHandlers/Crud/Implementation/CrudDataHandler.cs
    startLine: 52
  assemblies:
  - Quickie
  namespace: Quickie.DataHandlers.Crud.Implementation
  summary: Get data by providing an identifier
  example: []
  syntax:
    content: public Task<ResponseObj<TEntity>> GetByIdAsync(TIdType id, CancellationToken? cancellationToken = null)
    parameters:
    - id: id
      type: '{TIdType}'
      description: Identifier
    - id: cancellationToken
      type: System.Nullable{System.Threading.CancellationToken}
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj{{TEntity}}}
      description: ''
    content.vb: Public Function GetByIdAsync(id As TIdType, cancellationToken As CancellationToken? = Nothing) As Task(Of ResponseObj(Of TEntity))
  overload: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3.GetByIdAsync*
  implements:
  - Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{{TEntity},{TIdType}}.GetByIdAsync({TIdType},System.Nullable{System.Threading.CancellationToken})
  nameWithType.vb: CrudDataHandler(Of TEntity, TDbContext, TIdType).GetByIdAsync(TIdType, CancellationToken?)
  fullName.vb: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler(Of TEntity, TDbContext, TIdType).GetByIdAsync(TIdType, System.Threading.CancellationToken?)
- uid: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3.UpdateAsync(`2,`0,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3.UpdateAsync(`2,`0,System.Nullable{System.Threading.CancellationToken})
  id: UpdateAsync(`2,`0,System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3
  langs:
  - csharp
  - vb
  name: UpdateAsync(TIdType, TEntity, CancellationToken?)
  nameWithType: CrudDataHandler<TEntity, TDbContext, TIdType>.UpdateAsync(TIdType, TEntity, CancellationToken?)
  fullName: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler<TEntity, TDbContext, TIdType>.UpdateAsync(TIdType, TEntity, System.Threading.CancellationToken?)
  type: Method
  source:
    remote:
      path: src/Quickie/DataHandlers/Crud/Implementation/CrudDataHandler.cs
      branch: f-minimalapi
      repo: https://github.com/sushantpt/Quickie.git
    id: UpdateAsync
    path: ../src/Quickie/DataHandlers/Crud/Implementation/CrudDataHandler.cs
    startLine: 85
  assemblies:
  - Quickie
  namespace: Quickie.DataHandlers.Crud.Implementation
  summary: Update request.
  example: []
  syntax:
    content: public Task<ResponseObj<TEntity>> UpdateAsync(TIdType id, TEntity request, CancellationToken? cancellationToken = null)
    parameters:
    - id: id
      type: '{TIdType}'
      description: Identifier
    - id: request
      type: '{TEntity}'
      description: Requested data identifier.
    - id: cancellationToken
      type: System.Nullable{System.Threading.CancellationToken}
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj{{TEntity}}}
      description: ''
    content.vb: Public Function UpdateAsync(id As TIdType, request As TEntity, cancellationToken As CancellationToken? = Nothing) As Task(Of ResponseObj(Of TEntity))
  overload: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3.UpdateAsync*
  implements:
  - Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{{TEntity},{TIdType}}.UpdateAsync({TIdType},{TEntity},System.Nullable{System.Threading.CancellationToken})
  nameWithType.vb: CrudDataHandler(Of TEntity, TDbContext, TIdType).UpdateAsync(TIdType, TEntity, CancellationToken?)
  fullName.vb: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler(Of TEntity, TDbContext, TIdType).UpdateAsync(TIdType, TEntity, System.Threading.CancellationToken?)
- uid: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3.DeleteAsync(`2,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3.DeleteAsync(`2,System.Nullable{System.Threading.CancellationToken})
  id: DeleteAsync(`2,System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3
  langs:
  - csharp
  - vb
  name: DeleteAsync(TIdType, CancellationToken?)
  nameWithType: CrudDataHandler<TEntity, TDbContext, TIdType>.DeleteAsync(TIdType, CancellationToken?)
  fullName: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler<TEntity, TDbContext, TIdType>.DeleteAsync(TIdType, System.Threading.CancellationToken?)
  type: Method
  source:
    remote:
      path: src/Quickie/DataHandlers/Crud/Implementation/CrudDataHandler.cs
      branch: f-minimalapi
      repo: https://github.com/sushantpt/Quickie.git
    id: DeleteAsync
    path: ../src/Quickie/DataHandlers/Crud/Implementation/CrudDataHandler.cs
    startLine: 151
  assemblies:
  - Quickie
  namespace: Quickie.DataHandlers.Crud.Implementation
  summary: Delete request.
  example: []
  syntax:
    content: public Task<ResponseObj> DeleteAsync(TIdType id, CancellationToken? cancellationToken = null)
    parameters:
    - id: id
      type: '{TIdType}'
      description: Identifier of the data to remove
    - id: cancellationToken
      type: System.Nullable{System.Threading.CancellationToken}
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj}
      description: ''
    content.vb: Public Function DeleteAsync(id As TIdType, cancellationToken As CancellationToken? = Nothing) As Task(Of ResponseObj)
  overload: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3.DeleteAsync*
  implements:
  - Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{{TEntity},{TIdType}}.DeleteAsync({TIdType},System.Nullable{System.Threading.CancellationToken})
  nameWithType.vb: CrudDataHandler(Of TEntity, TDbContext, TIdType).DeleteAsync(TIdType, CancellationToken?)
  fullName.vb: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler(Of TEntity, TDbContext, TIdType).DeleteAsync(TIdType, System.Threading.CancellationToken?)
references:
- uid: Quickie.DataHandlers.Crud.Implementation
  commentId: N:Quickie.DataHandlers.Crud.Implementation
  href: Quickie.html
  name: Quickie.DataHandlers.Crud.Implementation
  nameWithType: Quickie.DataHandlers.Crud.Implementation
  fullName: Quickie.DataHandlers.Crud.Implementation
  spec.csharp:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.DataHandlers
    name: DataHandlers
    href: Quickie.DataHandlers.html
  - name: .
  - uid: Quickie.DataHandlers.Crud
    name: Crud
    href: Quickie.DataHandlers.Crud.html
  - name: .
  - uid: Quickie.DataHandlers.Crud.Implementation
    name: Implementation
    href: Quickie.DataHandlers.Crud.Implementation.html
  spec.vb:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.DataHandlers
    name: DataHandlers
    href: Quickie.DataHandlers.html
  - name: .
  - uid: Quickie.DataHandlers.Crud
    name: Crud
    href: Quickie.DataHandlers.Crud.html
  - name: .
  - uid: Quickie.DataHandlers.Crud.Implementation
    name: Implementation
    href: Quickie.DataHandlers.Crud.Implementation.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{{TEntity},{TIdType}}
  commentId: T:Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{`0,`2}
  parent: Quickie.DataHandlers.Crud.Definition
  definition: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2
  href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html
  name: ICrudDataHandler<TEntity, TIdType>
  nameWithType: ICrudDataHandler<TEntity, TIdType>
  fullName: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler<TEntity, TIdType>
  nameWithType.vb: ICrudDataHandler(Of TEntity, TIdType)
  fullName.vb: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler(Of TEntity, TIdType)
  name.vb: ICrudDataHandler(Of TEntity, TIdType)
  spec.csharp:
  - uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2
    name: ICrudDataHandler
    href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TIdType
  - name: '>'
  spec.vb:
  - uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2
    name: ICrudDataHandler
    href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TIdType
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2
  commentId: T:Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2
  href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html
  name: ICrudDataHandler<TEntity, TIdType>
  nameWithType: ICrudDataHandler<TEntity, TIdType>
  fullName: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler<TEntity, TIdType>
  nameWithType.vb: ICrudDataHandler(Of TEntity, TIdType)
  fullName.vb: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler(Of TEntity, TIdType)
  name.vb: ICrudDataHandler(Of TEntity, TIdType)
  spec.csharp:
  - uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2
    name: ICrudDataHandler
    href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TIdType
  - name: '>'
  spec.vb:
  - uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2
    name: ICrudDataHandler
    href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TIdType
  - name: )
- uid: Quickie.DataHandlers.Crud.Definition
  commentId: N:Quickie.DataHandlers.Crud.Definition
  href: Quickie.html
  name: Quickie.DataHandlers.Crud.Definition
  nameWithType: Quickie.DataHandlers.Crud.Definition
  fullName: Quickie.DataHandlers.Crud.Definition
  spec.csharp:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.DataHandlers
    name: DataHandlers
    href: Quickie.DataHandlers.html
  - name: .
  - uid: Quickie.DataHandlers.Crud
    name: Crud
    href: Quickie.DataHandlers.Crud.html
  - name: .
  - uid: Quickie.DataHandlers.Crud.Definition
    name: Definition
    href: Quickie.DataHandlers.Crud.Definition.html
  spec.vb:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.DataHandlers
    name: DataHandlers
    href: Quickie.DataHandlers.html
  - name: .
  - uid: Quickie.DataHandlers.Crud
    name: Crud
    href: Quickie.DataHandlers.Crud.html
  - name: .
  - uid: Quickie.DataHandlers.Crud.Definition
    name: Definition
    href: Quickie.DataHandlers.Crud.Definition.html
- uid: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3.#ctor*
  commentId: Overload:Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3.#ctor
  href: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler-3.html#Quickie_DataHandlers_Crud_Implementation_CrudDataHandler_3__ctor__1_
  name: CrudDataHandler
  nameWithType: CrudDataHandler<TEntity, TDbContext, TIdType>.CrudDataHandler
  fullName: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler<TEntity, TDbContext, TIdType>.CrudDataHandler
  nameWithType.vb: CrudDataHandler(Of TEntity, TDbContext, TIdType).New
  fullName.vb: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler(Of TEntity, TDbContext, TIdType).New
  name.vb: New
- uid: '{TDbContext}'
  commentId: '!:TDbContext'
  definition: TDbContext
  name: TDbContext
  nameWithType: TDbContext
  fullName: TDbContext
- uid: TDbContext
  name: TDbContext
  nameWithType: TDbContext
  fullName: TDbContext
- uid: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3.CreateAsync*
  commentId: Overload:Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3.CreateAsync
  href: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler-3.html#Quickie_DataHandlers_Crud_Implementation_CrudDataHandler_3_CreateAsync__0_System_Nullable_System_Threading_CancellationToken__
  name: CreateAsync
  nameWithType: CrudDataHandler<TEntity, TDbContext, TIdType>.CreateAsync
  fullName: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler<TEntity, TDbContext, TIdType>.CreateAsync
  nameWithType.vb: CrudDataHandler(Of TEntity, TDbContext, TIdType).CreateAsync
  fullName.vb: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler(Of TEntity, TDbContext, TIdType).CreateAsync
- uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{{TEntity},{TIdType}}.CreateAsync({TEntity},System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{`0,`2}.CreateAsync(`0,System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{{TEntity},{TIdType}}
  definition: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2.CreateAsync(`0,System.Nullable{System.Threading.CancellationToken})
  href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html#Quickie_DataHandlers_Crud_Definition_ICrudDataHandler_2_CreateAsync__0_System_Nullable_System_Threading_CancellationToken__
  name: CreateAsync(TEntity, CancellationToken?)
  nameWithType: ICrudDataHandler<TEntity, TIdType>.CreateAsync(TEntity, CancellationToken?)
  fullName: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler<TEntity, TIdType>.CreateAsync(TEntity, System.Threading.CancellationToken?)
  nameWithType.vb: ICrudDataHandler(Of TEntity, TIdType).CreateAsync(TEntity, CancellationToken?)
  fullName.vb: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler(Of TEntity, TIdType).CreateAsync(TEntity, System.Threading.CancellationToken?)
  spec.csharp:
  - uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{`0,`2}.CreateAsync(`0,System.Nullable{System.Threading.CancellationToken})
    name: CreateAsync
    href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html#Quickie_DataHandlers_Crud_Definition_ICrudDataHandler_2_CreateAsync__0_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{`0,`2}.CreateAsync(`0,System.Nullable{System.Threading.CancellationToken})
    name: CreateAsync
    href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html#Quickie_DataHandlers_Crud_Definition_ICrudDataHandler_2_CreateAsync__0_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: '{TEntity}'
  commentId: '!:TEntity'
  definition: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: System.Nullable{System.Threading.CancellationToken}
  commentId: T:System.Nullable{System.Threading.CancellationToken}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken?
  nameWithType: CancellationToken?
  fullName: System.Threading.CancellationToken?
  spec.csharp:
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  spec.vb:
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
- uid: System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj{{TEntity}}}
  commentId: T:System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj{`0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ResponseObj<TEntity>>
  nameWithType: Task<ResponseObj<TEntity>>
  fullName: System.Threading.Tasks.Task<Quickie.DataObj.ResponseObj<TEntity>>
  nameWithType.vb: Task(Of ResponseObj(Of TEntity))
  fullName.vb: System.Threading.Tasks.Task(Of Quickie.DataObj.ResponseObj(Of TEntity))
  name.vb: Task(Of ResponseObj(Of TEntity))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Quickie.DataObj.ResponseObj`1
    name: ResponseObj
    href: Quickie.DataObj.ResponseObj-1.html
  - name: <
  - name: TEntity
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Quickie.DataObj.ResponseObj`1
    name: ResponseObj
    href: Quickie.DataObj.ResponseObj-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: )
- uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2.CreateAsync(`0,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2.CreateAsync(`0,System.Nullable{System.Threading.CancellationToken})
  isExternal: true
  href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html#Quickie_DataHandlers_Crud_Definition_ICrudDataHandler_2_CreateAsync__0_System_Nullable_System_Threading_CancellationToken__
  name: CreateAsync(TEntity, CancellationToken?)
  nameWithType: ICrudDataHandler<TEntity, TIdType>.CreateAsync(TEntity, CancellationToken?)
  fullName: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler<TEntity, TIdType>.CreateAsync(TEntity, System.Threading.CancellationToken?)
  nameWithType.vb: ICrudDataHandler(Of TEntity, TIdType).CreateAsync(TEntity, CancellationToken?)
  fullName.vb: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler(Of TEntity, TIdType).CreateAsync(TEntity, System.Threading.CancellationToken?)
  spec.csharp:
  - uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2.CreateAsync(`0,System.Nullable{System.Threading.CancellationToken})
    name: CreateAsync
    href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html#Quickie_DataHandlers_Crud_Definition_ICrudDataHandler_2_CreateAsync__0_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2.CreateAsync(`0,System.Nullable{System.Threading.CancellationToken})
    name: CreateAsync
    href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html#Quickie_DataHandlers_Crud_Definition_ICrudDataHandler_2_CreateAsync__0_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3.GetByIdAsync*
  commentId: Overload:Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3.GetByIdAsync
  href: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler-3.html#Quickie_DataHandlers_Crud_Implementation_CrudDataHandler_3_GetByIdAsync__2_System_Nullable_System_Threading_CancellationToken__
  name: GetByIdAsync
  nameWithType: CrudDataHandler<TEntity, TDbContext, TIdType>.GetByIdAsync
  fullName: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler<TEntity, TDbContext, TIdType>.GetByIdAsync
  nameWithType.vb: CrudDataHandler(Of TEntity, TDbContext, TIdType).GetByIdAsync
  fullName.vb: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler(Of TEntity, TDbContext, TIdType).GetByIdAsync
- uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{{TEntity},{TIdType}}.GetByIdAsync({TIdType},System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{`0,`2}.GetByIdAsync(`2,System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{{TEntity},{TIdType}}
  definition: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2.GetByIdAsync(`1,System.Nullable{System.Threading.CancellationToken})
  href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html#Quickie_DataHandlers_Crud_Definition_ICrudDataHandler_2_GetByIdAsync__1_System_Nullable_System_Threading_CancellationToken__
  name: GetByIdAsync(TIdType, CancellationToken?)
  nameWithType: ICrudDataHandler<TEntity, TIdType>.GetByIdAsync(TIdType, CancellationToken?)
  fullName: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler<TEntity, TIdType>.GetByIdAsync(TIdType, System.Threading.CancellationToken?)
  nameWithType.vb: ICrudDataHandler(Of TEntity, TIdType).GetByIdAsync(TIdType, CancellationToken?)
  fullName.vb: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler(Of TEntity, TIdType).GetByIdAsync(TIdType, System.Threading.CancellationToken?)
  spec.csharp:
  - uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{`0,`2}.GetByIdAsync(`2,System.Nullable{System.Threading.CancellationToken})
    name: GetByIdAsync
    href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html#Quickie_DataHandlers_Crud_Definition_ICrudDataHandler_2_GetByIdAsync__1_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TIdType
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{`0,`2}.GetByIdAsync(`2,System.Nullable{System.Threading.CancellationToken})
    name: GetByIdAsync
    href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html#Quickie_DataHandlers_Crud_Definition_ICrudDataHandler_2_GetByIdAsync__1_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TIdType
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: '{TIdType}'
  commentId: '!:TIdType'
  definition: TIdType
  name: TIdType
  nameWithType: TIdType
  fullName: TIdType
- uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2.GetByIdAsync(`1,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2.GetByIdAsync(`1,System.Nullable{System.Threading.CancellationToken})
  isExternal: true
  href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html#Quickie_DataHandlers_Crud_Definition_ICrudDataHandler_2_GetByIdAsync__1_System_Nullable_System_Threading_CancellationToken__
  name: GetByIdAsync(TIdType, CancellationToken?)
  nameWithType: ICrudDataHandler<TEntity, TIdType>.GetByIdAsync(TIdType, CancellationToken?)
  fullName: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler<TEntity, TIdType>.GetByIdAsync(TIdType, System.Threading.CancellationToken?)
  nameWithType.vb: ICrudDataHandler(Of TEntity, TIdType).GetByIdAsync(TIdType, CancellationToken?)
  fullName.vb: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler(Of TEntity, TIdType).GetByIdAsync(TIdType, System.Threading.CancellationToken?)
  spec.csharp:
  - uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2.GetByIdAsync(`1,System.Nullable{System.Threading.CancellationToken})
    name: GetByIdAsync
    href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html#Quickie_DataHandlers_Crud_Definition_ICrudDataHandler_2_GetByIdAsync__1_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TIdType
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2.GetByIdAsync(`1,System.Nullable{System.Threading.CancellationToken})
    name: GetByIdAsync
    href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html#Quickie_DataHandlers_Crud_Definition_ICrudDataHandler_2_GetByIdAsync__1_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TIdType
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: TIdType
  name: TIdType
  nameWithType: TIdType
  fullName: TIdType
- uid: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3.UpdateAsync*
  commentId: Overload:Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3.UpdateAsync
  href: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler-3.html#Quickie_DataHandlers_Crud_Implementation_CrudDataHandler_3_UpdateAsync__2__0_System_Nullable_System_Threading_CancellationToken__
  name: UpdateAsync
  nameWithType: CrudDataHandler<TEntity, TDbContext, TIdType>.UpdateAsync
  fullName: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler<TEntity, TDbContext, TIdType>.UpdateAsync
  nameWithType.vb: CrudDataHandler(Of TEntity, TDbContext, TIdType).UpdateAsync
  fullName.vb: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler(Of TEntity, TDbContext, TIdType).UpdateAsync
- uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{{TEntity},{TIdType}}.UpdateAsync({TIdType},{TEntity},System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{`0,`2}.UpdateAsync(`2,`0,System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{{TEntity},{TIdType}}
  definition: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2.UpdateAsync(`1,`0,System.Nullable{System.Threading.CancellationToken})
  href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html#Quickie_DataHandlers_Crud_Definition_ICrudDataHandler_2_UpdateAsync__1__0_System_Nullable_System_Threading_CancellationToken__
  name: UpdateAsync(TIdType, TEntity, CancellationToken?)
  nameWithType: ICrudDataHandler<TEntity, TIdType>.UpdateAsync(TIdType, TEntity, CancellationToken?)
  fullName: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler<TEntity, TIdType>.UpdateAsync(TIdType, TEntity, System.Threading.CancellationToken?)
  nameWithType.vb: ICrudDataHandler(Of TEntity, TIdType).UpdateAsync(TIdType, TEntity, CancellationToken?)
  fullName.vb: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler(Of TEntity, TIdType).UpdateAsync(TIdType, TEntity, System.Threading.CancellationToken?)
  spec.csharp:
  - uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{`0,`2}.UpdateAsync(`2,`0,System.Nullable{System.Threading.CancellationToken})
    name: UpdateAsync
    href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html#Quickie_DataHandlers_Crud_Definition_ICrudDataHandler_2_UpdateAsync__1__0_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TIdType
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{`0,`2}.UpdateAsync(`2,`0,System.Nullable{System.Threading.CancellationToken})
    name: UpdateAsync
    href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html#Quickie_DataHandlers_Crud_Definition_ICrudDataHandler_2_UpdateAsync__1__0_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TIdType
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2.UpdateAsync(`1,`0,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2.UpdateAsync(`1,`0,System.Nullable{System.Threading.CancellationToken})
  isExternal: true
  href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html#Quickie_DataHandlers_Crud_Definition_ICrudDataHandler_2_UpdateAsync__1__0_System_Nullable_System_Threading_CancellationToken__
  name: UpdateAsync(TIdType, TEntity, CancellationToken?)
  nameWithType: ICrudDataHandler<TEntity, TIdType>.UpdateAsync(TIdType, TEntity, CancellationToken?)
  fullName: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler<TEntity, TIdType>.UpdateAsync(TIdType, TEntity, System.Threading.CancellationToken?)
  nameWithType.vb: ICrudDataHandler(Of TEntity, TIdType).UpdateAsync(TIdType, TEntity, CancellationToken?)
  fullName.vb: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler(Of TEntity, TIdType).UpdateAsync(TIdType, TEntity, System.Threading.CancellationToken?)
  spec.csharp:
  - uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2.UpdateAsync(`1,`0,System.Nullable{System.Threading.CancellationToken})
    name: UpdateAsync
    href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html#Quickie_DataHandlers_Crud_Definition_ICrudDataHandler_2_UpdateAsync__1__0_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TIdType
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2.UpdateAsync(`1,`0,System.Nullable{System.Threading.CancellationToken})
    name: UpdateAsync
    href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html#Quickie_DataHandlers_Crud_Definition_ICrudDataHandler_2_UpdateAsync__1__0_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TIdType
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3.DeleteAsync*
  commentId: Overload:Quickie.DataHandlers.Crud.Implementation.CrudDataHandler`3.DeleteAsync
  href: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler-3.html#Quickie_DataHandlers_Crud_Implementation_CrudDataHandler_3_DeleteAsync__2_System_Nullable_System_Threading_CancellationToken__
  name: DeleteAsync
  nameWithType: CrudDataHandler<TEntity, TDbContext, TIdType>.DeleteAsync
  fullName: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler<TEntity, TDbContext, TIdType>.DeleteAsync
  nameWithType.vb: CrudDataHandler(Of TEntity, TDbContext, TIdType).DeleteAsync
  fullName.vb: Quickie.DataHandlers.Crud.Implementation.CrudDataHandler(Of TEntity, TDbContext, TIdType).DeleteAsync
- uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{{TEntity},{TIdType}}.DeleteAsync({TIdType},System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{`0,`2}.DeleteAsync(`2,System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{{TEntity},{TIdType}}
  definition: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2.DeleteAsync(`1,System.Nullable{System.Threading.CancellationToken})
  href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html#Quickie_DataHandlers_Crud_Definition_ICrudDataHandler_2_DeleteAsync__1_System_Nullable_System_Threading_CancellationToken__
  name: DeleteAsync(TIdType, CancellationToken?)
  nameWithType: ICrudDataHandler<TEntity, TIdType>.DeleteAsync(TIdType, CancellationToken?)
  fullName: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler<TEntity, TIdType>.DeleteAsync(TIdType, System.Threading.CancellationToken?)
  nameWithType.vb: ICrudDataHandler(Of TEntity, TIdType).DeleteAsync(TIdType, CancellationToken?)
  fullName.vb: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler(Of TEntity, TIdType).DeleteAsync(TIdType, System.Threading.CancellationToken?)
  spec.csharp:
  - uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{`0,`2}.DeleteAsync(`2,System.Nullable{System.Threading.CancellationToken})
    name: DeleteAsync
    href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html#Quickie_DataHandlers_Crud_Definition_ICrudDataHandler_2_DeleteAsync__1_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TIdType
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler{`0,`2}.DeleteAsync(`2,System.Nullable{System.Threading.CancellationToken})
    name: DeleteAsync
    href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html#Quickie_DataHandlers_Crud_Definition_ICrudDataHandler_2_DeleteAsync__1_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TIdType
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj}
  commentId: T:System.Threading.Tasks.Task{Quickie.DataObj.ResponseObj}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ResponseObj>
  nameWithType: Task<ResponseObj>
  fullName: System.Threading.Tasks.Task<Quickie.DataObj.ResponseObj>
  nameWithType.vb: Task(Of ResponseObj)
  fullName.vb: System.Threading.Tasks.Task(Of Quickie.DataObj.ResponseObj)
  name.vb: Task(Of ResponseObj)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Quickie.DataObj.ResponseObj
    name: ResponseObj
    href: Quickie.DataObj.ResponseObj.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Quickie.DataObj.ResponseObj
    name: ResponseObj
    href: Quickie.DataObj.ResponseObj.html
  - name: )
- uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2.DeleteAsync(`1,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2.DeleteAsync(`1,System.Nullable{System.Threading.CancellationToken})
  isExternal: true
  href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html#Quickie_DataHandlers_Crud_Definition_ICrudDataHandler_2_DeleteAsync__1_System_Nullable_System_Threading_CancellationToken__
  name: DeleteAsync(TIdType, CancellationToken?)
  nameWithType: ICrudDataHandler<TEntity, TIdType>.DeleteAsync(TIdType, CancellationToken?)
  fullName: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler<TEntity, TIdType>.DeleteAsync(TIdType, System.Threading.CancellationToken?)
  nameWithType.vb: ICrudDataHandler(Of TEntity, TIdType).DeleteAsync(TIdType, CancellationToken?)
  fullName.vb: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler(Of TEntity, TIdType).DeleteAsync(TIdType, System.Threading.CancellationToken?)
  spec.csharp:
  - uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2.DeleteAsync(`1,System.Nullable{System.Threading.CancellationToken})
    name: DeleteAsync
    href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html#Quickie_DataHandlers_Crud_Definition_ICrudDataHandler_2_DeleteAsync__1_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TIdType
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler`2.DeleteAsync(`1,System.Nullable{System.Threading.CancellationToken})
    name: DeleteAsync
    href: Quickie.DataHandlers.Crud.Definition.ICrudDataHandler-2.html#Quickie_DataHandlers_Crud_Definition_ICrudDataHandler_2_DeleteAsync__1_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - name: TIdType
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
