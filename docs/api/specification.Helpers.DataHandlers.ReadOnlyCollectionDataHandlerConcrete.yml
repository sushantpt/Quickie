### YamlMime:ManagedReference
items:
- uid: specification.Helpers.DataHandlers.ReadOnlyCollectionDataHandlerConcrete
  commentId: T:specification.Helpers.DataHandlers.ReadOnlyCollectionDataHandlerConcrete
  id: ReadOnlyCollectionDataHandlerConcrete
  parent: specification.Helpers.DataHandlers
  children:
  - specification.Helpers.DataHandlers.ReadOnlyCollectionDataHandlerConcrete.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  langs:
  - csharp
  - vb
  name: ReadOnlyCollectionDataHandlerConcrete
  nameWithType: ReadOnlyCollectionDataHandlerConcrete
  fullName: specification.Helpers.DataHandlers.ReadOnlyCollectionDataHandlerConcrete
  type: Class
  source:
    remote:
      path: tests/specification/Helpers/DataHandlers/ReadOnlyCollectionDataHandlerConcrete.cs
      branch: f-minimalapi
      repo: https://github.com/sushantpt/Quickie.git
    id: ReadOnlyCollectionDataHandlerConcrete
    path: ../tests/specification/Helpers/DataHandlers/ReadOnlyCollectionDataHandlerConcrete.cs
    startLine: 6
  assemblies:
  - specification
  namespace: specification.Helpers.DataHandlers
  syntax:
    content: 'public class ReadOnlyCollectionDataHandlerConcrete : ReadOnlyCollectionDataHandler<ReadOnlyEntityConcrete, DbContext, int>, IReadOnlyCollectionDataHandler<ReadOnlyEntityConcrete, int>'
    content.vb: Public Class ReadOnlyCollectionDataHandlerConcrete Inherits ReadOnlyCollectionDataHandler(Of ReadOnlyEntityConcrete, DbContext, Integer) Implements IReadOnlyCollectionDataHandler(Of ReadOnlyEntityConcrete, Integer)
  inheritance:
  - System.Object
  - Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler{specification.Helpers.Entities.ReadOnlyEntityConcrete,Microsoft.EntityFrameworkCore.DbContext,System.Int32}
  implements:
  - Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler{specification.Helpers.Entities.ReadOnlyEntityConcrete,System.Int32}
  inheritedMembers:
  - Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler{specification.Helpers.Entities.ReadOnlyEntityConcrete,Microsoft.EntityFrameworkCore.DbContext,System.Int32}.GetByFilterAsync``1(System.Linq.Expressions.Expression{System.Func{specification.Helpers.Entities.ReadOnlyEntityConcrete,System.Boolean}},{TRequestModel},System.Nullable{System.Boolean},System.Nullable{System.Threading.CancellationToken})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: specification.Helpers.DataHandlers.ReadOnlyCollectionDataHandlerConcrete.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  commentId: M:specification.Helpers.DataHandlers.ReadOnlyCollectionDataHandlerConcrete.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  id: '#ctor(Microsoft.EntityFrameworkCore.DbContext)'
  parent: specification.Helpers.DataHandlers.ReadOnlyCollectionDataHandlerConcrete
  langs:
  - csharp
  - vb
  name: ReadOnlyCollectionDataHandlerConcrete(DbContext)
  nameWithType: ReadOnlyCollectionDataHandlerConcrete.ReadOnlyCollectionDataHandlerConcrete(DbContext)
  fullName: specification.Helpers.DataHandlers.ReadOnlyCollectionDataHandlerConcrete.ReadOnlyCollectionDataHandlerConcrete(Microsoft.EntityFrameworkCore.DbContext)
  type: Constructor
  source:
    remote:
      path: tests/specification/Helpers/DataHandlers/ReadOnlyCollectionDataHandlerConcrete.cs
      branch: f-minimalapi
      repo: https://github.com/sushantpt/Quickie.git
    id: .ctor
    path: ../tests/specification/Helpers/DataHandlers/ReadOnlyCollectionDataHandlerConcrete.cs
    startLine: 6
  assemblies:
  - specification
  namespace: specification.Helpers.DataHandlers
  syntax:
    content: public ReadOnlyCollectionDataHandlerConcrete(DbContext context)
    parameters:
    - id: context
      type: Microsoft.EntityFrameworkCore.DbContext
    content.vb: Public Sub New(context As DbContext)
  overload: specification.Helpers.DataHandlers.ReadOnlyCollectionDataHandlerConcrete.#ctor*
  nameWithType.vb: ReadOnlyCollectionDataHandlerConcrete.New(DbContext)
  fullName.vb: specification.Helpers.DataHandlers.ReadOnlyCollectionDataHandlerConcrete.New(Microsoft.EntityFrameworkCore.DbContext)
  name.vb: New(DbContext)
references:
- uid: specification.Helpers.DataHandlers
  commentId: N:specification.Helpers.DataHandlers
  href: specification.html
  name: specification.Helpers.DataHandlers
  nameWithType: specification.Helpers.DataHandlers
  fullName: specification.Helpers.DataHandlers
  spec.csharp:
  - uid: specification
    name: specification
    href: specification.html
  - name: .
  - uid: specification.Helpers
    name: Helpers
    href: specification.Helpers.html
  - name: .
  - uid: specification.Helpers.DataHandlers
    name: DataHandlers
    href: specification.Helpers.DataHandlers.html
  spec.vb:
  - uid: specification
    name: specification
    href: specification.html
  - name: .
  - uid: specification.Helpers
    name: Helpers
    href: specification.Helpers.html
  - name: .
  - uid: specification.Helpers.DataHandlers
    name: DataHandlers
    href: specification.Helpers.DataHandlers.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler{specification.Helpers.Entities.ReadOnlyEntityConcrete,Microsoft.EntityFrameworkCore.DbContext,System.Int32}
  commentId: T:Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler{specification.Helpers.Entities.ReadOnlyEntityConcrete,Microsoft.EntityFrameworkCore.DbContext,System.Int32}
  parent: Quickie.DataHandlers.Readonly.Implementation
  definition: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`3
  href: specification.Helpers.Entities.ReadOnlyEntityConcrete.html
  name: ReadOnlyCollectionDataHandler<ReadOnlyEntityConcrete, DbContext, int>
  nameWithType: ReadOnlyCollectionDataHandler<ReadOnlyEntityConcrete, DbContext, int>
  fullName: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler<specification.Helpers.Entities.ReadOnlyEntityConcrete, Microsoft.EntityFrameworkCore.DbContext, int>
  nameWithType.vb: ReadOnlyCollectionDataHandler(Of ReadOnlyEntityConcrete, DbContext, Integer)
  fullName.vb: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler(Of specification.Helpers.Entities.ReadOnlyEntityConcrete, Microsoft.EntityFrameworkCore.DbContext, Integer)
  name.vb: ReadOnlyCollectionDataHandler(Of ReadOnlyEntityConcrete, DbContext, Integer)
  spec.csharp:
  - uid: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`3
    name: ReadOnlyCollectionDataHandler
  - name: <
  - uid: specification.Helpers.Entities.ReadOnlyEntityConcrete
    name: ReadOnlyEntityConcrete
    href: specification.Helpers.Entities.ReadOnlyEntityConcrete.html
  - name: ','
  - name: " "
  - uid: Microsoft.EntityFrameworkCore.DbContext
    name: DbContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`3
    name: ReadOnlyCollectionDataHandler
  - name: (
  - name: Of
  - name: " "
  - uid: specification.Helpers.Entities.ReadOnlyEntityConcrete
    name: ReadOnlyEntityConcrete
    href: specification.Helpers.Entities.ReadOnlyEntityConcrete.html
  - name: ','
  - name: " "
  - uid: Microsoft.EntityFrameworkCore.DbContext
    name: DbContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler{specification.Helpers.Entities.ReadOnlyEntityConcrete,System.Int32}
  commentId: T:Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler{specification.Helpers.Entities.ReadOnlyEntityConcrete,System.Int32}
  parent: Quickie.DataHandlers.Readonly.Definition
  definition: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler`2
  href: specification.Helpers.Entities.ReadOnlyEntityConcrete.html
  name: IReadOnlyCollectionDataHandler<ReadOnlyEntityConcrete, int>
  nameWithType: IReadOnlyCollectionDataHandler<ReadOnlyEntityConcrete, int>
  fullName: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler<specification.Helpers.Entities.ReadOnlyEntityConcrete, int>
  nameWithType.vb: IReadOnlyCollectionDataHandler(Of ReadOnlyEntityConcrete, Integer)
  fullName.vb: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler(Of specification.Helpers.Entities.ReadOnlyEntityConcrete, Integer)
  name.vb: IReadOnlyCollectionDataHandler(Of ReadOnlyEntityConcrete, Integer)
  spec.csharp:
  - uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler`2
    name: IReadOnlyCollectionDataHandler
  - name: <
  - uid: specification.Helpers.Entities.ReadOnlyEntityConcrete
    name: ReadOnlyEntityConcrete
    href: specification.Helpers.Entities.ReadOnlyEntityConcrete.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler`2
    name: IReadOnlyCollectionDataHandler
  - name: (
  - name: Of
  - name: " "
  - uid: specification.Helpers.Entities.ReadOnlyEntityConcrete
    name: ReadOnlyEntityConcrete
    href: specification.Helpers.Entities.ReadOnlyEntityConcrete.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler{specification.Helpers.Entities.ReadOnlyEntityConcrete,Microsoft.EntityFrameworkCore.DbContext,System.Int32}.GetByFilterAsync``1(System.Linq.Expressions.Expression{System.Func{specification.Helpers.Entities.ReadOnlyEntityConcrete,System.Boolean}},{TRequestModel},System.Nullable{System.Boolean},System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler{specification.Helpers.Entities.ReadOnlyEntityConcrete,Microsoft.EntityFrameworkCore.DbContext,System.Int32}.GetByFilterAsync``1(System.Linq.Expressions.Expression{System.Func{specification.Helpers.Entities.ReadOnlyEntityConcrete,System.Boolean}},``0,System.Nullable{System.Boolean},System.Nullable{System.Threading.CancellationToken})
  parent: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler{specification.Helpers.Entities.ReadOnlyEntityConcrete,Microsoft.EntityFrameworkCore.DbContext,System.Int32}
  definition: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`3.GetByFilterAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},``0,System.Nullable{System.Boolean},System.Nullable{System.Threading.CancellationToken})
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: GetByFilterAsync<TRequestModel>(Expression<Func<ReadOnlyEntityConcrete, bool>>, TRequestModel, bool?, CancellationToken?)
  nameWithType: ReadOnlyCollectionDataHandler<ReadOnlyEntityConcrete, DbContext, int>.GetByFilterAsync<TRequestModel>(Expression<Func<ReadOnlyEntityConcrete, bool>>, TRequestModel, bool?, CancellationToken?)
  fullName: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler<specification.Helpers.Entities.ReadOnlyEntityConcrete, Microsoft.EntityFrameworkCore.DbContext, int>.GetByFilterAsync<TRequestModel>(System.Linq.Expressions.Expression<System.Func<specification.Helpers.Entities.ReadOnlyEntityConcrete, bool>>, TRequestModel, bool?, System.Threading.CancellationToken?)
  nameWithType.vb: ReadOnlyCollectionDataHandler(Of ReadOnlyEntityConcrete, DbContext, Integer).GetByFilterAsync(Of TRequestModel)(Expression(Of Func(Of ReadOnlyEntityConcrete, Boolean)), TRequestModel, Boolean?, CancellationToken?)
  fullName.vb: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler(Of specification.Helpers.Entities.ReadOnlyEntityConcrete, Microsoft.EntityFrameworkCore.DbContext, Integer).GetByFilterAsync(Of TRequestModel)(System.Linq.Expressions.Expression(Of System.Func(Of specification.Helpers.Entities.ReadOnlyEntityConcrete, Boolean)), TRequestModel, Boolean?, System.Threading.CancellationToken?)
  name.vb: GetByFilterAsync(Of TRequestModel)(Expression(Of Func(Of ReadOnlyEntityConcrete, Boolean)), TRequestModel, Boolean?, CancellationToken?)
  spec.csharp:
  - uid: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler{specification.Helpers.Entities.ReadOnlyEntityConcrete,Microsoft.EntityFrameworkCore.DbContext,System.Int32}.GetByFilterAsync``1(System.Linq.Expressions.Expression{System.Func{specification.Helpers.Entities.ReadOnlyEntityConcrete,System.Boolean}},``0,System.Nullable{System.Boolean},System.Nullable{System.Threading.CancellationToken})
    name: GetByFilterAsync
  - name: <
  - name: TRequestModel
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: specification.Helpers.Entities.ReadOnlyEntityConcrete
    name: ReadOnlyEntityConcrete
    href: specification.Helpers.Entities.ReadOnlyEntityConcrete.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - name: TRequestModel
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler{specification.Helpers.Entities.ReadOnlyEntityConcrete,Microsoft.EntityFrameworkCore.DbContext,System.Int32}.GetByFilterAsync``1(System.Linq.Expressions.Expression{System.Func{specification.Helpers.Entities.ReadOnlyEntityConcrete,System.Boolean}},``0,System.Nullable{System.Boolean},System.Nullable{System.Threading.CancellationToken})
    name: GetByFilterAsync
  - name: (
  - name: Of
  - name: " "
  - name: TRequestModel
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: specification.Helpers.Entities.ReadOnlyEntityConcrete
    name: ReadOnlyEntityConcrete
    href: specification.Helpers.Entities.ReadOnlyEntityConcrete.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - name: TRequestModel
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`3
  commentId: T:Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`3
  href: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler-3.html
  name: ReadOnlyCollectionDataHandler<TEntity, TDbContext, TIdType>
  nameWithType: ReadOnlyCollectionDataHandler<TEntity, TDbContext, TIdType>
  fullName: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler<TEntity, TDbContext, TIdType>
  nameWithType.vb: ReadOnlyCollectionDataHandler(Of TEntity, TDbContext, TIdType)
  fullName.vb: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler(Of TEntity, TDbContext, TIdType)
  name.vb: ReadOnlyCollectionDataHandler(Of TEntity, TDbContext, TIdType)
  spec.csharp:
  - uid: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`3
    name: ReadOnlyCollectionDataHandler
    href: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler-3.html
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TDbContext
  - name: ','
  - name: " "
  - name: TIdType
  - name: '>'
  spec.vb:
  - uid: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`3
    name: ReadOnlyCollectionDataHandler
    href: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler-3.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TDbContext
  - name: ','
  - name: " "
  - name: TIdType
  - name: )
- uid: Quickie.DataHandlers.Readonly.Implementation
  commentId: N:Quickie.DataHandlers.Readonly.Implementation
  href: Quickie.html
  name: Quickie.DataHandlers.Readonly.Implementation
  nameWithType: Quickie.DataHandlers.Readonly.Implementation
  fullName: Quickie.DataHandlers.Readonly.Implementation
  spec.csharp:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.DataHandlers
    name: DataHandlers
    href: Quickie.DataHandlers.html
  - name: .
  - uid: Quickie.DataHandlers.Readonly
    name: Readonly
    href: Quickie.DataHandlers.Readonly.html
  - name: .
  - uid: Quickie.DataHandlers.Readonly.Implementation
    name: Implementation
    href: Quickie.DataHandlers.Readonly.Implementation.html
  spec.vb:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.DataHandlers
    name: DataHandlers
    href: Quickie.DataHandlers.html
  - name: .
  - uid: Quickie.DataHandlers.Readonly
    name: Readonly
    href: Quickie.DataHandlers.Readonly.html
  - name: .
  - uid: Quickie.DataHandlers.Readonly.Implementation
    name: Implementation
    href: Quickie.DataHandlers.Readonly.Implementation.html
- uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler`2
  commentId: T:Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler`2
  href: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler-2.html
  name: IReadOnlyCollectionDataHandler<TEntity, TIdType>
  nameWithType: IReadOnlyCollectionDataHandler<TEntity, TIdType>
  fullName: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler<TEntity, TIdType>
  nameWithType.vb: IReadOnlyCollectionDataHandler(Of TEntity, TIdType)
  fullName.vb: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler(Of TEntity, TIdType)
  name.vb: IReadOnlyCollectionDataHandler(Of TEntity, TIdType)
  spec.csharp:
  - uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler`2
    name: IReadOnlyCollectionDataHandler
    href: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler-2.html
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TIdType
  - name: '>'
  spec.vb:
  - uid: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler`2
    name: IReadOnlyCollectionDataHandler
    href: Quickie.DataHandlers.Readonly.Definition.IReadOnlyCollectionDataHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TIdType
  - name: )
- uid: Quickie.DataHandlers.Readonly.Definition
  commentId: N:Quickie.DataHandlers.Readonly.Definition
  href: Quickie.html
  name: Quickie.DataHandlers.Readonly.Definition
  nameWithType: Quickie.DataHandlers.Readonly.Definition
  fullName: Quickie.DataHandlers.Readonly.Definition
  spec.csharp:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.DataHandlers
    name: DataHandlers
    href: Quickie.DataHandlers.html
  - name: .
  - uid: Quickie.DataHandlers.Readonly
    name: Readonly
    href: Quickie.DataHandlers.Readonly.html
  - name: .
  - uid: Quickie.DataHandlers.Readonly.Definition
    name: Definition
    href: Quickie.DataHandlers.Readonly.Definition.html
  spec.vb:
  - uid: Quickie
    name: Quickie
    href: Quickie.html
  - name: .
  - uid: Quickie.DataHandlers
    name: DataHandlers
    href: Quickie.DataHandlers.html
  - name: .
  - uid: Quickie.DataHandlers.Readonly
    name: Readonly
    href: Quickie.DataHandlers.Readonly.html
  - name: .
  - uid: Quickie.DataHandlers.Readonly.Definition
    name: Definition
    href: Quickie.DataHandlers.Readonly.Definition.html
- uid: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`3.GetByFilterAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},``0,System.Nullable{System.Boolean},System.Nullable{System.Threading.CancellationToken})
  commentId: M:Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`3.GetByFilterAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},``0,System.Nullable{System.Boolean},System.Nullable{System.Threading.CancellationToken})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: GetByFilterAsync<TRequestModel>(Expression<Func<TEntity, bool>>, TRequestModel, bool?, CancellationToken?)
  nameWithType: ReadOnlyCollectionDataHandler<TEntity, TDbContext, TIdType>.GetByFilterAsync<TRequestModel>(Expression<Func<TEntity, bool>>, TRequestModel, bool?, CancellationToken?)
  fullName: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler<TEntity, TDbContext, TIdType>.GetByFilterAsync<TRequestModel>(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, TRequestModel, bool?, System.Threading.CancellationToken?)
  nameWithType.vb: ReadOnlyCollectionDataHandler(Of TEntity, TDbContext, TIdType).GetByFilterAsync(Of TRequestModel)(Expression(Of Func(Of TEntity, Boolean)), TRequestModel, Boolean?, CancellationToken?)
  fullName.vb: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler(Of TEntity, TDbContext, TIdType).GetByFilterAsync(Of TRequestModel)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), TRequestModel, Boolean?, System.Threading.CancellationToken?)
  name.vb: GetByFilterAsync(Of TRequestModel)(Expression(Of Func(Of TEntity, Boolean)), TRequestModel, Boolean?, CancellationToken?)
  spec.csharp:
  - uid: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`3.GetByFilterAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},``0,System.Nullable{System.Boolean},System.Nullable{System.Threading.CancellationToken})
    name: GetByFilterAsync
  - name: <
  - name: TRequestModel
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - name: TRequestModel
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: Quickie.DataHandlers.Readonly.Implementation.ReadOnlyCollectionDataHandler`3.GetByFilterAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},``0,System.Nullable{System.Boolean},System.Nullable{System.Threading.CancellationToken})
    name: GetByFilterAsync
  - name: (
  - name: Of
  - name: " "
  - name: TRequestModel
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - name: TRequestModel
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: specification.Helpers.DataHandlers.ReadOnlyCollectionDataHandlerConcrete.#ctor*
  commentId: Overload:specification.Helpers.DataHandlers.ReadOnlyCollectionDataHandlerConcrete.#ctor
  href: specification.Helpers.DataHandlers.ReadOnlyCollectionDataHandlerConcrete.html#specification_Helpers_DataHandlers_ReadOnlyCollectionDataHandlerConcrete__ctor_Microsoft_EntityFrameworkCore_DbContext_
  name: ReadOnlyCollectionDataHandlerConcrete
  nameWithType: ReadOnlyCollectionDataHandlerConcrete.ReadOnlyCollectionDataHandlerConcrete
  fullName: specification.Helpers.DataHandlers.ReadOnlyCollectionDataHandlerConcrete.ReadOnlyCollectionDataHandlerConcrete
  nameWithType.vb: ReadOnlyCollectionDataHandlerConcrete.New
  fullName.vb: specification.Helpers.DataHandlers.ReadOnlyCollectionDataHandlerConcrete.New
  name.vb: New
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
